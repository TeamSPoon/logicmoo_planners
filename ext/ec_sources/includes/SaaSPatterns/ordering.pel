:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/input.e',5).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/ordering.pel')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(ecalc).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/ordering.pel')).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/input.e',5).
% [rule,time]
 % Happens(E_MatchRuleParametters(rule), time) | Happens(E_DontMatchRuleParametters(rule), time) -> time = 0.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/ordering.e',1).
happens_at(e_matchRuleParametters(Rule), Time);happens_at(e_dontMatchRuleParametters(Rule), Time) ->
    Time=0.


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/ordering.e',3).
% [rule,time]
 % Happens(EDeny(rule), time) | Happens(Epermit(rule), time) | Happens(ERuleDoesNotApply(rule), time) -> time = 1.
happens_at(eDeny(Rule), Time);happens_at(epermit(Rule), Time);happens_at(eRuleDoesNotApply(Rule), Time) ->
    Time=1.


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/ordering.e',5).
%;[policy,time] Happens(E_policyPermit(policy), time) | Happens(E_policyDeny(policy), time) | Happens(E_PolicyDoesNotApply(policy),time) -> time = 2.
%;[policyset,time] Happens(E_policysetPermit(policyset), time) | Happens(E_policysetDeny(policyset), time) | Happens(E_policysetDontApply(policyset),time) -> time = 3.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/ordering.e',7).
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/ordering.pel')).
