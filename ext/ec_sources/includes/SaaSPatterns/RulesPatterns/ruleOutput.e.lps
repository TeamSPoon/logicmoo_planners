:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ruleModel.e',56).
% translate: unskipped  File: /pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ruleOutput.e.lps 
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
% translate: begining  File: /pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ruleOutput.e.lps 
% Fri, 09 Oct 2020 15:14:47 GMT File: <stream>(0x5625a95aa300)

% fluent F_RuleDenied(rule)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ruleOutput.e',1).
% From E: 
% 
% fluent(
%    f_ruleDenied(rule)).
fluents([f_ruleDenied/1]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ruleOutput.e',1).
% From E: 
% 
% mpred_prop(
%    f_ruleDenied(rule), 
%    fluent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ruleOutput.e',1).
mpred_prop(f_ruleDenied(rule),fluent).

% fluent F_RulePermitted(rule)
% From E: 
% 
% fluent(
%    f_rulePermitted(rule)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ruleOutput.e',1).
fluents([f_rulePermitted/1]).
% From E: 
% 
% mpred_prop(
%    f_rulePermitted(rule), 
%    fluent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ruleOutput.e',1).
mpred_prop(f_rulePermitted(rule),fluent).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ruleOutput.e',4).
% event Epermit(rule)
% From E: 
% 
% event(
%    epermit(rule)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ruleOutput.e',4).
events([epermit/1]).
% From E: 
% 
% mpred_prop(
%    epermit(rule), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ruleOutput.e',4).
mpred_prop(epermit(rule),event).

% event EDeny(rule)
% From E: 
% 
% event(
%    eDeny(rule)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ruleOutput.e',4).
events([eDeny/1]).
% From E: 
% 
% mpred_prop(
%    eDeny(rule), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ruleOutput.e',4).
mpred_prop(eDeny(rule),event).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ruleOutput.e',7).
% [rule,time]
 % Initiates(EDeny(rule),F_RuleDenied(rule),time).
% From E: 
% 
% initiates(
%    eDeny(Rule), 
%    f_ruleDenied(Rule), 
%    Time).
eDeny(Rule)initiates f_ruleDenied(Rule).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ruleOutput.e',7).

 /*  initiated(happens(eDeny(Rule),Time_From,Time_Until),
   	  f_ruleDenied(Rule),
   	  []).
 */
 %  "% =================================".


% [rule,time]
 % Initiates(Epermit(rule),F_RulePermitted(rule),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ruleOutput.e',7).
% From E: 
% 
% initiates(
%    epermit(Rule), 
%    f_rulePermitted(Rule), 
%    Time).
epermit(Rule)initiates f_rulePermitted(Rule).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ruleOutput.e',7).

 /*  initiated(happens(epermit(Rule),Time_From,Time_Until),
   	  f_rulePermitted(Rule),
   	  []).
 */
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ruleOutput.e',11).
% [rule]
 % !HoldsAt(F_RulePermitted(rule),0).
% From E: 
% 
% initially(
%    neg(
%       f_rulePermitted(Rule))).
initially not f_rulePermitted(Rule).
 %  initial_state([not(f_rulePermitted(Rule))]).
 %  "% =================================".


% [rule]
 % !HoldsAt(F_RuleDenied(rule),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ruleOutput.e',11).
% From E: 
% 
% initially(
%    neg(
%       f_ruleDenied(Rule))).
initially not f_ruleDenied(Rule).
 %  initial_state([not(f_ruleDenied(Rule))]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ruleOutput.e',25).
%;[rule] HoldsAt(F_RulePermitted(rule),3) | HoldsAt(F_RuleDenied(rule),3).
%;[rule,time] Happens(RuleDeny(rule), time) |  Happens(RulePermit(rule), time) -> time=2.
% translate: ending  File: /pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ruleOutput.e.lps 
