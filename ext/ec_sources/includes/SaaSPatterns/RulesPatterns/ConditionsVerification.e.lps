:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/PolicySetPatterns/policySetModel.e',33).
% translate: unskipped  File: /pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ConditionsVerification.e.lps 
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
% translate: begining  File: /pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ConditionsVerification.e.lps 
% Fri, 09 Oct 2020 15:14:46 GMT File: <stream>(0x5625a97ce200)

% fluent F_ConditionSatisfied(rule)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ConditionsVerification.e',1).
% From E: 
% 
% fluent(
%    f_conditionSatisfied(rule)).
fluents([f_conditionSatisfied/1]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ConditionsVerification.e',1).
% From E: 
% 
% mpred_prop(
%    f_conditionSatisfied(rule), 
%    fluent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ConditionsVerification.e',1).
mpred_prop(f_conditionSatisfied(rule),fluent).


%;event E_ConditionSatisfied(rule)
%;[rule,time] Initiates(E_ConditionSatisfied(rule),F_ConditionSatisfied(rule),time).
%;[rule,time] Happens(E_ConditionSatisfied(rule),time) -> HoldsAt(F_TargetHolds(rule),time).
%;[rule,time] Happens(E_ConditionSatisfied(rule), time) -> !HoldsAt(F_ConditionSatisfied(rule),time).
% [rule]
 % HoldsAt(F_ConditionSatisfied(rule),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ConditionsVerification.e',11).
% From E: 
% 
% initially(
%    f_conditionSatisfied(Rule)).
initially f_conditionSatisfied(Rule).
 %  initial_state([f_conditionSatisfied(Rule)]).
 %  "% =================================".
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ConditionsVerification.e',13).
% translate: ending  File: /pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/RulesPatterns/ConditionsVerification.e.lps 
