:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e',57).
% From E: 
% 
% :-call_pel_directive(translate(unskipped,'/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e.lps')).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e.lps')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e',57).
% From E: 
% 
% :-call_pel_directive(translate(begining,'/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e.lps')).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e.lps')).
% Sat, 10 Oct 2020 15:32:01 GMT File: <stream>(0x559e4b325900)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Mueller:2004a,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "Event calculus reasoning through satisfiability",
%;   journal = "Journal of Logic and Computation",
%;   volume = "14",
%;   number = "5",
%;   pages = "703--730",
%; }
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',22).
% option encoding 3
% From E: 
% 
% :-call_pel_directive(option(encoding,3)).
:- call_pel_directive(option(encoding, 3)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',24).
% load foundations/Root.e
% From E: 
% 
% :-call_pel_directive(load('foundations/Root.e')).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',24).
% From E: 
% 
% :-call_pel_directive(load('foundations/EC.e')).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',27).
% sort person
% From E: 
% 
% sort(person).
sort(person).

% sort object
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',27).
% From E: 
% 
% sort(object).
sort(object).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',30).
% event Hold(person,object)
% From E: 
% 
% event(hold(person,object)).
mpred_prop(hold(person,object),event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',30).
events([hold/2]).

% fluent Holding(person,object)
% From E: 
% 
% fluent(holding(person,object)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',30).
mpred_prop(holding(person,object),fluent).
fluents([holding/2]).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',33).
% person P1
% From E: 
% 
% t(person,p1).
person(p1).

% object O1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',33).
% From E: 
% 
% t(object,o1).
object(o1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',36).
% Happens(Hold(P1,O1),0).
% From E: 
% 
% happens_at(hold(p1,o1),0).
observe hold(p1, o1)at 0.
 %  observe([hold(p1,o1)],0).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',38).
% [person,object,time]
% Initiates(Hold(person,object),Holding(person,object),time).
% From E: 
% 
% initiates_at(
%    hold(Person,Object), 
%    holding(Person,Object), 
%    Time).
 %   [Time].
hold(Person, Object)initiates holding(Person, Object).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',38).

 /*  initiated(happens(hold(Person,Object),
   		  Time_From,
   		  Time_Until),
   	  holding(Person,Object),
   	  []).
 */
 %  "% =================================".


% !HoldsAt(Holding(P1,O1),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',40).
% From E: 
% 
% holds_at(not(holding(p1,o1)),0).
initially not holding(p1, o1).
 %  initial_state([not(holding(p1,o1))]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',42).
%;;; AUTO !ReleasedAt(Holding(P1,O1),0).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',44).
% completion Happens
% From E: 
% 
% :-call_pel_directive(completion(happens_at)).
:- call_pel_directive(completion(happens_at)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',46).
% range time 0 1
% From E: 
% 
% :-call_pel_directive(range(time,0,1)).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',46).
% From E: 
% 
% :-call_pel_directive(range(offset,1,1)).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',49).
% From E: 
% 
% :-call_pel_directive(translate(ending,'/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e.lps')).
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e.lps')).
