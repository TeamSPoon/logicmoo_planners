:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e',57).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.pel')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(ecalc).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.pel')).
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Mueller:2004a,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "Event calculus reasoning through satisfiability",
%;   journal = "Journal of Logic and Computation",
%;   volume = "14",
%;   number = "5",
%;   pages = "703--730",
%; }
%;

% option encoding 3
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',22).
:- call_pel_directive(option(encoding, 3)).

% load foundations/Root.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',24).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:- call_pel_directive(load('foundations/EC.e')).

% sort person
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',27).
sort(person).

% sort object
sort(object).

% event Hold(person,object)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',30).
event(hold(person,object)).

% fluent Holding(person,object)
fluent(holding(person,object)).

% person P1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',33).
t(person,p1).

% object O1
t(object,o1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',36).
% Happens(Hold(P1,O1),0).
happens_at(hold(p1,o1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',38).
% [person,object,time]
% Initiates(Hold(person,object),Holding(person,object),time).
initiates_at(hold(Person,Object),
	     holding(Person,Object),
	     Time).


% !HoldsAt(Holding(P1,O1),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',40).
holds_at(not(holding(p1,o1)),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',42).
%;;; AUTO !ReleasedAt(Holding(P1,O1),0).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',44).
% completion Happens
:- call_pel_directive(completion(happens_at)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.e',46).
% range time 0 1
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2004a/Holding.pel')).
