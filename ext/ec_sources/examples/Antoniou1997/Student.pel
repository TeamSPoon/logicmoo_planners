:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(pfc).
% Wed, 01 Apr 2020 20:00:25 GMT
% From ../examples/Antoniou1997/Student.pel:4
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Dropout.e',48).

 /*  loading(load_e_pl,
   	'/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e').
 */
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; conflicting defaults: method (D)
%; \fullciteA[p. 157]{Antoniou:1997}
%;
%; @book{Antoniou:1997,
%;   author = "Grigoris Antoniou",
%;   year = "1997",
%;   title = "Nonmonotonic Reasoning",
%;   address = "Cambridge, MA",
%;   publisher = "MIT Press",
%; }
%;

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e:22
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',23).
% load foundations/Root.e
:- load_e('foundations/Root.e', changed).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e:23
% load foundations/EC.e
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',23).
:- load_e('foundations/EC.e', changed).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e:25
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',26).
% sort x
==> sort(x).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e:27
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',28).
% predicate Adult(x)
predicate(adult(x)).
==> mpred_prop(adult(x),predicate).
==> meta_argtypes(adult(x)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e:28
% predicate Student(x)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',28).
predicate(student(x)).
==> mpred_prop(student(x),predicate).
==> meta_argtypes(student(x)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e:29
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',30).
% predicate Employed(x)
predicate(employed(x)).
==> mpred_prop(employed(x),predicate).
==> meta_argtypes(employed(x)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e:30
% predicate Ab1(x)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',30).
predicate(ab1(x)).
==> mpred_prop(ab1(x),predicate).
==> meta_argtypes(ab1(x)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e:31
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',32).
% predicate Ab2(x)
predicate(ab2(x)).
==> mpred_prop(ab2(x),predicate).
==> meta_argtypes(ab2(x)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e:33
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',34).
% x Mary
==> t(x,mary).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e:35
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',36).
% Student(Mary).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], student(mary)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',36).
axiom(student(mary),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e:37
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',38).
% [x]
 % Adult(x) & !Ab1(x) -> Employed(x).

 /*  adult(X), not(ab1(X, Ab1_Ret)) ->
       employed(X).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',38).

 /*  employed(X) :-
       adult(X),
       not(ab1(X, Ab1_Ret)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',38).

 /*  [adult(X), not(ab1(X, Ab1_Ret))] ->
       ta(Ta_Param, tvs1=[], tvs2=[], employed(X)).
 */
axiom(employed(X),
    [adult(X), not(ab1(X, Ab1_Ret))]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',38).

 /*  not(adult(X)) :-
       not(ab1(X, Ab1_Ret)),
       not(employed(X)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',38).

 /*  [not(ab1(X, Ab1_Ret)), not(employed(X))] ->
       ta(Ta_Param3, tvs1=[], tvs2=[], not(adult(X))).
 */
axiom(not(adult(X)),
    [not(ab1(X, Ab1_Ret)), not(employed(X))]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',38).

 /*  ab1(X, Ab1_Ret) :-
       adult(X),
       not(employed(X)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',38).

 /*  [adult(X), not(employed(X))] ->
       ta(Ta_Param4, tvs1=[], tvs2=[], ab1(X, Ab1_Ret)).
 */
axiom(ab1(X, Ab1_Ret),
    [adult(X), not(employed(X))]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e:38
% [x]
 % Student(x) & !Ab2(x) -> !Employed(x).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',38).

 /*  student(X), not(ab2(X, Ab2_Ret)) ->
       not(employed(X)).
 */

 /*  not(employed(X)) :-
       student(X),
       not(ab2(X, Ab2_Ret)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',38).

 /*  [student(X), not(ab2(X, Ab2_Ret))] ->
       ta(Ta_Param, tvs1=[], tvs2=[], not(employed(X))).
 */
axiom(not(employed(X)),
    [student(X), not(ab2(X, Ab2_Ret))]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',38).

 /*  not(student(X)) :-
       not(ab2(X, Ab2_Ret)),
       employed(X).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',38).

 /*  [not(ab2(X, Ab2_Ret)), employed(X)] ->
       ta(Ta_Param3, tvs1=[], tvs2=[], not(student(X))).
 */
axiom(not(student(X)),
    [not(ab2(X, Ab2_Ret)), employed(X)]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',38).

 /*  ab2(X, Ab2_Ret) :-
       student(X),
       employed(X).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',38).

 /*  [student(X), employed(X)] ->
       ta(Ta_Param4, tvs1=[], tvs2=[], ab2(X, Ab2_Ret)).
 */
axiom(ab2(X, Ab2_Ret),
    [student(X), employed(X)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e:39
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',40).
% [x]
 % Student(x) -> Adult(x).

 /*  student(X) ->
       adult(X).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',40).

 /*  adult(X) :-
       student(X).
 */

 /*  [student(X)] ->
       ta(Ta_Param, tvs1=[], tvs2=[], adult(X)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',40).
axiom(adult(X),
    [student(X)]).

 /*  not(student(X)) :-
       not(adult(X)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',40).

 /*  [not(adult(X))] ->
       ta(Ta_Param2, tvs1=[], tvs2=[], not(student(X))).
 */
axiom(not(student(X)),
    [not(adult(X))]).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e:40
% Theta: 
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',40).
next_axiom_uses(theta).
 


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e:40
% [x]
 % Student(x) -> Ab1(x).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',40).

 /*  axiom_uses(theta) ->
       ( student(X)->ab1(X, Ab1_Ret)
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',40).

 /*  ab1(X, Ab1_Ret) :-
       student(X),
       axiom_uses(theta).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',40).

 /*  fix_axiom_head(Axiom_head_Ret) ->
       [axiom_uses(theta), ->, axiom_uses(theta, Axiom_head_Ret)].
 */

 /*  [student(X), axiom_uses(theta, Axiom_head_Ret)] ->
       ta(Axiom_head_Ret, tvs1=[], tvs2=[], ab1(X, Ab1_Ret)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',40).
axiom(ab1(X, Ab1_Ret),
    [student(X), axiom_uses(theta, Axiom_head_Ret)]).

 /*  not(student(X)) :-
       not(ab1(X, Ab1_Ret)),
       axiom_uses(theta).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',40).

 /*  fix_axiom_head(Axiom_head_Ret3) ->
       [axiom_uses(theta), ->, axiom_uses(theta, Axiom_head_Ret3)].
 */

 /*  [not(ab1(X, Ab1_Ret)), axiom_uses(theta, Axiom_head_Ret3)] ->
       ta(Axiom_head_Ret3, tvs1=[], tvs2=[], not(student(X))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',40).
axiom(not(student(X)),
    [not(ab1(X, Ab1_Ret)), axiom_uses(theta, Axiom_head_Ret3)]).

 /*  not(axiom_uses(theta)) :-
       not(ab1(X, Ab1_Ret)),
       student(X).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',40).

 /*  fix_axiom_head(Axiom_head_Ret4) ->
       [not(axiom_uses(theta)), ->, not(axiom_uses(theta, Axiom_head_Ret4))].
 */

 /*  [not(ab1(X, Ab1_Ret)), student(X)] ->
       ta(Axiom_head_Ret4,
          tvs1=[],
          tvs2=[],
          not(axiom_uses(theta, Axiom_head_Ret4))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',40).
axiom(not(axiom_uses(theta, Axiom_head_Ret4)),
    [not(ab1(X, Ab1_Ret)), student(X)]).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e:42
% range time 0 0
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',42).
==> range(time,0,0).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e:43
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',44).
% range offset 1 1
==> range(offset,1,1).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e:45
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',46).
% completion Theta Ab1
==> completion(theta).
==> completion(ab1).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e:46
% completion Theta Ab2
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Antoniou1997/Student.e',46).
==> completion(theta).
==> completion(ab2).
%; End of file.
