:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',48).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.pel')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(ecalc).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.pel')).
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; conflicting defaults: method (D)
%; \fullciteA[p. 157]{Antoniou:1997}
%;
%; @book{Antoniou:1997,
%;   author = "Grigoris Antoniou",
%;   year = "1997",
%;   title = "Nonmonotonic Reasoning",
%;   address = "Cambridge, MA",
%;   publisher = "MIT Press",
%; }
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',23).
% load foundations/Root.e
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',26).
% sort x
sort(x).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',28).
% predicate Adult(x)
predicate(adult(x)).

% predicate Student(x)
predicate(student(x)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',30).
% predicate Employed(x)
predicate(employed(x)).

% predicate Ab1(x)
predicate(ab1(x)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',32).
% predicate Ab2(x)
predicate(ab2(x)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',34).
% x Mary
t(x,mary).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',36).
% Student(Mary).
student(mary).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',38).
% [x]
 % Adult(x) & !Ab1(x) -> Employed(x).
adult(X), not(ab1(X)) ->
    employed(X).


% [x]
 % Student(x) & !Ab2(x) -> !Employed(x).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',38).
student(X), not(ab2(X)) ->
    not(employed(X)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',40).
% [x]
 % Student(x) -> Adult(x).
student(X) ->
    adult(X).

% Theta: 
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',40).
directive(theta).
 


% [x]
 % Student(x) -> Ab1(x).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',40).
student(X) ->
    ab1(X).

% range time 0 0
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',42).
:- call_pel_directive(range(time, 0, 0)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',44).
% range offset 1 1
:- call_pel_directive(range(offset, 1, 1)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',46).
% completion Theta Ab1
:- call_pel_directive(completion(theta)).
:- call_pel_directive(completion(ab1)).

% completion Theta Ab2
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',46).
:- call_pel_directive(completion(theta)).
:- call_pel_directive(completion(ab2)).
%; End of file.
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.pel')).
