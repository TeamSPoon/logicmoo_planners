:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',48).
% From E: 
% 
% :-call_pel_directive(translate(unskipped,'/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e.lps')).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e.lps')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',48).
% From E: 
% 
% :-call_pel_directive(translate(begining,'/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e.lps')).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e.lps')).
% Sat, 10 Oct 2020 14:56:22 GMT File: <stream>(0x5597f2b7eb00)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; conflicting defaults: method (D)
%; \fullciteA[p. 157]{Antoniou:1997}
%;
%; @book{Antoniou:1997,
%;   author = "Grigoris Antoniou",
%;   year = "1997",
%;   title = "Nonmonotonic Reasoning",
%;   address = "Cambridge, MA",
%;   publisher = "MIT Press",
%; }
%;

% load foundations/Root.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',23).
% From E: 
% 
% :-call_pel_directive(load('foundations/Root.e')).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',23).
% From E: 
% 
% :-call_pel_directive(load('foundations/EC.e')).
:- call_pel_directive(load('foundations/EC.e')).

% sort x
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',26).
% From E: 
% 
% sort(x).
sort(x).

% predicate Adult(x)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',28).
% From E: 
% 
% predicate(adult(x)).
mpred_prop(adult(x),predicate).
predicates([adult/1]).

% predicate Student(x)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',28).
% From E: 
% 
% predicate(student(x)).
mpred_prop(student(x),predicate).
predicates([student/1]).

% predicate Employed(x)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',30).
% From E: 
% 
% predicate(employed(x)).
mpred_prop(employed(x),predicate).
predicates([employed/1]).

% predicate Ab1(x)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',30).
% From E: 
% 
% predicate(ab1(x)).
mpred_prop(ab1(x),predicate).
predicates([ab1/1]).

% predicate Ab2(x)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',32).
% From E: 
% 
% predicate(ab2(x)).
mpred_prop(ab2(x),predicate).
predicates([ab2/1]).

% x Mary
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',34).
% From E: 
% 
% t(x,mary).
x(mary).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',36).
% Student(Mary).
% From E: 
% 
% student(mary).
student(mary).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',38).
% [x]
 % Adult(x) & !Ab1(x) -> Employed(x).
% From E: 
% 
% '->'(
%    (adult(X) , 
%     not(ab1(X))), 
%    employed(X)).
if adult(X), not ab1(X)then employed(X).
 %  reactive_rule([adult(X),not(ab1(X))],[employed(X)]).
 %  "% =================================".


% [x]
 % Student(x) & !Ab2(x) -> !Employed(x).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',38).
% From E: 
% 
% '->'(
%    (student(X) , 
%     not(ab2(X))), 
%    not(employed(X))).
if student(X), not ab2(X)then not employed(X).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',38).

 /*  reactive_rule([student(X),not(ab2(X))],
   	      [not(employed(X))]).
 */
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',40).
% [x]
 % Student(x) -> Adult(x).
% From E: 
% 
% '->'(
%    student(X), 
%    adult(X)).
if student(X)then adult(X).
 %  reactive_rule([student(X)],[adult(X)]).
 %  "% =================================".

% Theta: 
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',40).
% From E: 
% 
% directive(theta).
directive(theta).
 


% [x]
 % Student(x) -> Ab1(x).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',40).
% From E: 
% 
% '->'(
%    student(X), 
%    ab1(X)).
if student(X)then ab1(X).
 %  reactive_rule([student(X)],[ab1(X)]).
 %  "% =================================".

% range time 0 0
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',42).
% From E: 
% 
% :-call_pel_directive(range(time,0,0)).
:- call_pel_directive(range(time, 0, 0)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',44).
% range offset 1 1
% From E: 
% 
% :-call_pel_directive(range(offset,1,1)).
:- call_pel_directive(range(offset, 1, 1)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',46).
% completion Theta Ab1
% From E: 
% 
% :-call_pel_directive(completion(theta)).
:- call_pel_directive(completion(theta)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',46).
% From E: 
% 
% :-call_pel_directive(completion(ab1)).
:- call_pel_directive(completion(ab1)).

% completion Theta Ab2
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',46).
% From E: 
% 
% :-call_pel_directive(completion(theta)).
:- call_pel_directive(completion(theta)).
% From E: 
% 
% :-call_pel_directive(completion(ab2)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',46).
:- call_pel_directive(completion(ab2)).
%; End of file.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e',49).
% From E: 
% 
% :-call_pel_directive(translate(ending,'/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e.lps')).
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Student.e.lps')).
