:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooWorld.e',439).
% From E: 
% 
% :-call_pel_directive(translate(unskipped,'/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e.lps')).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e.lps')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooWorld.e',439).
% From E: 
% 
% :-call_pel_directive(translate(begining,'/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e.lps')).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e.lps')).
% Sat, 10 Oct 2020 15:31:50 GMT File: <stream>(0x559e4af4d800)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; dealing with conflicting defaults by adding conditions
%; to one of the conflicting rules
%; \fullciteA[p. 56]{Antoniou:1997}
%;
%; @book{Antoniou:1997,
%;   author = "Grigoris Antoniou",
%;   year = "1997",
%;   title = "Nonmonotonic Reasoning",
%;   address = "Cambridge, MA",
%;   publisher = "MIT Press",
%; }
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',24).
% load foundations/Root.e
% From E: 
% 
% :-call_pel_directive(load('foundations/Root.e')).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',24).
% From E: 
% 
% :-call_pel_directive(load('foundations/EC.e')).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',27).
% sort x
% From E: 
% 
% sort(x).
sort(x).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',29).
% predicate Dropout(x)
% From E: 
% 
% predicate(dropout(x)).
mpred_prop(dropout(x),predicate).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',29).
predicates([dropout/1]).

% predicate Adult(x)
% From E: 
% 
% predicate(adult(x)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',29).
mpred_prop(adult(x),predicate).
predicates([adult/1]).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',31).
% predicate Employed(x)
% From E: 
% 
% predicate(employed(x)).
mpred_prop(employed(x),predicate).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',31).
predicates([employed/1]).

% predicate Ab1(x)
% From E: 
% 
% predicate(ab1(x)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',31).
mpred_prop(ab1(x),predicate).
predicates([ab1/1]).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',33).
% predicate Ab2(x)
% From E: 
% 
% predicate(ab2(x)).
mpred_prop(ab2(x),predicate).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',33).
predicates([ab2/1]).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',35).
% x Bill
% From E: 
% 
% t(x,bill).
x(bill).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',37).
% Dropout(Bill).
% From E: 
% 
% dropout(bill).
dropout(bill).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',39).
% [x]
 % Dropout(x) & !Ab1(x) -> Adult(x).
% From E: 
% 
% '->'(
%    (dropout(X) , 
%     not(ab1(X))), 
%    adult(X)).
if dropout(X), not ab1(X)then adult(X).
 %  reactive_rule([dropout(X),not(ab1(X))],[adult(X)]).
 %  "% =================================".


% [x]
 % Adult(x) & !Dropout(x) & !Ab2(x) -> Employed(x).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',39).
% From E: 
% 
% '->'(
%    (adult(X) , 
%      not(dropout(X)) , 
%     not(ab2(X))), 
%    employed(X)).
if adult(X), not dropout(X), not ab2(X)then employed(X).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',39).

 /*  reactive_rule([adult(X),not(dropout(X)),not(ab2(X))],
   	      [employed(X)]).
 */
 %  "% =================================".

% range time 0 0
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',41).
% From E: 
% 
% :-call_pel_directive(range(time,0,0)).
:- call_pel_directive(range(time, 0, 0)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',43).
% range offset 1 1
% From E: 
% 
% :-call_pel_directive(range(offset,1,1)).
:- call_pel_directive(range(offset, 1, 1)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',45).
% completion Theta Ab1
% From E: 
% 
% :-call_pel_directive(completion(theta)).
:- call_pel_directive(completion(theta)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',45).
% From E: 
% 
% :-call_pel_directive(completion(ab1)).
:- call_pel_directive(completion(ab1)).

% completion Theta Ab2
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',45).
% From E: 
% 
% :-call_pel_directive(completion(theta)).
:- call_pel_directive(completion(theta)).
% From E: 
% 
% :-call_pel_directive(completion(ab2)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',45).
:- call_pel_directive(completion(ab2)).
%; End of file.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e',48).
% From E: 
% 
% :-call_pel_directive(translate(ending,'/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e.lps')).
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/Antoniou1997/Dropout.e.lps')).
