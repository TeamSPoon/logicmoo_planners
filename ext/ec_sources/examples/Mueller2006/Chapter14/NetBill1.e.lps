:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter13/Postdiction.e',37).
% translate: unskipped  File: /pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e.lps 
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
% translate: begining  File: /pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e.lps 
% Fri, 09 Oct 2020 15:14:02 GMT File: <stream>(0x5625a97d0000)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @inproceedings{SirbuTygar:1995,
%;   author = "Marvin A. Sirbu and J. D. Tygar",
%;   year = "1995",
%;   title = "Net\uppercase{B}ill: An \uppercase{I}nternet commerce system optimized for network delivered services",
%;   editor = "
%;   booktitle = "40th \uppercase{IEEE} \uppercase{C}omputer \uppercase{S}ociety \uppercase{I}nternational \uppercase{C}onference",
%;   pages = "20--25",
%;   publisher = "
%;   address = "
%; }
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',31).
% option modeldiff on
:- if(is_e_toplevel).
:- set_ec_option(modeldiff, on).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',33).
% load foundations/Root.e
:- if(is_e_toplevel).
:- load_e_cond('foundations/Root.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/foundations/Root.e',changed).
:- endif.

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',33).
:- if(is_e_toplevel).
:- load_e_cond('foundations/EC.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/foundations/EC.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',36).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

% agent MusicStore, Jen
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',36).
% From E: 
% 
% t(agent,musicStore).
agent(musicStore).
% From E: 
% 
% t(agent,jen).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',36).
agent(jen).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',39).
% sort product
% From E: 
% 
% sort(product).
sort(product).

% product BritneyCD
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',39).
% From E: 
% 
% t(product,britneyCD).
product(britneyCD).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',42).
% sort f
% From E: 
% 
% sort(f).
sort(f).

% f PurchaseRequestedJenMusicStoreBritneyCD1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',42).
% From E: 
% 
% t(f,purchaseRequestedJenMusicStoreBritneyCD1).
f(purchaseRequestedJenMusicStoreBritneyCD1).

 /*  l_int(holds(f(purchaseRequestedJenMusicStoreBritneyCD1),Time_At),
         []).
 */
 %  "% =================================".

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',44).
% f DeliveredMusicStoreJenBritneyCD
% From E: 
% 
% t(f,deliveredMusicStoreJenBritneyCD).
f(deliveredMusicStoreJenBritneyCD).
 %  l_int(holds(f(deliveredMusicStoreJenBritneyCD),Time_At),[]).
 %  "% =================================".

% f EPOSentJenMusicStore1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',44).
% From E: 
% 
% t(f,ePOSentJenMusicStore1).
f(ePOSentJenMusicStore1).
 %  l_int(holds(f(ePOSentJenMusicStore1),Time_At),[]).
 %  "% =================================".

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',47).
% sort amount: integer
% From E: 
% 
% subsort(amount,integer).
subsort(amount,integer).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',49).
% fluent C(agent,agent,f)
% From E: 
% 
% fluent(
%    c(agent,agent,f)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',49).
fluents([c/3]).
% From E: 
% 
% mpred_prop(
%    c(agent,agent,f), 
%    fluent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',49).
mpred_prop(c(agent,agent,f),fluent).

% fluent CC(agent,agent,f,f)
% From E: 
% 
% fluent(
%    cc(agent,agent,f,f)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',49).
fluents([cc/4]).
% From E: 
% 
% mpred_prop(
%    cc(agent,agent,f,f), 
%    fluent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',49).
mpred_prop(cc(agent,agent,f,f),fluent).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',52).
% event CreateC(agent,agent,f)
% From E: 
% 
% event(
%    createC(agent,agent,f)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',52).
events([createC/3]).
% From E: 
% 
% mpred_prop(
%    createC(agent,agent,f), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',52).
mpred_prop(createC(agent,agent,f),event).

% event CreateCC(agent,agent,f,f)
% From E: 
% 
% event(
%    createCC(agent,agent,f,f)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',52).
events([createCC/4]).
% From E: 
% 
% mpred_prop(
%    createCC(agent,agent,f,f), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',52).
mpred_prop(createCC(agent,agent,f,f),event).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',54).
% event DischargeC(agent,agent,f)
% From E: 
% 
% event(
%    dischargeC(agent,agent,f)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',54).
events([dischargeC/3]).
% From E: 
% 
% mpred_prop(
%    dischargeC(agent,agent,f), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',54).
mpred_prop(dischargeC(agent,agent,f),event).

% event DischargeCC(agent,agent,f,f)
% From E: 
% 
% event(
%    dischargeCC(agent,agent,f,f)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',54).
events([dischargeCC/4]).
% From E: 
% 
% mpred_prop(
%    dischargeCC(agent,agent,f,f), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',54).
mpred_prop(dischargeCC(agent,agent,f,f),event).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',57).
% fluent QuoteSent(agent,agent,product,amount)
% From E: 
% 
% fluent(
%    quoteSent(agent,agent,product,amount)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',57).
fluents([quoteSent/4]).
% From E: 
% 
% mpred_prop(
%    quoteSent(agent,agent,product,amount), 
%    fluent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',57).
mpred_prop(quoteSent(agent,agent,product,amount),fluent).

% fluent PurchaseRequested(agent,agent,product,amount)
% From E: 
% 
% fluent(
%    purchaseRequested(agent,agent,product,amount)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',57).
fluents([purchaseRequested/4]).
% From E: 
% 
% mpred_prop(
%    purchaseRequested(agent,agent,product,amount), 
%    fluent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',57).
mpred_prop(purchaseRequested(agent,agent,product,amount),fluent).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',59).
% fluent Delivered(agent,agent,product)
% From E: 
% 
% fluent(
%    delivered(agent,agent,product)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',59).
fluents([delivered/3]).
% From E: 
% 
% mpred_prop(
%    delivered(agent,agent,product), 
%    fluent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',59).
mpred_prop(delivered(agent,agent,product),fluent).

% fluent EPOSent(agent,agent,amount)
% From E: 
% 
% fluent(
%    ePOSent(agent,agent,amount)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',59).
fluents([ePOSent/3]).
% From E: 
% 
% mpred_prop(
%    ePOSent(agent,agent,amount), 
%    fluent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',59).
mpred_prop(ePOSent(agent,agent,amount),fluent).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',62).
% event SendQuote(agent,agent,product,amount)
% From E: 
% 
% event(
%    sendQuote(agent,agent,product,amount)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',62).
events([sendQuote/4]).
% From E: 
% 
% mpred_prop(
%    sendQuote(agent,agent,product,amount), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',62).
mpred_prop(sendQuote(agent,agent,product,amount),event).

% event RequestPurchase(agent,agent,product,amount)
% From E: 
% 
% event(
%    requestPurchase(agent,agent,product,amount)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',62).
events([requestPurchase/4]).
% From E: 
% 
% mpred_prop(
%    requestPurchase(agent,agent,product,amount), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',62).
mpred_prop(requestPurchase(agent,agent,product,amount),event).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',64).
% event Deliver(agent,agent,product)
% From E: 
% 
% event(
%    deliver(agent,agent,product)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',64).
events([deliver/3]).
% From E: 
% 
% mpred_prop(
%    deliver(agent,agent,product), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',64).
mpred_prop(deliver(agent,agent,product),event).

% event SendEPO(agent,agent,amount)
% From E: 
% 
% event(
%    sendEPO(agent,agent,amount)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',64).
events([sendEPO/3]).
% From E: 
% 
% mpred_prop(
%    sendEPO(agent,agent,amount), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',64).
mpred_prop(sendEPO(agent,agent,amount),event).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',67).
%; Sigma
% [agent1,agent2,f,time]
% Initiates(CreateC(agent1,agent2,f),C(agent1,agent2,f),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',69).
% From E: 
% 
% initiates(
%    createC(Agent1,Agent2,F), 
%    c(Agent1,Agent2,F), 
%    Time).
createC(Agent1, Agent2, F)initiates c(Agent1, Agent2, F).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',69).

 /*  initiated(happens(createC(Agent1,Agent2,F),
   		  Time_From,
   		  Time_Until),
   	  c(Agent1,Agent2,F),
   	  []).
 */
 %  "% =================================".


% [agent1,agent2,f1,f2,time]
% Initiates(CreateCC(agent1,agent2,f1,f2),CC(agent1,agent2,f1,f2),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',73).
% From E: 
% 
% initiates(
%    createCC(Agent1,Agent2,F1,F2), 
%    cc(Agent1,Agent2,F1,F2), 
%    Time).
createCC(Agent1, Agent2, F1, F2)initiates cc(Agent1, Agent2, F1, F2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',73).

 /*  initiated(happens(createCC(Agent1,Agent2,F1,F2),
   		  Time_From,
   		  Time_Until),
   	  cc(Agent1,Agent2,F1,F2),
   	  []).
 */
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',75).
% [agent1,agent2,f,time]
% Terminates(DischargeC(agent1,agent2,f),C(agent1,agent2,f),time).
% From E: 
% 
% terminates(
%    dischargeC(Agent1,Agent2,F), 
%    c(Agent1,Agent2,F), 
%    Time).
dischargeC(Agent1, Agent2, F)terminates c(Agent1, Agent2, F).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',75).

 /*  terminated(happens(dischargeC(Agent1,Agent2,F),
   		   Time_From,
   		   Time_Until),
   	   c(Agent1,Agent2,F),
   	   []).
 */
 %  "% =================================".


% [agent1,agent2,f1,f2,time]
% Terminates(DischargeCC(agent1,agent2,f1,f2),CC(agent1,agent2,f1,f2),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',79).
% From E: 
% 
% terminates(
%    dischargeCC(Agent1,Agent2,F1,F2), 
%    cc(Agent1,Agent2,F1,F2), 
%    Time).
dischargeCC(Agent1, Agent2, F1, F2)terminates cc(Agent1, Agent2, F1, F2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',79).

 /*  terminated(happens(dischargeCC(Agent1,
   			       Agent2,
   			       F1,
   			       F2),
   		   Time_From,
   		   Time_Until),
   	   cc(Agent1,Agent2,F1,F2),
   	   []).
 */
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',81).
% [agent1,agent2,product,amount,time]
% Initiates(SendQuote(agent1,agent2,product,amount),
%           QuoteSent(agent1,agent2,product,amount),
%           time).
% From E: 
% 
% initiates(
%    sendQuote(Agent1,Agent2,Product,Amount), 
%    quoteSent(Agent1,Agent2,Product,Amount), 
%    Time).
sendQuote(Agent1, Agent2, Product, Amount)initiates quoteSent(Agent1, Agent2, Product, Amount).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',81).

 /*  initiated(happens(sendQuote(Agent1,
   			    Agent2,
   			    Product,
   			    Amount),
   		  Time_From,
   		  Time_Until),
   	  quoteSent(Agent1,
   		    Agent2,
   		    Product,
   		    Amount),
   	  []).
 */
 %  "% =================================".


% [agent1,agent2,product,amount,time]
% Initiates(RequestPurchase(agent1,agent2,product,amount),
%           PurchaseRequested(agent1,agent2,product,amount),
%           time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',87).
% From E: 
% 
% initiates(
%    requestPurchase(Agent1,Agent2,Product,Amount), 
%    purchaseRequested(Agent1,Agent2,Product,Amount), 
%    Time).
requestPurchase(Agent1, Agent2, Product, Amount)initiates purchaseRequested(Agent1, Agent2, Product, Amount).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',87).

 /*  initiated(happens(requestPurchase(Agent1,
   				  Agent2,
   				  Product,
   				  Amount),
   		  Time_From,
   		  Time_Until),
   	  purchaseRequested(Agent1,
   			    Agent2,
   			    Product,
   			    Amount),
   	  []).
 */
 %  "% =================================".


% [agent1,agent2,product,time]
% Initiates(Deliver(agent1,agent2,product),
%           Delivered(agent1,agent2,product),
%           time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',92).
% From E: 
% 
% initiates(
%    deliver(Agent1,Agent2,Product), 
%    delivered(Agent1,Agent2,Product), 
%    Time).
deliver(Agent1, Agent2, Product)initiates delivered(Agent1, Agent2, Product).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',92).

 /*  initiated(happens(deliver(Agent1,Agent2,Product),
   		  Time_From,
   		  Time_Until),
   	  delivered(Agent1,Agent2,Product),
   	  []).
 */
 %  "% =================================".


% [agent1,agent2,amount,time]
% Initiates(SendEPO(agent1,agent2,amount),
%           EPOSent(agent1,agent2,amount),
%           time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',97).
% From E: 
% 
% initiates(
%    sendEPO(Agent1,Agent2,Amount), 
%    ePOSent(Agent1,Agent2,Amount), 
%    Time).
sendEPO(Agent1, Agent2, Amount)initiates ePOSent(Agent1, Agent2, Amount).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',97).

 /*  initiated(happens(sendEPO(Agent1,Agent2,Amount),
   		  Time_From,
   		  Time_Until),
   	  ePOSent(Agent1,Agent2,Amount),
   	  []).
 */
 %  "% =================================".


% [agent1,agent2,product,amount,f1,f2,time]
% agent1=% MusicStore &
% agent2=Jen &
% product=BritneyCD &
% amount=1 &
% f1=PurchaseRequestedJenMusicStoreBritneyCD1 &
% f2=DeliveredMusicStoreJenBritneyCD ->
% Initiates(SendQuote(agent1,agent2,product,amount),
%           CC(agent1,agent2,f1,f2),
%           time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',102).
% From E: 
% 
% '->'(
%    ','(
%       equals(Agent1,musicStore), 
%       ','(
%          equals(Agent2,jen), 
%          ','(
%             equals(Product,britneyCD), 
%             ','(
%                equals(Amount,1), 
%                ','(
%                   equals(F1,purchaseRequestedJenMusicStoreBritneyCD1), 
%                   equals(F2,deliveredMusicStoreJenBritneyCD)))))), 
%    initiates(
%       sendQuote(Agent1,Agent2,Product,Amount), 
%       cc(Agent1,Agent2,F1,F2), 
%       Time)).
sendQuote(Agent1, Agent2, Product, Amount)initiates cc(Agent1, Agent2, F1, F2)at Time if equals(Agent1, musicStore), equals(Agent2, jen), equals(Product, britneyCD), equals(Amount, 1), equals(F1, purchaseRequestedJenMusicStoreBritneyCD1), equals(F2, deliveredMusicStoreJenBritneyCD).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',102).

 /*  initiated(happens(sendQuote(Agent1,
   			    Agent2,
   			    Product,
   			    Amount),
   		  Time_From,
   		  Time_Until),
   	  at(cc(Agent1,Agent2,F1,F2),
   	     Time),
   	  [ equals(Agent1,musicStore),
   	    equals(Agent2,jen),
   	    equals(Product,britneyCD),
   	    equals(Amount,1),
   	    equals(F1,purchaseRequestedJenMusicStoreBritneyCD1),
   	    equals(F2,deliveredMusicStoreJenBritneyCD)
   	  ]).
 */
 %  "% =================================".


% [agent1,agent2,product,amount,f1,f2,time]
% agent1=% Jen &
% agent2=MusicStore &
% product=BritneyCD &
% amount=1 &
% f1=DeliveredMusicStoreJenBritneyCD &
% f2=EPOSentJenMusicStore1 &
% !HoldsAt(Delivered(agent2,agent1,product),time) ->
% Initiates(RequestPurchase(agent1,agent2,product,amount),
%           CC(agent1,agent2,f1,f2),
%           time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',113).
% From E: 
% 
% '->'(
%    ','(
%       equals(Agent1,jen), 
%       ','(
%          equals(Agent2,musicStore), 
%          ','(
%             equals(Product,britneyCD), 
%             ','(
%                equals(Amount,1), 
%                ','(
%                   equals(F1,deliveredMusicStoreJenBritneyCD), 
%                   ','(
%                      equals(F2,ePOSentJenMusicStore1), 
%                      holds_at(
%                         not(
%                            delivered(Agent2,Agent1,Product)), 
%                         Time))))))), 
%    initiates(
%       requestPurchase(Agent1,Agent2,Product,Amount), 
%       cc(Agent1,Agent2,F1,F2), 
%       Time)).
requestPurchase(Agent1, Agent2, Product, Amount)initiates cc(Agent1, Agent2, F1, F2)at Time if equals(Agent1, jen), equals(Agent2, musicStore), equals(Product, britneyCD), equals(Amount, 1), equals(F1, deliveredMusicStoreJenBritneyCD), equals(F2, ePOSentJenMusicStore1), not delivered(Agent2, Agent1, Product)at Time.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',113).

 /*  initiated(happens(requestPurchase(Agent1,
   				  Agent2,
   				  Product,
   				  Amount),
   		  Time,
   		  Time_Until),
   	  at(cc(Agent1,Agent2,F1,F2),
   	     Time),
   	  [ equals(Agent1,jen),
   	    equals(Agent2,musicStore),
   	    equals(Product,britneyCD),
   	    equals(Amount,1),
   	    equals(F1,deliveredMusicStoreJenBritneyCD),
   	    equals(F2,ePOSentJenMusicStore1),
   	    holds(not(delivered(Agent2,
   				Agent1,
   				Product)),
   		  Time)
   	  ]).
 */
 %  "% =================================".


%; Delta

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',126).
% Delta: 
 


% [time]
% HoldsAt(CC(MusicStore,Jen,PurchaseRequestedJenMusicStoreBritneyCD1,DeliveredMusicStoreJenBritneyCD),time) &
% HoldsAt(PurchaseRequested(Jen,MusicStore,BritneyCD,1),time) ->
% Happens(CreateC(MusicStore,Jen,DeliveredMusicStoreJenBritneyCD),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',126).
% From E: 
% 
% '->'(
%    axiom_uses(delta,Time), 
%    '->'(
%       ','(
%          holds_at(
%             cc(musicStore,jen,purchaseRequestedJenMusicStoreBritneyCD1,deliveredMusicStoreJenBritneyCD), 
%             Time), 
%          holds_at(
%             purchaseRequested(jen,musicStore,britneyCD,1), 
%             Time)), 
%       createC(musicStore,jen,deliveredMusicStoreJenBritneyCD))).
if axiom_uses(delta, Time)then createC(musicStore, jen, deliveredMusicStoreJenBritneyCD)if cc(musicStore, jen, purchaseRequestedJenMusicStoreBritneyCD1, deliveredMusicStoreJenBritneyCD)at Time, purchaseRequested(jen, musicStore, britneyCD, 1)at Time.
 %  reactive_rule([axiom_uses(delta, Time)], [if(createC(musicStore, jen, deliveredMusicStoreJenBritneyCD),  (at(cc(musicStore, jen, purchaseRequestedJenMusicStoreBritneyCD1, deliveredMusicStoreJenBritneyCD), Time), at(purchaseRequested(jen, musicStore, britneyCD, 1), Time)))]).
 %  "% =================================".

% Delta: 
 


% [time]
% HoldsAt(CC(MusicStore,Jen,PurchaseRequestedJenMusicStoreBritneyCD1,DeliveredMusicStoreJenBritneyCD),time) &
% HoldsAt(PurchaseRequested(Jen, MusicStore, BritneyCD, 1),time) ->
% Happens(DischargeCC(MusicStore,Jen,PurchaseRequestedJenMusicStoreBritneyCD1,DeliveredMusicStoreJenBritneyCD),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',132).
% From E: 
% 
% '->'(
%    axiom_uses(delta,Time), 
%    '->'(
%       ','(
%          holds_at(
%             cc(musicStore,jen,purchaseRequestedJenMusicStoreBritneyCD1,deliveredMusicStoreJenBritneyCD), 
%             Time), 
%          holds_at(
%             purchaseRequested(jen,musicStore,britneyCD,1), 
%             Time)), 
%       dischargeCC(musicStore,jen,purchaseRequestedJenMusicStoreBritneyCD1,deliveredMusicStoreJenBritneyCD))).
if axiom_uses(delta, Time)then dischargeCC(musicStore, jen, purchaseRequestedJenMusicStoreBritneyCD1, deliveredMusicStoreJenBritneyCD)if cc(musicStore, jen, purchaseRequestedJenMusicStoreBritneyCD1, deliveredMusicStoreJenBritneyCD)at Time, purchaseRequested(jen, musicStore, britneyCD, 1)at Time.
 %  reactive_rule([axiom_uses(delta, Time)], [if(dischargeCC(musicStore, jen, purchaseRequestedJenMusicStoreBritneyCD1, deliveredMusicStoreJenBritneyCD),  (at(cc(musicStore, jen, purchaseRequestedJenMusicStoreBritneyCD1, deliveredMusicStoreJenBritneyCD), Time), at(purchaseRequested(jen, musicStore, britneyCD, 1), Time)))]).
 %  "% =================================".

% Delta: 
 


% [time]
% HoldsAt(CC(Jen, MusicStore, DeliveredMusicStoreJenBritneyCD, EPOSentJenMusicStore1),time) &
% HoldsAt(Delivered(MusicStore,Jen,BritneyCD),time) ->
% Happens(CreateC(Jen,MusicStore,EPOSentJenMusicStore1),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',137).
% From E: 
% 
% '->'(
%    axiom_uses(delta,Time), 
%    '->'(
%       ','(
%          holds_at(
%             cc(jen,musicStore,deliveredMusicStoreJenBritneyCD,ePOSentJenMusicStore1), 
%             Time), 
%          holds_at(
%             delivered(musicStore,jen,britneyCD), 
%             Time)), 
%       createC(jen,musicStore,ePOSentJenMusicStore1))).
if axiom_uses(delta, Time)then createC(jen, musicStore, ePOSentJenMusicStore1)if cc(jen, musicStore, deliveredMusicStoreJenBritneyCD, ePOSentJenMusicStore1)at Time, delivered(musicStore, jen, britneyCD)at Time.
 %  reactive_rule([axiom_uses(delta, Time)], [if(createC(jen, musicStore, ePOSentJenMusicStore1),  (at(cc(jen, musicStore, deliveredMusicStoreJenBritneyCD, ePOSentJenMusicStore1), Time), at(delivered(musicStore, jen, britneyCD), Time)))]).
 %  "% =================================".

% Delta: 
 


% [time]
% HoldsAt(CC(Jen, MusicStore, DeliveredMusicStoreJenBritneyCD, EPOSentJenMusicStore1),time) &
% HoldsAt(Delivered(MusicStore,Jen,BritneyCD),time) ->
% Happens(DischargeCC(Jen,MusicStore,DeliveredMusicStoreJenBritneyCD, EPOSentJenMusicStore1),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',142).
% From E: 
% 
% '->'(
%    axiom_uses(delta,Time), 
%    '->'(
%       ','(
%          holds_at(
%             cc(jen,musicStore,deliveredMusicStoreJenBritneyCD,ePOSentJenMusicStore1), 
%             Time), 
%          holds_at(
%             delivered(musicStore,jen,britneyCD), 
%             Time)), 
%       dischargeCC(jen,musicStore,deliveredMusicStoreJenBritneyCD,ePOSentJenMusicStore1))).
if axiom_uses(delta, Time)then dischargeCC(jen, musicStore, deliveredMusicStoreJenBritneyCD, ePOSentJenMusicStore1)if cc(jen, musicStore, deliveredMusicStoreJenBritneyCD, ePOSentJenMusicStore1)at Time, delivered(musicStore, jen, britneyCD)at Time.
 %  reactive_rule([axiom_uses(delta, Time)], [if(dischargeCC(jen, musicStore, deliveredMusicStoreJenBritneyCD, ePOSentJenMusicStore1),  (at(cc(jen, musicStore, deliveredMusicStoreJenBritneyCD, ePOSentJenMusicStore1), Time), at(delivered(musicStore, jen, britneyCD), Time)))]).
 %  "% =================================".

% Delta: 
 


% [time]
% HoldsAt(C(MusicStore,Jen,DeliveredMusicStoreJenBritneyCD),time) &
% HoldsAt(Delivered(MusicStore,Jen,BritneyCD),time) ->
% Happens(DischargeC(MusicStore,Jen,DeliveredMusicStoreJenBritneyCD),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',147).
% From E: 
% 
% '->'(
%    axiom_uses(delta,Time), 
%    '->'(
%       ','(
%          holds_at(
%             c(musicStore,jen,deliveredMusicStoreJenBritneyCD), 
%             Time), 
%          holds_at(
%             delivered(musicStore,jen,britneyCD), 
%             Time)), 
%       dischargeC(musicStore,jen,deliveredMusicStoreJenBritneyCD))).
if axiom_uses(delta, Time)then dischargeC(musicStore, jen, deliveredMusicStoreJenBritneyCD)if c(musicStore, jen, deliveredMusicStoreJenBritneyCD)at Time, delivered(musicStore, jen, britneyCD)at Time.
 %  reactive_rule([axiom_uses(delta, Time)], [if(dischargeC(musicStore, jen, deliveredMusicStoreJenBritneyCD),  (at(c(musicStore, jen, deliveredMusicStoreJenBritneyCD), Time), at(delivered(musicStore, jen, britneyCD), Time)))]).
 %  "% =================================".

% Delta: 
 


% [time]
% HoldsAt(C(Jen,MusicStore,EPOSentJenMusicStore1),time) &
% HoldsAt(EPOSent(Jen,MusicStore,1),time) ->
% Happens(DischargeC(Jen,MusicStore,EPOSentJenMusicStore1),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',152).
% From E: 
% 
% '->'(
%    axiom_uses(delta,Time), 
%    '->'(
%       ','(
%          holds_at(
%             c(jen,musicStore,ePOSentJenMusicStore1), 
%             Time), 
%          holds_at(
%             ePOSent(jen,musicStore,1), 
%             Time)), 
%       dischargeC(jen,musicStore,ePOSentJenMusicStore1))).
if axiom_uses(delta, Time)then dischargeC(jen, musicStore, ePOSentJenMusicStore1)if c(jen, musicStore, ePOSentJenMusicStore1)at Time, ePOSent(jen, musicStore, 1)at Time.
 %  reactive_rule([axiom_uses(delta, Time)], [if(dischargeC(jen, musicStore, ePOSentJenMusicStore1),  (at(c(jen, musicStore, ePOSentJenMusicStore1), Time), at(ePOSent(jen, musicStore, 1), Time)))]).
 %  "% =================================".

% Delta: 
 


% Happens(SendQuote(MusicStore,Jen,BritneyCD,1),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',155).
% From E: 
% 
% '->'(
%    axiom_uses(delta,Axiom_Uses), 
%    happens(
%       sendQuote(musicStore,jen,britneyCD,1), 
%       t+0)).
if axiom_uses(delta, _)then observe sendQuote(musicStore, jen, britneyCD, 1)at t+0.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',155).

 /*  reactive_rule([axiom_uses(delta,Axiom_Uses)],
   	      [observe(at(sendQuote(musicStore,jen,britneyCD,1),t+0))]).
 */
 %  "% =================================".

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',157).
% Delta: 
 


% Happens(RequestPurchase(Jen,MusicStore,BritneyCD,1),1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',157).
% From E: 
% 
% '->'(
%    axiom_uses(delta,Axiom_Uses), 
%    happens(
%       requestPurchase(jen,musicStore,britneyCD,1), 
%       t+1)).
if axiom_uses(delta, _)then observe requestPurchase(jen, musicStore, britneyCD, 1)at t+1.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',157).

 /*  reactive_rule([axiom_uses(delta,Axiom_Uses)],
   	      [ observe(at(requestPurchase(jen,musicStore,britneyCD,1),
   			   t+1))
   	      ]).
 */
 %  "% =================================".

% Delta: 
 


% Happens(Deliver(MusicStore,Jen,BritneyCD),3).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',157).
% From E: 
% 
% '->'(
%    axiom_uses(delta,Axiom_Uses), 
%    happens(
%       deliver(musicStore,jen,britneyCD), 
%       t+3)).
if axiom_uses(delta, _)then observe deliver(musicStore, jen, britneyCD)at t+3.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',157).

 /*  reactive_rule([axiom_uses(delta,Axiom_Uses)],
   	      [observe(at(deliver(musicStore,jen,britneyCD),t+3))]).
 */
 %  "% =================================".

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',159).
% Delta: 
 


% Happens(SendEPO(Jen,MusicStore,1),5).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',159).
% From E: 
% 
% '->'(
%    axiom_uses(delta,Axiom_Uses), 
%    happens(
%       sendEPO(jen,musicStore,1), 
%       t+5)).
if axiom_uses(delta, _)then observe sendEPO(jen, musicStore, 1)at t+5.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',159).

 /*  reactive_rule([axiom_uses(delta,Axiom_Uses)],
   	      [observe(at(sendEPO(jen,musicStore,1),t+5))]).
 */
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',161).
%; Gamma
% [agent1,agent2,product,amount]
% !HoldsAt(QuoteSent(agent1,agent2,product,amount),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',163).
% From E: 
% 
% initially(
%    neg(
%       quoteSent(Agent1,Agent2,Product,Amount))).
initially not quoteSent(Agent1, Agent2, Product, Amount).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',163).

 /*  initial_state([ not(quoteSent(Agent1,
   			      Agent2,
   			      Product,
   			      Amount))
   	      ]).
 */
 %  "% =================================".


% [agent1,agent2,product,amount]
% !HoldsAt(PurchaseRequested(agent1,agent2,product,amount),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',167).
% From E: 
% 
% initially(
%    neg(
%       purchaseRequested(Agent1,Agent2,Product,Amount))).
initially not purchaseRequested(Agent1, Agent2, Product, Amount).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',167).

 /*  initial_state([ not(purchaseRequested(Agent1,
   				      Agent2,
   				      Product,
   				      Amount))
   	      ]).
 */
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',169).
% [agent1,agent2,product]
% !HoldsAt(Delivered(agent1,agent2,product),0).
% From E: 
% 
% initially(
%    neg(
%       delivered(Agent1,Agent2,Product))).
initially not delivered(Agent1, Agent2, Product).
 %  initial_state([not(delivered(Agent1,Agent2,Product))]).
 %  "% =================================".


% [agent1,agent2,f]
% !HoldsAt(C(agent1,agent2,f),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',173).
% From E: 
% 
% initially(
%    neg(
%       c(Agent1,Agent2,F))).
initially not c(Agent1, Agent2, F).
 %  initial_state([not(c(Agent1,Agent2,F))]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',175).
% [agent1,agent2,f1,f2]
% !HoldsAt(CC(agent1,agent2,f1,f2),0).
% From E: 
% 
% initially(
%    neg(
%       cc(Agent1,Agent2,F1,F2))).
initially not cc(Agent1, Agent2, F1, F2).
 %  initial_state([not(cc(Agent1,Agent2,F1,F2))]).
 %  "% =================================".


% [agent1,agent2,amount]
% !HoldsAt(EPOSent(agent1,agent2,amount),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',179).
% From E: 
% 
% initially(
%    neg(
%       ePOSent(Agent1,Agent2,Amount))).
initially not ePOSent(Agent1, Agent2, Amount).
 %  initial_state([not(ePOSent(Agent1,Agent2,Amount))]).
 %  "% =================================".

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',181).
% completion Delta Happens
% From E: 
% 
% completion(delta).
completion(delta).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',181).
% From E: 
% 
% completion(happens).
completion(happens).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',183).
% range time 0 7
% From E: 
% 
% range(time,0,7).
range(time,0,7).

% range offset 1 1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',183).
% From E: 
% 
% range(offset,1,1).
range(offset,1,1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e',185).
% range amount 1 1
% From E: 
% 
% range(amount,1,1).
range(amount,1,1).
%; End of file.
% translate: ending  File: /pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter14/NetBill1.e.lps 
