:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',130).
% translate: unskipped  File: /pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e.lps 
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
% translate: begining  File: /pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e.lps 
% Fri, 09 Oct 2020 15:14:26 GMT File: <stream>(0x5625a9768000)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; Example: Carrying a Book (Effect Axioms)
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',23).
% option modeldiff on
:- if(is_e_toplevel).
:- set_ec_option(modeldiff, on).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',25).
% load foundations/Root.e
:- if(is_e_toplevel).
:- load_e_cond('foundations/Root.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/foundations/Root.e',changed).
:- endif.

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',25).
:- if(is_e_toplevel).
:- load_e_cond('foundations/EC.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/foundations/EC.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',28).
% sort object
% From E: 
% 
% sort(object).
sort(object).

% sort agent: object
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',28).
% From E: 
% 
% subsort(agent,object).
subsort(agent,object).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',30).
% sort room
% From E: 
% 
% sort(room).
sort(room).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',32).
% object Book
% From E: 
% 
% t(object,book).
object(book).

% agent Nathan
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',32).
% From E: 
% 
% t(agent,nathan).
agent(nathan).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',34).
% room LivingRoom, Kitchen
% From E: 
% 
% t(room,livingRoom).
room(livingRoom).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',34).
% From E: 
% 
% t(room,kitchen).
room(kitchen).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',36).
% event LetGoOf(agent,object)
% From E: 
% 
% event(
%    letGoOf(agent,object)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',36).
events([letGoOf/2]).
% From E: 
% 
% mpred_prop(
%    letGoOf(agent,object), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',36).
mpred_prop(letGoOf(agent,object),event).

% event PickUp(agent,object)
% From E: 
% 
% event(
%    pickUp(agent,object)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',36).
events([pickUp/2]).
% From E: 
% 
% mpred_prop(
%    pickUp(agent,object), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',36).
mpred_prop(pickUp(agent,object),event).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',38).
% event Walk(agent,room,room)
% From E: 
% 
% event(
%    walk(agent,room,room)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',38).
events([walk/3]).
% From E: 
% 
% mpred_prop(
%    walk(agent,room,room), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',38).
mpred_prop(walk(agent,room,room),event).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',40).
% fluent InRoom(object,room)
% From E: 
% 
% fluent(
%    inRoom(object,room)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',40).
fluents([inRoom/2]).
% From E: 
% 
% mpred_prop(
%    inRoom(object,room), 
%    fluent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',40).
mpred_prop(inRoom(object,room),fluent).

% fluent Holding(agent,object)
% From E: 
% 
% fluent(
%    holding(agent,object)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',40).
fluents([holding/2]).
% From E: 
% 
% mpred_prop(
%    holding(agent,object), 
%    fluent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',40).
mpred_prop(holding(agent,object),fluent).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',43).
%; Sigma
% [agent,room1,room2,time]
% Initiates(Walk(agent,room1,room2),InRoom(agent,room2),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',45).
% From E: 
% 
% initiates(
%    walk(Agent,Room1,Room2), 
%    inRoom(Agent,Room2), 
%    Time).
walk(Agent, Room1, Room2)initiates inRoom(Agent, Room2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',45).

 /*  initiated(happens(walk(Agent,Room1,Room2),
   		  Time_From,
   		  Time_Until),
   	  inRoom(Agent,Room2),
   	  []).
 */
 %  "% =================================".


% [agent,room1,room2,time]
% room1!=% room2 ->
% Terminates(Walk(agent,room1,room2),InRoom(agent,room1),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',49).
% From E: 
% 
% '->'(
%    {}(
%       dif(Room1,Room2)), 
%    terminates(
%       walk(Agent,Room1,Room2), 
%       inRoom(Agent,Room1), 
%       Time)).
walk(Agent, Room1, Room2)terminates inRoom(Agent, Room1)at Time if {dif(Room1, Room2)}.

 /*  terminated(happens(walk(Agent,Room1,Room2),
   		   Time_From,
   		   Time_Until),
   	   at(inRoom(Agent,Room1),Time),
   	   [{dif(Room1,Room2)}]).
 */
 %  "% =================================".


% [agent,object,room,time]
% HoldsAt(InRoom(agent,room),time) &
% HoldsAt(InRoom(object,room),time) ->
% Initiates(PickUp(agent,object),Holding(agent,object),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',53).
% From E: 
% 
% '->'(
%    ','(
%       holds_at(
%          inRoom(Agent,Room), 
%          Time), 
%       holds_at(
%          inRoom(Object,Room), 
%          Time)), 
%    initiates(
%       pickUp(Agent,Object), 
%       holding(Agent,Object), 
%       Time)).
pickUp(Agent, Object)initiates holding(Agent, Object)at Time if inRoom(Agent, Room)at Time, inRoom(Object, Room)at Time.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',53).

 /*  initiated(happens(pickUp(Agent,Object),
   		  Time_From,
   		  Time_Until),
   	  at(holding(Agent,Object),Time),
   	  [ holds(inRoom(Agent,Room),Time),
   	    holds(inRoom(Object,Room),Time)
   	  ]).
 */
 %  "% =================================".


% [agent,object,time]
% HoldsAt(Holding(agent,object),time) ->
% Terminates(LetGoOf(agent,object),Holding(agent,object),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',58).
% From E: 
% 
% '->'(
%    holds_at(
%       holding(Agent,Object), 
%       Time), 
%    terminates(
%       letGoOf(Agent,Object), 
%       holding(Agent,Object), 
%       Time)).
letGoOf(Agent, Object)terminates holding(Agent, Object)at Time if holding(Agent, Object)at Time.

 /*  terminated(happens(letGoOf(Agent,Object),
   		   Time,
   		   Time_Until),
   	   at(holding(Agent,Object),Time),
   	   [holds(holding(Agent,Object),Time)]).
 */
 %  "% =================================".


% [agent,object,room1,room2,time]
% HoldsAt(Holding(agent,object),time) ->
% Initiates(Walk(agent,room1,room2),InRoom(object,room2),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',62).
% From E: 
% 
% '->'(
%    holds_at(
%       holding(Agent,Object), 
%       Time), 
%    initiates(
%       walk(Agent,Room1,Room2), 
%       inRoom(Object,Room2), 
%       Time)).
walk(Agent, Room1, Room2)initiates inRoom(Object, Room2)at Time if holding(Agent, Object)at Time.

 /*  initiated(happens(walk(Agent,Room1,Room2),
   		  Time,
   		  Time_Until),
   	  at(inRoom(Object,Room2),Time),
   	  [holds(holding(Agent,Object),Time)]).
 */
 %  "% =================================".


% [agent,object,room1,room2,time]
% HoldsAt(Holding(agent,object),time) &
% room1!=room2 ->
% Terminates(Walk(agent,room1,room2),InRoom(object,room1),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',66).
% From E: 
% 
% '->'(
%    ','(
%       holds_at(
%          holding(Agent,Object), 
%          Time), 
%       {}(
%          dif(Room1,Room2))), 
%    terminates(
%       walk(Agent,Room1,Room2), 
%       inRoom(Object,Room1), 
%       Time)).
walk(Agent, Room1, Room2)terminates inRoom(Object, Room1)at Time if holding(Agent, Object)at Time, {dif(Room1, Room2)}.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',66).

 /*  terminated(happens(walk(Agent,Room1,Room2),
   		   Time_From,
   		   Time_Until),
   	   at(inRoom(Object,Room1),Time),
   	   [ holds(holding(Agent,Object),Time),
   	     {dif(Room1,Room2)}
   	   ]).
 */
 %  "% =================================".


%; Delta


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',72).
% Happens(PickUp(Nathan,Book),0).
% From E: 
% 
% happens(
%    pickUp(nathan,book), 
%    t+0).
observe pickUp(nathan, book)at t+0.
 %  observe([pickUp(nathan,book)],t+0).
 %  "% =================================".


% Happens(Walk(Nathan,LivingRoom,Kitchen),1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',72).
% From E: 
% 
% happens(
%    walk(nathan,livingRoom,kitchen), 
%    t+1).
observe walk(nathan, livingRoom, kitchen)at t+1.
 %  observe([walk(nathan,livingRoom,kitchen)],t+1).
 %  "% =================================".


%; Psi
% [object,room1,room2,time]
% HoldsAt(InRoom(object,room1),time) &
% HoldsAt(InRoom(object,room2),time) ->
% room1=room2.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',77).
% From E: 
% 
% '->'(
%    ','(
%       holds_at(
%          inRoom(Object,Room1), 
%          Time), 
%       holds_at(
%          inRoom(Object,Room2), 
%          Time)), 
%    equals(Room1,Room2)).
if inRoom(Object, Room1)at Time, inRoom(Object, Room2)at Time then equals(Room1, Room2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',77).

 /*  reactive_rule([ holds(inRoom(Object,Room1),Time),
   		holds(inRoom(Object,Room2),Time)
   	      ],
   	      [equals(Room1,Room2)]).
 */
 %  "% =================================".


%; Gamma


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',84).
% HoldsAt(InRoom(Nathan,LivingRoom),0).
% From E: 
% 
% initially(
%    inRoom(nathan,livingRoom)).
initially inRoom(nathan, livingRoom).
 %  initial_state([inRoom(nathan,livingRoom)]).
 %  "% =================================".


% HoldsAt(InRoom(Book,LivingRoom),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',84).
% From E: 
% 
% initially(
%    inRoom(book,livingRoom)).
initially inRoom(book, livingRoom).
 %  initial_state([inRoom(book,livingRoom)]).
 %  "% =================================".


%; added:


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',88).
% !HoldsAt(Holding(Nathan,Book),0).
% From E: 
% 
% initially(
%    neg(
%       holding(nathan,book))).
initially not holding(nathan, book).
 %  initial_state([not(holding(nathan,book))]).
 %  "% =================================".


% [agent,time]
 % !HoldsAt(Holding(agent,agent),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',88).
% From E: 
% 
% holds_at(
%    neg(
%       holding(Agent,Agent)), 
%    Time).
not holding(Agent, Agent)at Time.
 %  l_int(holds(not(holding(Agent,Agent)),Time),[]).
 %  "% =================================".

% completion Happens
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',90).
% From E: 
% 
% completion(happens).
completion(happens).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',93).
% range time 0 2
% From E: 
% 
% range(time,0,2).
range(time,0,2).

% range offset 1 1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e',93).
% From E: 
% 
% range(offset,1,1).
range(offset,1,1).
%; End of file.
% translate: ending  File: /pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter6/CarryingABook1.e.lps 
