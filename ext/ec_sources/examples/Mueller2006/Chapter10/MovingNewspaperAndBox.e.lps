:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/includes/SaaSPatterns/sorts.e',13).
% translate: unskipped  File: /pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e.lps 
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
% translate: begining  File: /pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e.lps 
% Fri, 09 Oct 2020 15:13:42 GMT File: <stream>(0x5625a979ab00)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',20).
% load foundations/Root.e
:- if(is_e_toplevel).
:- load_e_cond('foundations/Root.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/foundations/Root.e',changed).
:- endif.

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',20).
:- if(is_e_toplevel).
:- load_e_cond('foundations/EC.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/foundations/EC.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',23).
% sort object
% From E: 
% 
% sort(object).
sort(object).

% sort agent: object
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',23).
% From E: 
% 
% subsort(agent,object).
subsort(agent,object).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',25).
% sort physobj: object
% From E: 
% 
% subsort(physobj,object).
subsort(physobj,object).

% sort room: object
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',25).
% From E: 
% 
% subsort(room,object).
subsort(room,object).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',28).
% fluent IN(object,object)
% From E: 
% 
% fluent(
%    in(object,object)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',28).
fluents([in/2]).
% From E: 
% 
% mpred_prop(
%    in(object,object), 
%    fluent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',28).
mpred_prop(in(object,object),fluent).

% fluent INROOM(object,room)
% From E: 
% 
% fluent(
%    inroom(object,room)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',28).
fluents([inroom/2]).
% From E: 
% 
% mpred_prop(
%    inroom(object,room), 
%    fluent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',28).
mpred_prop(inroom(object,room),fluent).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',30).
% noninertial INROOM
% From E: 
% 
% noninertial(inroom).
noninertial(inroom).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',32).
% event MOVE(agent,object,object,object)
% From E: 
% 
% event(
%    move(agent,object,object,object)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',32).
events([move/4]).
% From E: 
% 
% mpred_prop(
%    move(agent,object,object,object), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',32).
mpred_prop(move(agent,object,object,object),event).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',34).
% agent Lisa
% From E: 
% 
% t(agent,lisa).
agent(lisa).

% physobj Box, Newspaper
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',34).
% From E: 
% 
% t(physobj,box).
physobj(box).
% From E: 
% 
% t(physobj,newspaper).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',34).
physobj(newspaper).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',36).
% room Kitchen, LivingRoom
% From E: 
% 
% t(room,kitchen).
room(kitchen).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',36).
% From E: 
% 
% t(room,livingRoom).
room(livingRoom).
%; Sigma
%; RS10
% [agent,physobj1,physobj2,room,time]
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',42).
% HoldsAt(IN(agent,room),time) &
% HoldsAt(IN(physobj1,room),time) &
% HoldsAt(INROOM(physobj2,room),time) ->
% Initiates(MOVE(agent,physobj1,room,physobj2),IN(physobj1,physobj2),time).
% From E: 
% 
% '->'(
%    ','(
%       holds_at(
%          in(Agent,Room), 
%          Time), 
%       ','(
%          holds_at(
%             in(Physobj1,Room), 
%             Time), 
%          holds_at(
%             inroom(Physobj2,Room), 
%             Time))), 
%    initiates(
%       move(Agent,Physobj1,Room,Physobj2), 
%       in(Physobj1,Physobj2), 
%       Time)).
move(Agent, Physobj1, Room, Physobj2)initiates(Physobj1 in Physobj2)at Time if (Agent in Room)at Time, (Physobj1 in Room)at Time, inroom(Physobj2, Room)at Time.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',42).

 /*  initiated(happens(move(Agent,
   		       Physobj1,
   		       Room,
   		       Physobj2),
   		  Time_From,
   		  Time_Until),
   	  at(in(Physobj1,Physobj2),Time),
   	  [ holds(in(Agent,Room),Time),
   	    holds(in(Physobj1,Room),Time),
   	    holds(inroom(Physobj2,Room),Time)
   	  ]).
 */
 %  "% =================================".


%; RS11
% [agent,physobj1,physobj2,room,time]
% HoldsAt(IN(agent,room),time) &
% HoldsAt(IN(physobj1,room),time) &
% HoldsAt(INROOM(physobj2,room),time) ->
% Terminates(MOVE(agent,physobj1,room,physobj2),IN(physobj1,room),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',48).
% From E: 
% 
% '->'(
%    ','(
%       holds_at(
%          in(Agent,Room), 
%          Time), 
%       ','(
%          holds_at(
%             in(Physobj1,Room), 
%             Time), 
%          holds_at(
%             inroom(Physobj2,Room), 
%             Time))), 
%    terminates(
%       move(Agent,Physobj1,Room,Physobj2), 
%       in(Physobj1,Room), 
%       Time)).
move(Agent, Physobj1, Room, Physobj2)terminates(Physobj1 in Room)at Time if (Agent in Room)at Time, (Physobj1 in Room)at Time, inroom(Physobj2, Room)at Time.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',48).

 /*  terminated(happens(move(Agent,
   			Physobj1,
   			Room,
   			Physobj2),
   		   Time_From,
   		   Time_Until),
   	   at(in(Physobj1,Room),Time),
   	   [ holds(in(Agent,Room),Time),
   	     holds(in(Physobj1,Room),Time),
   	     holds(inroom(Physobj2,Room),Time)
   	   ]).
 */
 %  "% =================================".


%; RS12
% [agent,physobj1,physobj2,room,time]
% HoldsAt(IN(agent,room),time) ->
% Initiates(MOVE(agent,physobj1,physobj2,room),IN(physobj1,room),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',55).
% From E: 
% 
% '->'(
%    holds_at(
%       in(Agent,Room), 
%       Time), 
%    initiates(
%       move(Agent,Physobj1,Physobj2,Room), 
%       in(Physobj1,Room), 
%       Time)).
move(Agent, Physobj1, Physobj2, Room)initiates(Physobj1 in Room)at Time if (Agent in Room)at Time.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',55).

 /*  initiated(happens(move(Agent,
   		       Physobj1,
   		       Physobj2,
   		       Room),
   		  Time,
   		  Time_Until),
   	  at(in(Physobj1,Room),Time),
   	  [holds(in(Agent,Room),Time)]).
 */
 %  "% =================================".


%; RS13
% [agent,physobj1,physobj2,room,time]
% HoldsAt(IN(agent,room),time) ->
% Terminates(MOVE(agent,physobj1,physobj2,room),IN(physobj1,physobj2),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',60).
% From E: 
% 
% '->'(
%    holds_at(
%       in(Agent,Room), 
%       Time), 
%    terminates(
%       move(Agent,Physobj1,Physobj2,Room), 
%       in(Physobj1,Physobj2), 
%       Time)).
move(Agent, Physobj1, Physobj2, Room)terminates(Physobj1 in Physobj2)at Time if (Agent in Room)at Time.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',60).

 /*  terminated(happens(move(Agent,
   			Physobj1,
   			Physobj2,
   			Room),
   		   Time,
   		   Time_Until),
   	   at(in(Physobj1,Physobj2),Time),
   	   [holds(in(Agent,Room),Time)]).
 */
 %  "% =================================".


%; RS14
% [agent,room1,room2,time]
% HoldsAt(IN(agent,room1),time) ->
% Initiates(MOVE(agent,agent,room1,room2),IN(agent,room2),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',65).
% From E: 
% 
% '->'(
%    holds_at(
%       in(Agent,Room1), 
%       Time), 
%    initiates(
%       move(Agent,Agent,Room1,Room2), 
%       in(Agent,Room2), 
%       Time)).
move(Agent, Agent, Room1, Room2)initiates(Agent in Room2)at Time if (Agent in Room1)at Time.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',65).

 /*  initiated(happens(move(Agent,Agent,Room1,Room2),
   		  Time,
   		  Time_Until),
   	  at(in(Agent,Room2),Time),
   	  [holds(in(Agent,Room1),Time)]).
 */
 %  "% =================================".


%; RS15
% [agent,room1,room2,time]
% HoldsAt(IN(agent,room1),time) ->
% Terminates(MOVE(agent,agent,room1,room2),IN(agent,room1),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',70).
% From E: 
% 
% '->'(
%    holds_at(
%       in(Agent,Room1), 
%       Time), 
%    terminates(
%       move(Agent,Agent,Room1,Room2), 
%       in(Agent,Room1), 
%       Time)).
move(Agent, Agent, Room1, Room2)terminates(Agent in Room1)at Time if (Agent in Room1)at Time.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',70).

 /*  terminated(happens(move(Agent,
   			Agent,
   			Room1,
   			Room2),
   		   Time,
   		   Time_Until),
   	   at(in(Agent,Room1),Time),
   	   [holds(in(Agent,Room1),Time)]).
 */
 %  "% =================================".


%; RS16
% [agent,physobj,room,time]
% HoldsAt(IN(agent,room),time) &
% HoldsAt(IN(physobj,room),time) ->
% Initiates(MOVE(agent,physobj,room,agent),IN(physobj,agent),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',75).
% From E: 
% 
% '->'(
%    ','(
%       holds_at(
%          in(Agent,Room), 
%          Time), 
%       holds_at(
%          in(Physobj,Room), 
%          Time)), 
%    initiates(
%       move(Agent,Physobj,Room,Agent), 
%       in(Physobj,Agent), 
%       Time)).
move(Agent, Physobj, Room, Agent)initiates(Physobj in Agent)at Time if (Agent in Room)at Time, (Physobj in Room)at Time.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',75).

 /*  initiated(happens(move(Agent,
   		       Physobj,
   		       Room,
   		       Agent),
   		  Time_From,
   		  Time_Until),
   	  at(in(Physobj,Agent),Time),
   	  [ holds(in(Agent,Room),Time),
   	    holds(in(Physobj,Room),Time)
   	  ]).
 */
 %  "% =================================".


%; RS17
% [agent,physobj,room,time]
% HoldsAt(IN(agent,room),time) &
% HoldsAt(IN(physobj,room),time) ->
% Terminates(MOVE(agent,physobj,room,agent),IN(physobj,room),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',81).
% From E: 
% 
% '->'(
%    ','(
%       holds_at(
%          in(Agent,Room), 
%          Time), 
%       holds_at(
%          in(Physobj,Room), 
%          Time)), 
%    terminates(
%       move(Agent,Physobj,Room,Agent), 
%       in(Physobj,Room), 
%       Time)).
move(Agent, Physobj, Room, Agent)terminates(Physobj in Room)at Time if (Agent in Room)at Time, (Physobj in Room)at Time.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',81).

 /*  terminated(happens(move(Agent,
   			Physobj,
   			Room,
   			Agent),
   		   Time_From,
   		   Time_Until),
   	   at(in(Physobj,Room),Time),
   	   [ holds(in(Agent,Room),Time),
   	     holds(in(Physobj,Room),Time)
   	   ]).
 */
 %  "% =================================".


%; RS18
% [agent,physobj,room,time]
% HoldsAt(IN(physobj,agent),time) &
% HoldsAt(IN(agent,room),time) ->
% Initiates(MOVE(agent,physobj,agent,room),IN(physobj,room),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',87).
% From E: 
% 
% '->'(
%    ','(
%       holds_at(
%          in(Physobj,Agent), 
%          Time), 
%       holds_at(
%          in(Agent,Room), 
%          Time)), 
%    initiates(
%       move(Agent,Physobj,Agent,Room), 
%       in(Physobj,Room), 
%       Time)).
move(Agent, Physobj, Agent, Room)initiates(Physobj in Room)at Time if (Physobj in Agent)at Time, (Agent in Room)at Time.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',87).

 /*  initiated(happens(move(Agent,
   		       Physobj,
   		       Agent,
   		       Room),
   		  Time_From,
   		  Time_Until),
   	  at(in(Physobj,Room),Time),
   	  [ holds(in(Physobj,Agent),Time),
   	    holds(in(Agent,Room),Time)
   	  ]).
 */
 %  "% =================================".


%; RS19
% [agent,physobj,room,time]
% HoldsAt(IN(physobj,agent),time) &
% HoldsAt(IN(agent,room),time) ->
% Terminates(MOVE(agent,physobj,agent,room),IN(physobj,agent),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',93).
% From E: 
% 
% '->'(
%    ','(
%       holds_at(
%          in(Physobj,Agent), 
%          Time), 
%       holds_at(
%          in(Agent,Room), 
%          Time)), 
%    terminates(
%       move(Agent,Physobj,Agent,Room), 
%       in(Physobj,Agent), 
%       Time)).
move(Agent, Physobj, Agent, Room)terminates(Physobj in Agent)at Time if (Physobj in Agent)at Time, (Agent in Room)at Time.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',93).

 /*  terminated(happens(move(Agent,
   			Physobj,
   			Agent,
   			Room),
   		   Time_From,
   		   Time_Until),
   	   at(in(Physobj,Agent),Time),
   	   [ holds(in(Physobj,Agent),Time),
   	     holds(in(Agent,Room),Time)
   	   ]).
 */
 %  "% =================================".


%; Delta


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',100).
% Happens(MOVE(Lisa,Newspaper,LivingRoom,Box),0).
% From E: 
% 
% happens(
%    move(lisa,newspaper,livingRoom,box), 
%    t+0).
observe move(lisa, newspaper, livingRoom, box)at t+0.
 %  observe([move(lisa,newspaper,livingRoom,box)],t+0).
 %  "% =================================".


% Happens(MOVE(Lisa,Box,LivingRoom,Lisa),1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',100).
% From E: 
% 
% happens(
%    move(lisa,box,livingRoom,lisa), 
%    t+1).
observe move(lisa, box, livingRoom, lisa)at t+1.
 %  observe([move(lisa,box,livingRoom,lisa)],t+1).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',102).
% Happens(MOVE(Lisa,Lisa,LivingRoom,Kitchen),2).
% From E: 
% 
% happens(
%    move(lisa,lisa,livingRoom,kitchen), 
%    t+2).
observe move(lisa, lisa, livingRoom, kitchen)at t+2.
 %  observe([move(lisa,lisa,livingRoom,kitchen)],t+2).
 %  "% =================================".


% Happens(MOVE(Lisa,Box,Lisa,Kitchen),3).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',102).
% From E: 
% 
% happens(
%    move(lisa,box,lisa,kitchen), 
%    t+3).
observe move(lisa, box, lisa, kitchen)at t+3.
 %  observe([move(lisa,box,lisa,kitchen)],t+3).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',104).
% Happens(MOVE(Lisa,Lisa,Kitchen,LivingRoom),4).
% From E: 
% 
% happens(
%    move(lisa,lisa,kitchen,livingRoom), 
%    t+4).
observe move(lisa, lisa, kitchen, livingRoom)at t+4.
 %  observe([move(lisa,lisa,kitchen,livingRoom)],t+4).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',106).
%; Psi
%; RS1
% [object,time]
 % !HoldsAt(IN(object,object),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',108).
% From E: 
% 
% holds_at(
%    neg(
%       in(Object,Object)), 
%    Time).
not (Object in Object)at Time.
 %  l_int(holds(not(in(Object,Object)),Time),[]).
 %  "% =================================".


%; RS2
% [object1,object2,time]
% HoldsAt(IN(object1,object2),time) ->
% !HoldsAt(IN(object2,object1),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',112).
% From E: 
% 
% '->'(
%    holds_at(
%       in(Object1,Object2), 
%       Time), 
%    holds_at(
%       not(
%          in(Object2,Object1)), 
%       Time)).
not (Object2 in Object1)at Time if (Object1 in Object2)at Time.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',112).

 /*  l_int(holds(not(in(Object2,Object1)),Time),
         [holds(in(Object1,Object2),Time)]).
 */
 %  "% =================================".


%; RS3
% [object1,object2,object3,time]
% HoldsAt(IN(object1,object2),time) &
% HoldsAt(IN(object2,object3),time) ->
% !HoldsAt(IN(object1,object3),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',117).
% From E: 
% 
% '->'(
%    ','(
%       holds_at(
%          in(Object1,Object2), 
%          Time), 
%       holds_at(
%          in(Object2,Object3), 
%          Time)), 
%    holds_at(
%       not(
%          in(Object1,Object3)), 
%       Time)).
not (Object1 in Object3)at Time if (Object1 in Object2)at Time, (Object2 in Object3)at Time.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',117).

 /*  l_int(holds(not(in(Object1,Object3)),Time),
         [ holds(in(Object1,Object2),Time),
   	holds(in(Object2,Object3),Time)
         ]).
 */
 %  "% =================================".


%; RS4
% [object,object1,object2,time]
% HoldsAt(IN(object,object1),time) &
% HoldsAt(IN(object,object2),time) ->
% object1=object2.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',123).
% From E: 
% 
% '->'(
%    ','(
%       holds_at(
%          in(Object,Object1), 
%          Time), 
%       holds_at(
%          in(Object,Object2), 
%          Time)), 
%    equals(Object1,Object2)).
if (Object in Object1)at Time, (Object in Object2)at Time then equals(Object1, Object2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',123).

 /*  reactive_rule([ holds(in(Object,Object1),Time),
   		holds(in(Object,Object2),Time)
   	      ],
   	      [equals(Object1,Object2)]).
 */
 %  "% =================================".


%; RS7
% [object,room,time]
% HoldsAt(IN(object,room),time) ->
% HoldsAt(INROOM(object,room),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',129).
% From E: 
% 
% '->'(
%    holds_at(
%       in(Object,Room), 
%       Time), 
%    holds_at(
%       inroom(Object,Room), 
%       Time)).
inroom(Object, Room)at Time if (Object in Room)at Time.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',129).

 /*  l_int(holds(inroom(Object,Room),Time),
         [holds(in(Object,Room),Time)]).
 */
 %  "% =================================".


%; RS8
% [object1,object2,room,time]
% HoldsAt(IN(object1,object2),time) &
% HoldsAt(INROOM(object2,room),time) ->
% HoldsAt(INROOM(object1,room),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',134).
% From E: 
% 
% '->'(
%    ','(
%       holds_at(
%          in(Object1,Object2), 
%          Time), 
%       holds_at(
%          inroom(Object2,Room), 
%          Time)), 
%    holds_at(
%       inroom(Object1,Room), 
%       Time)).
inroom(Object1, Room)at Time if (Object1 in Object2)at Time, inroom(Object2, Room)at Time.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',134).

 /*  l_int(holds(inroom(Object1,Room),Time),
         [ holds(in(Object1,Object2),Time),
   	holds(inroom(Object2,Room),Time)
         ]).
 */
 %  "% =================================".


%; RS9
% [object,room1,room2,time]
% HoldsAt(INROOM(object,room1),time) &
% HoldsAt(INROOM(object,room2),time) ->
% room1=room2.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',140).
% From E: 
% 
% '->'(
%    ','(
%       holds_at(
%          inroom(Object,Room1), 
%          Time), 
%       holds_at(
%          inroom(Object,Room2), 
%          Time)), 
%    equals(Room1,Room2)).
if inroom(Object, Room1)at Time, inroom(Object, Room2)at Time then equals(Room1, Room2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',140).

 /*  reactive_rule([ holds(inroom(Object,Room1),Time),
   		holds(inroom(Object,Room2),Time)
   	      ],
   	      [equals(Room1,Room2)]).
 */
 %  "% =================================".


%; Gamma


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',147).
% HoldsAt(IN(Lisa,LivingRoom),0).
% From E: 
% 
% initially(
%    in(lisa,livingRoom)).
initially lisa in livingRoom.
 %  initial_state([in(lisa,livingRoom)]).
 %  "% =================================".


% HoldsAt(IN(Newspaper,LivingRoom),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',147).
% From E: 
% 
% initially(
%    in(newspaper,livingRoom)).
initially newspaper in livingRoom.
 %  initial_state([in(newspaper,livingRoom)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',149).
% HoldsAt(IN(Box,LivingRoom),0).
% From E: 
% 
% initially(
%    in(box,livingRoom)).
initially box in livingRoom.
 %  initial_state([in(box,livingRoom)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',151).
%; added:
% [room1,room2,time]
 % !HoldsAt(INROOM(room1,room2),time).
% From E: 
% 
% holds_at(
%    neg(
%       inroom(Room1,Room2)), 
%    Time).
not inroom(Room1, Room2)at Time.
 %  l_int(holds(not(inroom(Room1,Room2)),Time),[]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',153).
% [room,object,time]
 % !HoldsAt(IN(room,object),time).
% From E: 
% 
% holds_at(
%    neg(
%       in(Room,Object)), 
%    Time).
not (Room in Object)at Time.
 %  l_int(holds(not(in(Room,Object)),Time),[]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',155).
%; entailed:
%; HoldsAt(IN(Lisa,LivingRoom),5).
%; HoldsAt(IN(Box,Kitchen),5).
%; HoldsAt(INROOM(Newspaper,Kitchen),5).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',160).
% completion Happens
% From E: 
% 
% completion(happens).
completion(happens).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',162).
% range time 0 5
% From E: 
% 
% range(time,0,5).
range(time,0,5).

% range offset 1 1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e',162).
% From E: 
% 
% range(offset,1,1).
range(offset,1,1).
%; End of file.
% translate: ending  File: /pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter10/MovingNewspaperAndBox.e.lps 
