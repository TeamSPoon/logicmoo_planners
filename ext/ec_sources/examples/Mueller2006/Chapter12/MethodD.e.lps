:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodB.e',47).
% translate: unskipped  File: /pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e.lps 
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
% translate: begining  File: /pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e.lps 
% Fri, 09 Oct 2020 15:13:58 GMT File: <stream>(0x5625a97f7f00)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; Method (D)
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',22).
% load foundations/Root.e
:- if(is_e_toplevel).
:- load_e_cond('foundations/Root.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/foundations/Root.e',changed).
:- endif.

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',22).
:- if(is_e_toplevel).
:- load_e_cond('foundations/EC.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/foundations/EC.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',25).
% sort object
% From E: 
% 
% sort(object).
sort(object).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',27).
% object A,B
% From E: 
% 
% t(object,a).
object(a).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',27).
% From E: 
% 
% t(object,b).
object(b).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',29).
% fluent P(object)
% From E: 
% 
% fluent(
%    p(object)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',29).
fluents([p/1]).
% From E: 
% 
% mpred_prop(
%    p(object), 
%    fluent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',29).
mpred_prop(p(object),fluent).

% fluent Q(object)
% From E: 
% 
% fluent(
%    q(object)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',29).
fluents([q/1]).
% From E: 
% 
% mpred_prop(
%    q(object), 
%    fluent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',29).
mpred_prop(q(object),fluent).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',31).
% fluent R(object)
% From E: 
% 
% fluent(
%    r(object)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',31).
fluents([r/1]).
% From E: 
% 
% mpred_prop(
%    r(object), 
%    fluent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',31).
mpred_prop(r(object),fluent).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',33).
% predicate Ab1(object,time)
% From E: 
% 
% predicate(
%    ab1(object,time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',33).
predicates([ab1/2]).
% From E: 
% 
% mpred_prop(
%    ab1(object,time), 
%    predicate).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',33).
mpred_prop(ab1(object,time),predicate).

% predicate Ab2(object,time)
% From E: 
% 
% predicate(
%    ab2(object,time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',33).
predicates([ab2/2]).
% From E: 
% 
% mpred_prop(
%    ab2(object,time), 
%    predicate).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',33).
mpred_prop(ab2(object,time),predicate).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',36).
% [object,time]
% HoldsAt(P(object),time) & !Ab1(object,time) ->
% HoldsAt(Q(object),time).
% From E: 
% 
% '->'(
%    ','(
%       holds_at(
%          p(Object), 
%          Time), 
%       not(
%          ab1(Object,Time))), 
%    holds_at(
%       q(Object), 
%       Time)).
q(Object)at Time if p(Object)at Time, not ab1(Object, Time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',36).

 /*  l_int(holds(q(Object),Time),
         [ holds(p(Object),Time),
   	not(ab1(Object,Time))
         ]).
 */
 %  "% =================================".


% [object,time]
% HoldsAt(R(object),time) & !Ab2(object,time) ->
% !HoldsAt(Q(object),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',41).
% From E: 
% 
% '->'(
%    ','(
%       holds_at(
%          r(Object), 
%          Time), 
%       not(
%          ab2(Object,Time))), 
%    holds_at(
%       not(
%          q(Object)), 
%       Time)).
not q(Object)at Time if r(Object)at Time, not ab2(Object, Time).

 /*  l_int(holds(not(q(Object)),Time),
         [ holds(r(Object),Time),
   	not(ab2(Object,Time))
         ]).
 */
 %  "% =================================".


% [object,time]
% HoldsAt(R(object),time) -> HoldsAt(P(object),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',45).
% From E: 
% 
% '->'(
%    holds_at(
%       r(Object), 
%       Time), 
%    holds_at(
%       p(Object), 
%       Time)).
p(Object)at Time if r(Object)at Time.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',45).

 /*  l_int(holds(p(Object),Time),
         [holds(r(Object),Time)]).
 */
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',47).
% HoldsAt(R(A),0).
% From E: 
% 
% initially(
%    r(a)).
initially r(a).
 %  initial_state([r(a)]).
 %  "% =================================".


% HoldsAt(P(B),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',47).
% From E: 
% 
% initially(
%    p(b)).
initially p(b).
 %  initial_state([p(b)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',49).
% !HoldsAt(R(B),0).
% From E: 
% 
% initially(
%    neg(
%       r(b))).
initially not r(b).
 %  initial_state([not(r(b))]).
 %  "% =================================".

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',51).
% Theta: 
 


% [object,time]
% HoldsAt(R(object),time) -> Ab1(object,time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',53).
% From E: 
% 
% '->'(
%    axiom_uses(theta,Time), 
%    '->'(
%       holds_at(
%          r(Object), 
%          Time), 
%       ab1(Object,Time))).
if axiom_uses(theta, Time)then ab1(Object, Time)if r(Object)at Time.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',53).

 /*  reactive_rule([axiom_uses(theta,Time)],
   	      [ if(ab1(Object,Time),
   		   at(r(Object),Time))
   	      ]).
 */
 %  "% =================================".

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',55).
% range time 0 0
% From E: 
% 
% range(time,0,0).
range(time,0,0).

% range offset 1 1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',55).
% From E: 
% 
% range(offset,1,1).
range(offset,1,1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',58).
% completion Theta Ab1
% From E: 
% 
% completion(theta).
completion(theta).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',58).
% From E: 
% 
% completion(ab1).
completion(ab1).

% completion Theta Ab2
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',58).
% From E: 
% 
% completion(theta).
completion(theta).
% From E: 
% 
% completion(ab2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e',58).
completion(ab2).
%; End of file.
% translate: ending  File: /pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter12/MethodD.e.lps 
