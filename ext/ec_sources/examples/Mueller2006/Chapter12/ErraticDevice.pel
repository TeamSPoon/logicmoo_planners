:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(pfc).
% Wed, 01 Apr 2020 19:59:37 GMT
% From ../examples/Mueller2006/Chapter12/ErraticDevice.pel:4
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/Device.e',72).

 /*  loading(load_e_pl,
   	'/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e').
 */
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:19
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',20).
% load foundations/Root.e
:- load_e('foundations/Root.e', changed).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:20
% load foundations/EC.e
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',20).
:- load_e('foundations/EC.e', changed).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:22
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',23).
% sort agent
==> sort(agent).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:23
% sort device
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',23).
==> sort(device).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:25
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',26).
% agent Nathan
==> t(agent,nathan).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:26
% device Device1
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',26).
==> t(device,device1).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:28
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',29).
% predicate Ab1(device,time)
predicate(ab1(device,time)).
==> mpred_prop(ab1(device,time),predicate).
==> meta_argtypes(ab1(device,time)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:30
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',31).
% fluent On(device)
fluent(on(device)).
==> mpred_prop(on(device),fluent).
==> meta_argtypes(on(device)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:31
% fluent PluggedIn(device)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',31).
fluent(pluggedIn(device)).
==> mpred_prop(pluggedIn(device),fluent).
==> meta_argtypes(pluggedIn(device)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:32
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',33).
% fluent BrokenSwitch(device)
fluent(brokenSwitch(device)).
==> mpred_prop(brokenSwitch(device),fluent).
==> meta_argtypes(brokenSwitch(device)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:33
% fluent Erratic(device)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',33).
fluent(erratic(device)).
==> mpred_prop(erratic(device),fluent).
==> meta_argtypes(erratic(device)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:35
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',36).
% fluent DeterminingFluent(device)
fluent(determiningFluent(device)).
==> mpred_prop(determiningFluent(device),fluent).
==> meta_argtypes(determiningFluent(device)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:36
% noninertial DeterminingFluent
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',36).
==> noninertial(determiningFluent).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:38
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',39).
% event TurnOn(agent,device)
event(turnOn(agent,device)).
==> mpred_prop(turnOn(agent,device),event).
==> meta_argtypes(turnOn(agent,device)).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:40
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',41).
%; Sigma
% [agent,device,time]
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:43
% !Ab1(device,time) ->
% Initiates(TurnOn(agent,device),On(device),time).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',43).

 /*  [not(ab1(Device, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(turnOn(Agent, Device), on(Device), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',43).
axiom(initiates(turnOn(Agent, Device), on(Device), Time),
    [not(ab1(Device, Time))]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:46
%; Delta


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:48
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',49).
% Happens(TurnOn(Nathan,Device1),0).

 /*  [] ->
       ta(Ta_Param,
          tvs1=[start],
          tvs2=[start],
          happens(turnOn(nathan, device1), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',49).
axiom(happens(turnOn(nathan, device1), start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:50
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',51).
%; Theta

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:53
% Theta: 
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',53).
next_axiom_uses(theta).
 


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:53
% [device,time]
 % HoldsAt(BrokenSwitch(device),time) -> Ab1(device,time).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',53).

 /*  axiom_uses(theta) ->
       ( holds_at(brokenSwitch(Device), Time)->ab1(Device, Time)
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',53).

 /*  ab1(Device, Time) :-
       holds_at(brokenSwitch(Device), Time),
       axiom_uses(theta).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',53).

 /*  fix_axiom_head(Time) ->
       [axiom_uses(theta), ->, axiom_uses(theta, Time)].
 */

 /*  [holds_at(brokenSwitch(Device), Time), axiom_uses(theta, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          ab1(Device, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',53).
axiom(ab1(Device, Time),
   
    [ holds_at(brokenSwitch(Device), Time),
      axiom_uses(theta, Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',53).

 /*  not(holds_at(brokenSwitch(Device), Time)) :-
       not(ab1(Device, Time)),
       axiom_uses(theta).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',53).

 /*  [not(ab1(Device, Time)), axiom_uses(theta, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(brokenSwitch(Device)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',53).
axiom(holds_at(neg(brokenSwitch(Device)), Time),
    [not(ab1(Device, Time)), axiom_uses(theta, Time)]).

 /*  not(axiom_uses(theta)) :-
       not(ab1(Device, Time)),
       holds_at(brokenSwitch(Device), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',53).

 /*  fix_axiom_head(Time) ->
       [not(axiom_uses(theta)), ->, not(axiom_uses(theta, Time))].
 */

 /*  [not(ab1(Device, Time)), holds_at(brokenSwitch(Device), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(axiom_uses(theta, Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',53).
axiom(not(axiom_uses(theta, Time)),
   
    [ not(ab1(Device, Time)),
      holds_at(brokenSwitch(Device), Time)
    ]).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:54
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',55).
% Theta: 
next_axiom_uses(theta).
 


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:54
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',55).
% [device,time]
% HoldsAt(Erratic(device),time) & HoldsAt(DeterminingFluent(device),time) ->
% Ab1(device,time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:56

 /*  axiom_uses(theta) ->
       ( holds_at(erratic(Device), Time), holds_at(determiningFluent(Device), Time)->ab1(Device, Time)
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',55).

 /*  ab1(Device, Time) :-
       ( holds_at(erratic(Device), Time),
         holds_at(determiningFluent(Device), Time)
       ),
       axiom_uses(theta).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',55).

 /*  fix_axiom_head(Time) ->
       [axiom_uses(theta), ->, axiom_uses(theta, Time)].
 */

 /*  [holds_at(erratic(Device), Time), holds_at(determiningFluent(Device), Time), axiom_uses(theta, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          ab1(Device, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',55).
axiom(ab1(Device, Time),
   
    [ holds_at(erratic(Device), Time),
      holds_at(determiningFluent(Device), Time),
      axiom_uses(theta, Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',55).

 /*  not(holds_at(erratic(Device), Time)) :-
       holds_at(determiningFluent(Device), Time),
       not(ab1(Device, Time)),
       axiom_uses(theta).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',55).

 /*  [holds_at(determiningFluent(Device), Time), not(ab1(Device, Time)), axiom_uses(theta, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(erratic(Device)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',55).
axiom(holds_at(neg(erratic(Device)), Time),
   
    [ holds_at(determiningFluent(Device), Time),
      not(ab1(Device, Time)),
      axiom_uses(theta, Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',55).

 /*  not(holds_at(determiningFluent(Device), Time)) :-
       holds_at(erratic(Device), Time),
       not(ab1(Device, Time)),
       axiom_uses(theta).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',55).

 /*  [holds_at(erratic(Device), Time), not(ab1(Device, Time)), axiom_uses(theta, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(determiningFluent(Device)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',55).
axiom(holds_at(neg(determiningFluent(Device)), Time),
   
    [ holds_at(erratic(Device), Time),
      not(ab1(Device, Time)),
      axiom_uses(theta, Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',55).

 /*  not(axiom_uses(theta)) :-
       not(ab1(Device, Time)),
       holds_at(erratic(Device), Time),
       holds_at(determiningFluent(Device), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',55).

 /*  fix_axiom_head(Time) ->
       [not(axiom_uses(theta)), ->, not(axiom_uses(theta, Time))].
 */

 /*  [not(ab1(Device, Time)), holds_at(erratic(Device), Time), holds_at(determiningFluent(Device), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(axiom_uses(theta, Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',55).
axiom(not(axiom_uses(theta, Time)),
   
    [ not(ab1(Device, Time)),
      holds_at(erratic(Device), Time),
      holds_at(determiningFluent(Device), Time)
    ]).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:58
% Theta: 
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',58).
next_axiom_uses(theta).
 


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:58
% [device,time]
 % !HoldsAt(PluggedIn(device),time) -> Ab1(device,time).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',58).

 /*  axiom_uses(theta) ->
       ( holds_at(neg(pluggedIn(Device)), Time)->ab1(Device, Time)
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',58).

 /*  ab1(Device, Time) :-
       holds_at(neg(pluggedIn(Device)), Time),
       axiom_uses(theta).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',58).

 /*  fix_axiom_head(Time) ->
       [axiom_uses(theta), ->, axiom_uses(theta, Time)].
 */

 /*  [holds_at(neg(pluggedIn(Device)), Time), axiom_uses(theta, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          ab1(Device, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',58).
axiom(ab1(Device, Time),
   
    [ holds_at(neg(pluggedIn(Device)), Time),
      axiom_uses(theta, Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',58).

 /*  not(holds_at(neg(pluggedIn(Device)), Time)) :-
       not(ab1(Device, Time)),
       axiom_uses(theta).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',58).

 /*  [not(ab1(Device, Time)), axiom_uses(theta, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(pluggedIn(Device), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',58).
axiom(holds_at(pluggedIn(Device), Time),
    [not(ab1(Device, Time)), axiom_uses(theta, Time)]).

 /*  not(axiom_uses(theta)) :-
       not(ab1(Device, Time)),
       holds_at(neg(pluggedIn(Device)), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',58).

 /*  fix_axiom_head(Time) ->
       [not(axiom_uses(theta)), ->, not(axiom_uses(theta, Time))].
 */

 /*  [not(ab1(Device, Time)), holds_at(neg(pluggedIn(Device)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(axiom_uses(theta, Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',58).
axiom(not(axiom_uses(theta, Time)),
   
    [ not(ab1(Device, Time)),
      holds_at(neg(pluggedIn(Device)), Time)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:60
%; Gamma


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:62
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',63).
% !HoldsAt(On(Device1),0).

 /*  [] ->
       ta(Ta_Param,
          tvs1=[start],
          tvs2=[start],
          holds_at(neg(on(device1)), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',63).
axiom(holds_at(neg(on(device1)), start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:63
% !HoldsAt(BrokenSwitch(Device1),0).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',63).

 /*  [] ->
       ta(Ta_Param,
          tvs1=[start],
          tvs2=[start],
          holds_at(neg(brokenSwitch(device1)), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',63).
axiom(holds_at(neg(brokenSwitch(device1)), start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:64
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',65).
% HoldsAt(Erratic(Device1),0).

 /*  [] ->
       ta(Ta_Param,
          tvs1=[start],
          tvs2=[start],
          holds_at(erratic(device1), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',65).
axiom(holds_at(erratic(device1), start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:65
% HoldsAt(PluggedIn(Device1),0).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',65).

 /*  [] ->
       ta(Ta_Param,
          tvs1=[start],
          tvs2=[start],
          holds_at(pluggedIn(device1), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',65).
axiom(holds_at(pluggedIn(device1), start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:67
%; added:


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:68
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',69).
% HoldsAt(DeterminingFluent(Device1),1).

 /*  [b(start, Time), ignore(start+1==Time)] ->
       ta(Ta_Param,
          tvs1=[start+1],
          tvs2=[Time, start],
          holds_at(determiningFluent(device1), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',69).
axiom(holds_at(determiningFluent(device1), Time),
    [b(start, Time)]).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:70
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',71).
% completion Theta Ab1
==> completion(theta).
==> completion(ab1).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:71
% completion Happens
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',71).
==> completion(happens).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:73
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',74).
% range time 0 1
==> range(time,0,1).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e:74
% range offset 1 1
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter12/ErraticDevice.e',74).
==> range(offset,1,1).
%; End of file.
