:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/FallingObjectWithEvents.e',85).
% translate: unskipped  File: /pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e.lps 
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
% translate: begining  File: /pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e.lps 
% Fri, 09 Oct 2020 15:14:33 GMT File: <stream>(0x5625a9740100)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{MillerShanahan:1999,
%;   author = "Rob Miller and Murray Shanahan",
%;   year = "1999",
%;   title = "The event calculus in classical logic---\uppercase{A}lternative axiomatisations",
%;   journal = "Link{\"{o}}ping Electronic Articles in Computer and Information Science",
%;   volume = "4",
%;   number = "016",
%; }
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',29).
% option encoding 3
:- if(is_e_toplevel).
:- set_ec_option(encoding, 3).
:- endif.

% option trajectory on
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',29).
:- if(is_e_toplevel).
:- set_ec_option(trajectory, on).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',32).
% load foundations/Root.e
:- if(is_e_toplevel).
:- load_e_cond('foundations/Root.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/foundations/Root.e',changed).
:- endif.

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',32).
:- if(is_e_toplevel).
:- load_e_cond('foundations/EC.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/foundations/EC.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',35).
% sort balloon
% From E: 
% 
% sort(balloon).
sort(balloon).

% sort agent
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',35).
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',37).
% sort height: integer
% From E: 
% 
% subsort(height,integer).
subsort(height,integer).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',39).
% agent Nathan
% From E: 
% 
% t(agent,nathan).
agent(nathan).

% balloon Balloon
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',39).
% From E: 
% 
% t(balloon,balloon).
balloon(balloon).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',42).
% fluent HeaterOn(balloon)
% From E: 
% 
% fluent(
%    heaterOn(balloon)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',42).
fluents([heaterOn/1]).
% From E: 
% 
% mpred_prop(
%    heaterOn(balloon), 
%    fluent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',42).
mpred_prop(heaterOn(balloon),fluent).

% fluent Height(balloon,height)
% From E: 
% 
% fluent(
%    height(balloon,height)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',42).
fluents([height/2]).
% From E: 
% 
% mpred_prop(
%    height(balloon,height), 
%    fluent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',42).
mpred_prop(height(balloon,height),fluent).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',44).
% noninertial Height
% From E: 
% 
% noninertial(height).
noninertial(height).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',46).
% event TurnOnHeater(agent,balloon)
% From E: 
% 
% event(
%    turnOnHeater(agent,balloon)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',46).
events([turnOnHeater/2]).
% From E: 
% 
% mpred_prop(
%    turnOnHeater(agent,balloon), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',46).
mpred_prop(turnOnHeater(agent,balloon),event).

% event TurnOffHeater(agent,balloon)
% From E: 
% 
% event(
%    turnOffHeater(agent,balloon)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',46).
events([turnOffHeater/2]).
% From E: 
% 
% mpred_prop(
%    turnOffHeater(agent,balloon), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',46).
mpred_prop(turnOffHeater(agent,balloon),event).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',49).
%; Sigma
% [agent,balloon,time]
% Initiates(TurnOnHeater(agent,balloon),HeaterOn(balloon),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',51).
% From E: 
% 
% initiates(
%    turnOnHeater(Agent,Balloon), 
%    heaterOn(Balloon), 
%    Time).
turnOnHeater(Agent, Balloon)initiates heaterOn(Balloon).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',51).

 /*  initiated(happens(turnOnHeater(Agent,Balloon),
   		  Time_From,
   		  Time_Until),
   	  heaterOn(Balloon),
   	  []).
 */
 %  "% =================================".


% [agent,balloon,time]
% Terminates(TurnOffHeater(agent,balloon),HeaterOn(balloon),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',55).
% From E: 
% 
% terminates(
%    turnOffHeater(Agent,Balloon), 
%    heaterOn(Balloon), 
%    Time).
turnOffHeater(Agent, Balloon)terminates heaterOn(Balloon).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',55).

 /*  terminated(happens(turnOffHeater(Agent,Balloon),
   		   Time_From,
   		   Time_Until),
   	   heaterOn(Balloon),
   	   []).
 */
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',57).
%; Delta

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',59).
% Delta: 
 


% Happens(TurnOnHeater(Nathan,Balloon),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',59).
% From E: 
% 
% '->'(
%    axiom_uses(delta,Axiom_Uses), 
%    happens(
%       turnOnHeater(nathan,balloon), 
%       t+0)).
if axiom_uses(delta, _)then observe turnOnHeater(nathan, balloon)at t+0.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',59).

 /*  reactive_rule([axiom_uses(delta,Axiom_Uses)],
   	      [observe(at(turnOnHeater(nathan,balloon),t+0))]).
 */
 %  "% =================================".

% Delta: 
 


% Happens(TurnOffHeater(Nathan,Balloon),2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',59).
% From E: 
% 
% '->'(
%    axiom_uses(delta,Axiom_Uses), 
%    happens(
%       turnOffHeater(nathan,balloon), 
%       t+2)).
if axiom_uses(delta, _)then observe turnOffHeater(nathan, balloon)at t+2.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',59).

 /*  reactive_rule([axiom_uses(delta,Axiom_Uses)],
   	      [observe(at(turnOffHeater(nathan,balloon),t+2))]).
 */
 %  "% =================================".


%; Psi
% [balloon,height1,height2,time]
% HoldsAt(Height(balloon,height1),time) &
% HoldsAt(Height(balloon,height2),time) ->
% height1=height2.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',64).
% From E: 
% 
% '->'(
%    ','(
%       holds_at(
%          height(Balloon,Height1), 
%          Time), 
%       holds_at(
%          height(Balloon,Height2), 
%          Time)), 
%    equals(Height1,Height2)).
if height(Balloon, Height1)at Time, height(Balloon, Height2)at Time then equals(Height1, Height2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',64).

 /*  reactive_rule([ holds(height(Balloon,Height1),Time),
   		holds(height(Balloon,Height2),Time)
   	      ],
   	      [equals(Height1,Height2)]).
 */
 %  "% =================================".


%; Pi
% [balloon,height1,height2,offset,time]
% HoldsAt(Height(balloon,height1),time) &
% height2 = (height1 + offset) ->
% Trajectory(HeaterOn(balloon),time,Height(balloon,height2),offset).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',71).
% From E: 
% 
% '->'(
%    ','(
%       holds_at(
%          height(Balloon,Height1), 
%          Time), 
%       '+Pred'(Height1,Offset,Height2)), 
%    trajectory(
%       heaterOn(Balloon), 
%       Time, Time, 
%                height(Balloon,Height2), 
%                Offset)).
if height(Balloon, Height1)at Time, '+Pred'(Height1, Offset, Height2)then trajectory(heaterOn(Balloon), Time, height(Balloon, Height2), Offset).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',71).

 /*  reactive_rule([ holds(height(Balloon,Height1),Time),
   		'+Pred'(Height1,Offset,Height2)
   	      ],
   	      [ trajectory(heaterOn(Balloon),
   			   Time,
   			   height(Balloon,Height2),
   			   Offset)
   	      ]).
 */
 %  "% =================================".


% [balloon,height1,height2,offset,time]
% HoldsAt(Height(balloon,height1),time) &
% height2 = (height1 - offset) ->
% AntiTrajectory(HeaterOn(balloon),time,Height(balloon,height2),offset).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',77).
% From E: 
% 
% '->'(
%    ','(
%       holds_at(
%          height(Balloon,Height1), 
%          Time), 
%       '-Pred'(Height1,Offset,Height2)), 
%    antiTrajectory(
%       heaterOn(Balloon), 
%       Time, Time, 
%                height(Balloon,Height2), 
%                Offset)).
if height(Balloon, Height1)at Time, '-Pred'(Height1, Offset, Height2)then antiTrajectory(heaterOn(Balloon), Time, height(Balloon, Height2), Offset).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',77).

 /*  reactive_rule([ holds(height(Balloon,Height1),Time),
   		'-Pred'(Height1,Offset,Height2)
   	      ],
   	      [ antiTrajectory(heaterOn(Balloon),
   			       Time,
   			       height(Balloon,Height2),
   			       Offset)
   	      ]).
 */
 %  "% =================================".


%; Gamma


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',83).
% HoldsAt(Height(Balloon,0),0).
% From E: 
% 
% initially(
%    height(balloon,0)).
initially height(balloon, 0).
 %  initial_state([height(balloon,0)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',85).
%; added:


% !HoldsAt(HeaterOn(Balloon),0).
% From E: 
% 
% initially(
%    neg(
%       heaterOn(balloon))).
initially not heaterOn(balloon).
 %  initial_state([not(heaterOn(balloon))]).
 %  "% =================================".

% completion Delta Happens
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',87).
% From E: 
% 
% completion(delta).
completion(delta).
% From E: 
% 
% completion(happens).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',87).
completion(happens).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',90).
% range time 0 3
% From E: 
% 
% range(time,0,3).
range(time,0,3).

% range height 0 2
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',90).
% From E: 
% 
% range(height,0,2).
range(height,0,2).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e',92).
% range offset 1 2
% From E: 
% 
% range(offset,1,2).
range(offset,1,2).
%; End of file.
% translate: ending  File: /pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter7/HotAirBalloon.e.lps 
