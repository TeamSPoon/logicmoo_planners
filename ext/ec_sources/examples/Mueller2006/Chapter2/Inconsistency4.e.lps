:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency3.e',38).
% translate: unskipped  File: /pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e.lps 
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
% translate: begining  File: /pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e.lps 
% Fri, 09 Oct 2020 15:14:16 GMT File: <stream>(0x5625a973a400)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e',20).
% load foundations/Root.e
:- if(is_e_toplevel).
:- load_e_cond('foundations/Root.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/foundations/Root.e',changed).
:- endif.

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e',20).
:- if(is_e_toplevel).
:- load_e_cond('foundations/EC.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/foundations/EC.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e',23).
% sort object
% From E: 
% 
% sort(object).
sort(object).

% object O1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e',23).
% From E: 
% 
% t(object,o1).
object(o1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e',26).
% event E(object)
% From E: 
% 
% event(
%    e(object)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e',26).
events([e/1]).
% From E: 
% 
% mpred_prop(
%    e(object), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e',26).
mpred_prop(e(object),event).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e',28).
% fluent F1(object)
% From E: 
% 
% fluent(
%    f1(object)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e',28).
fluents([f1/1]).
% From E: 
% 
% mpred_prop(
%    f1(object), 
%    fluent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e',28).
mpred_prop(f1(object),fluent).

% fluent F2(object)
% From E: 
% 
% fluent(
%    f2(object)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e',28).
fluents([f2/1]).
% From E: 
% 
% mpred_prop(
%    f2(object), 
%    fluent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e',28).
mpred_prop(f2(object),fluent).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e',31).
% [object,time]
% Initiates(E(object),F1(object),time).
% From E: 
% 
% initiates(
%    e(Object), 
%    f1(Object), 
%    Time).
e(Object)initiates f1(Object).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e',31).

 /*  initiated(happens(e(Object),Time_From,Time_Until),
   	  f1(Object),
   	  []).
 */
 %  "% =================================".


% [object,time]
% HoldsAt(F1(object),time) <-> HoldsAt(F2(object),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e',35).

 /*  holds_at(f1(Object), Time) <->
       holds_at(f2(Object), Time).
 */
% From E: 
% 
% '->'(
%    holds_at(
%       f1(Object), 
%       Time), 
%    holds_at(
%       f2(Object), 
%       Time)).
f2(Object)at Time if f1(Object)at Time.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e',35).

 /*  l_int(holds(f2(Object),Time),
         [holds(f1(Object),Time)]).
 */
 %  "% =================================".
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e',35).
% From E: 
% 
% '->'(
%    holds_at(
%       f2(Object), 
%       Time), 
%    holds_at(
%       f1(Object), 
%       Time)).
f1(Object)at Time if f2(Object)at Time.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e',35).

 /*  l_int(holds(f1(Object),Time),
         [holds(f2(Object),Time)]).
 */
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e',37).
% !HoldsAt(F2(O1),0).
% From E: 
% 
% initially(
%    neg(
%       f2(o1))).
initially not f2(o1).
 %  initial_state([not(f2(o1))]).
 %  "% =================================".


% Happens(E(O1),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e',37).
% From E: 
% 
% happens(
%    e(o1), 
%    t+0).
observe e(o1)at t+0.
 %  observe([e(o1)],t+0).
 %  "% =================================".

% range time 0 1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e',39).
% From E: 
% 
% range(time,0,1).
range(time,0,1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e',41).
% range offset 1 1
% From E: 
% 
% range(offset,1,1).
range(offset,1,1).
%; End of file.
% translate: ending  File: /pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e.lps 
