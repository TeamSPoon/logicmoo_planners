:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Inconsistency4.e',43).
% translate: unskipped  File: /pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e.lps 
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
% translate: begining  File: /pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e.lps 
% Fri, 09 Oct 2020 15:14:16 GMT File: <stream>(0x5625a97f8c00)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e',20).
% load foundations/Root.e
:- if(is_e_toplevel).
:- load_e_cond('foundations/Root.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/foundations/Root.e',changed).
:- endif.

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e',20).
:- if(is_e_toplevel).
:- load_e_cond('foundations/EC.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/foundations/EC.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e',23).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e',25).
% agent Nathan
% From E: 
% 
% t(agent,nathan).
agent(nathan).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e',27).
% fluent Awake(agent)
% From E: 
% 
% fluent(
%    awake(agent)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e',27).
fluents([awake/1]).
% From E: 
% 
% mpred_prop(
%    awake(agent), 
%    fluent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e',27).
mpred_prop(awake(agent),fluent).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e',29).
% event WakeUp(agent)
% From E: 
% 
% event(
%    wakeUp(agent)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e',29).
events([wakeUp/1]).
% From E: 
% 
% mpred_prop(
%    wakeUp(agent), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e',29).
mpred_prop(wakeUp(agent),event).

% event FallAsleep(agent)
% From E: 
% 
% event(
%    fallAsleep(agent)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e',29).
events([fallAsleep/1]).
% From E: 
% 
% mpred_prop(
%    fallAsleep(agent), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e',29).
mpred_prop(fallAsleep(agent),event).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e',32).
%; Sigma
% [agent,time]
 % Initiates(WakeUp(agent),Awake(agent),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e',34).
% From E: 
% 
% initiates(
%    wakeUp(Agent), 
%    awake(Agent), 
%    Time).
wakeUp(Agent)initiates awake(Agent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e',34).

 /*  initiated(happens(wakeUp(Agent),Time_From,Time_Until),
   	  awake(Agent),
   	  []).
 */
 %  "% =================================".


% [agent,time]
 % Terminates(FallAsleep(agent),Awake(agent),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e',34).
% From E: 
% 
% terminates(
%    fallAsleep(Agent), 
%    awake(Agent), 
%    Time).
fallAsleep(Agent)terminates awake(Agent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e',34).

 /*  terminated(happens(fallAsleep(Agent),
   		   Time_From,
   		   Time_Until),
   	   awake(Agent),
   	   []).
 */
 %  "% =================================".


%; Delta


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e',39).
% Happens(WakeUp(Nathan),1).
% From E: 
% 
% happens(
%    wakeUp(nathan), 
%    t+1).
observe wakeUp(nathan)at t+1.
 %  observe([wakeUp(nathan)],t+1).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e',41).
%; Gamma


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e',43).
% !HoldsAt(Awake(Nathan),0).
% From E: 
% 
% initially(
%    neg(
%       awake(nathan))).
initially not awake(nathan).
 %  initial_state([not(awake(nathan))]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e',45).
%; entailed:
%; HoldsAt(Awake(Nathan),3).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e',48).
% completion Happens
% From E: 
% 
% completion(happens).
completion(happens).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e',50).
% range time 0 3
% From E: 
% 
% range(time,0,3).
range(time,0,3).

% range offset 1 1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e',50).
% From E: 
% 
% range(offset,1,1).
range(offset,1,1).
%; End of file.
% translate: ending  File: /pack/logicmoo_ec/ext/ec_sources/examples/Mueller2006/Chapter2/Sleep1.e.lps 
