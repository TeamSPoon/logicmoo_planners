:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Manual/Example4.e',27).
% From E: 
% 
% :-call_pel_directive(translate(unskipped,'/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e.lps')).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e.lps')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Manual/Example4.e',27).
% From E: 
% 
% :-call_pel_directive(translate(begining,'/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e.lps')).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e.lps')).
% Sat, 10 Oct 2020 14:56:42 GMT File: <stream>(0x5597f1781900)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; \fullciteA[p. 461]{MillerShanahan:2002}
%;
%; @incollection{MillerShanahan:2002,
%;   author = "Rob Miller and Murray Shanahan",
%;   year = "2002",
%;   title = "Some alternative formulations of the event calculus",
%;   editor = "Antonis C. Kakas and Fariba Sadri",
%;   booktitle = "Computational Logic: Logic Programming and Beyond: Essays in Honour of \uppercase{R}obert \uppercase{A}. \uppercase{K}owalski, Part \uppercase{II}",
%;   series = "Lecture Notes in Computer Science",
%;   volume = "2408",
%;   pages = "452--490",
%;   address = "Berlin",
%;   publisher = "Springer",
%; }
%;

% load foundations/Root.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e',27).
% From E: 
% 
% :-call_pel_directive(load('foundations/Root.e')).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e',27).
% From E: 
% 
% :-call_pel_directive(load('foundations/EC.e')).
:- call_pel_directive(load('foundations/EC.e')).

% event LiftLeft()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e',30).
% From E: 
% 
% event(liftLeft()).
events([liftLeft/0]).

% event LiftRight()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e',30).
% From E: 
% 
% event(liftRight()).
events([liftRight/0]).

% fluent Spilt()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e',32).
% From E: 
% 
% fluent(spilt()).
fluents([spilt/0]).

% fluent Raised()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e',32).
% From E: 
% 
% fluent(raised()).
fluents([raised/0]).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e',35).
% [time]
% !Happens(LiftRight(), time) ->
% Initiates(LiftLeft(), Spilt(), time).
% From E: 
% 
% '->'(
%    not(happens_at(liftRight(),Time)), 
%    initiates_at(liftLeft(),spilt(),Time)).
 %   [Time].
liftLeft initiates spilt if not liftRight.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e',35).

 /*  initiated(happens(liftLeft,Time_From,Time_Until),
   	  spilt,
   	  [not(liftRight)]).
 */
 %  "% =================================".


% [time]
% !Happens(LiftLeft(), time) ->
% Initiates(LiftRight(), Spilt(), time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e',40).
% From E: 
% 
% '->'(
%    not(happens_at(liftLeft(),Time)), 
%    initiates_at(liftRight(),spilt(),Time)).
 %   [Time].
liftRight initiates spilt if not liftLeft.

 /*  initiated(happens(liftRight,Time_From,Time_Until),
   	  spilt,
   	  [not(liftLeft)]).
 */
 %  "% =================================".


% [time]
% Happens(LiftLeft(), time) ->
% Initiates(LiftRight(), Raised(), time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e',44).
% From E: 
% 
% '->'(
%    happens_at(liftLeft(),Time), 
%    initiates_at(liftRight(),raised(),Time)).
 %   [Time].
liftRight initiates raised if liftLeft.

 /*  initiated(happens(liftRight,Time_From,Time_Until),
   	  raised,
   	  [happens(liftLeft,Time_From,Time_Until)]).
 */
 %  "% =================================".


% !HoldsAt(Spilt(), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e',46).
% From E: 
% 
% holds_at(not(spilt()),0).
initially not spilt.
 %  initial_state([not(spilt)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e',48).
% !HoldsAt(Raised(), 0).
% From E: 
% 
% holds_at(not(raised()),0).
initially not raised.
 %  initial_state([not(raised)]).
 %  "% =================================".


% Happens(LiftLeft(), 2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e',48).
% From E: 
% 
% happens_at(liftLeft(),2).
observe liftLeft at 2.
 %  observe([liftLeft],2).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e',50).
% Happens(LiftRight(), 2).
% From E: 
% 
% happens_at(liftRight(),2).
observe liftRight at 2.
 %  observe([liftRight],2).
 %  "% =================================".

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e',52).
% completion Happens
% From E: 
% 
% :-call_pel_directive(completion(happens_at)).
:- call_pel_directive(completion(happens_at)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e',54).
% range time 0 3
% From E: 
% 
% :-call_pel_directive(range(time,0,3)).
:- call_pel_directive(range(time, 0, 3)).

% range offset 1 1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e',54).
% From E: 
% 
% :-call_pel_directive(range(offset,1,1)).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e',57).
% From E: 
% 
% :-call_pel_directive(translate(ending,'/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e.lps')).
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/MillerShanahan2002/Bowl.e.lps')).
