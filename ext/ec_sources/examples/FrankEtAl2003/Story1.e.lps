:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/FrankEtAl.e',92).
% From E: 
% 
% :-call_pel_directive(translate(unskipped,'/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/Story1.e.lps')).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/Story1.e.lps')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/FrankEtAl.e',92).
% From E: 
% 
% :-call_pel_directive(translate(begining,'/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/Story1.e.lps')).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/Story1.e.lps')).
% Sat, 10 Oct 2020 14:56:41 GMT File: <stream>(0x5597f2bc2900)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{FrankEtAl:2003,
%;   author = "Stefan L. Frank and Mathieu Koppen and Leo G. M. Noordman and Wietske Vonk",
%;   year = "2003",
%;   title = "Modeling knowledge-based inferences in story comprehension",
%;   journal = "Cognitive Science",
%;   volume = "27",
%;   pages = "875--910",
%; }
%;
%; see examples/FrankEtAl2003/Story1.txt

% option modeldiff on
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/Story1.e',22).
% From E: 
% 
% :-call_pel_directive(option(modeldiff,on)).
:- call_pel_directive(option(modeldiff, on)).

% load foundations/Root.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/Story1.e',24).
% From E: 
% 
% :-call_pel_directive(load('foundations/Root.e')).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/Story1.e',24).
% From E: 
% 
% :-call_pel_directive(load('foundations/EC.e')).
:- call_pel_directive(load('foundations/EC.e')).

% sort agent
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/Story1.e',27).
% From E: 
% 
% sort(agent).
sort(agent).

% load examples/FrankEtAl2003/FrankEtAl.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/Story1.e',29).
% From E: 
% 
% :-call_pel_directive(load('examples/FrankEtAl2003/FrankEtAl.e')).
:- call_pel_directive(load('examples/FrankEtAl2003/FrankEtAl.e')).

% agent Bob, Jilly
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/Story1.e',31).
% From E: 
% 
% t(agent,bob).
agent(bob).
% From E: 
% 
% t(agent,jilly).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/Story1.e',31).
agent(jilly).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/Story1.e',33).
% !HoldsAt(Raining(),0).
% From E: 
% 
% holds_at(not(raining()),0).
initially not raining.
 %  initial_state([not(raining)]).
 %  "% =================================".


% !HoldsAt(SunShining(),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/Story1.e',33).
% From E: 
% 
% holds_at(not(sunShining()),0).
initially not sunShining.
 %  initial_state([not(sunShining)]).
 %  "% =================================".


% (HoldsAt(PlaySoccer(Bob),1) & HoldsAt(PlaySoccer(Jilly),1)) |
% (HoldsAt(PlayHideAndSeek(Bob),1) & HoldsAt(PlayHideAndSeek(Jilly),1)) |
% (HoldsAt(PlayComputerGame(Bob),1) & HoldsAt(PlayComputerGame(Jilly),1)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/Story1.e',35).
% From E: 
% 
% ((holds_at(playSoccer(bob),1) , 
%   holds_at(playSoccer(jilly),1)) ; 
%   (holds_at(playHideAndSeek(bob),1) , 
%    holds_at(playHideAndSeek(jilly),1)) ; 
%  (holds_at(playComputerGame(bob),1) , 
%   holds_at(playComputerGame(jilly),1))).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/Story1.e',35).
(   holds_at(playSoccer(bob), 1),
    holds_at(playSoccer(jilly), 1)
;   holds_at(playHideAndSeek(bob), 1),
    holds_at(playHideAndSeek(jilly), 1)
;   holds_at(playComputerGame(bob), 1),
    holds_at(playComputerGame(jilly), 1)
).


% HoldsAt(Win(Bob),1) | HoldsAt(Win(Jilly),1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/Story1.e',39).
% From E: 
% 
% (holds_at(win(bob),1) ; 
%  holds_at(win(jilly),1)).
false not holds_at(win(bob), 1), not holds_at(win(jilly), 1).
 %  d_pre([not(holds_at(win(bob),1)),not(holds_at(win(jilly),1))]).
 %  "% =================================".

% range time 0 1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/Story1.e',41).
% From E: 
% 
% :-call_pel_directive(range(time,0,1)).
:- call_pel_directive(range(time, 0, 1)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/Story1.e',43).
% range offset 0 0
% From E: 
% 
% :-call_pel_directive(range(offset,0,0)).
:- call_pel_directive(range(offset, 0, 0)).
%; End of file.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/Story1.e',45).
% From E: 
% 
% :-call_pel_directive(translate(ending,'/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/Story1.e.lps')).
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/Story1.e.lps')).
