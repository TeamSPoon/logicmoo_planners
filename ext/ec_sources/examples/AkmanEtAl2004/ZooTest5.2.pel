:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest5.1.e',67).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest5.2.pel')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(ecalc).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest5.2.pel')).
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Akman:2004,
%;   author = "Varol Akman and Selim T. Erdogan and Joohyung Lee and Vladimir Lifschitz and Hudson Turner",
%;   year = "2004",
%;   title = "Representing the zoo world and the traffic world in the language of the causal calculator",
%;   journal = "Artificial Intelligence",
%;   volume = "153",
%;   pages = "105--140",
%; }
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest5.2.e',21).
% option encoding 3
:- call_pel_directive(option(encoding, 3)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest5.2.e',23).
% load foundations/Root.e
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest5.2.e',25).
% load examples/AkmanEtAl2004/ZooWorld.e
:- call_pel_directive(load('examples/AkmanEtAl2004/ZooWorld.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest5.2.e',27).
% human Homer
t(human,homer).

% elephant Jumbo
t(elephant,jumbo).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest5.2.e',29).
% horse Silver
t(horse,silver).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest5.2.e',31).
% Species(Homer)=HumanSpecies.
species(homer)=humanSpecies.


% Adult(Homer).
adult(homer).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest5.2.e',33).
% Species(Jumbo)=ElephantSpecies.
species(jumbo)=elephantSpecies.


% Adult(Jumbo).
adult(jumbo).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest5.2.e',35).
% Species(Silver)=HorseSpecies.
species(silver)=horseSpecies.


% Adult(Silver).
adult(silver).
% {position}


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest5.2.e',39).
% !HoldsAt(Pos(Homer,position),0) &
% HoldsAt(Pos(Jumbo,position),0) &
% HoldsAt(Pos(Homer,position),1) &
% !HoldsAt(Pos(Jumbo,position),1).
exists([Position],  (holds_at(not(pos(homer, Position)), 0), holds_at(pos(jumbo, Position), 0), holds_at(pos(homer, Position), 1), holds_at(not(pos(jumbo, Position)), 1))).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest5.2.e',43).
% [animal,time]
 % !Happens(ThrowOff(animal,Homer),time).
not(happens_at(throwOff(Animal,homer),Time)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest5.2.e',45).
% [human]
 % HoldsAt(PosDeterminingFluent(human,1),1).
holds_at(posDeterminingFluent(Human,1),1).


% [event,animal]
 % !HoldsAt(DoneBy(event,animal),1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest5.2.e',45).
holds_at(not(doneBy(Event,Animal)),1).


%;HoldsAt(Opened(GateAO),0).
%;HoldsAt(Pos(Homer,3),0).
%;HoldsAt(Pos(Jumbo,2),0).
%;HoldsAt(Pos(Silver,7),0).
%;Happens(Move(Jumbo,4),0).
%;Happens(Move(Silver,8),0).
%;Happens(Mount(Homer,Jumbo),0).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest5.2.e',56).
% range time 0 1
:- call_pel_directive(range(time, 0, 1)).

% range position 1 8
:- call_pel_directive(range(position, 1, 8)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest5.2.e',58).
% range offset 0 0
:- call_pel_directive(range(offset, 0, 0)).
%; End of file.
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest5.2.pel')).
