:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest2.e',43).
% From E: 
% 
% :-call_pel_directive(translate(unskipped,'/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e.lps')).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e.lps')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest2.e',43).
% From E: 
% 
% :-call_pel_directive(translate(begining,'/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e.lps')).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e.lps')).
% Sat, 10 Oct 2020 14:56:19 GMT File: <stream>(0x5597f2b80200)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Akman:2004,
%;   author = "Varol Akman and Selim T. Erdogan and Joohyung Lee and Vladimir Lifschitz and Hudson Turner",
%;   year = "2004",
%;   title = "Representing the zoo world and the traffic world in the language of the causal calculator",
%;   journal = "Artificial Intelligence",
%;   volume = "153",
%;   pages = "105--140",
%; }
%;

% option encoding 3
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',21).
% From E: 
% 
% :-call_pel_directive(option(encoding,3)).
:- call_pel_directive(option(encoding, 3)).

% load foundations/Root.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',23).
% From E: 
% 
% :-call_pel_directive(load('foundations/Root.e')).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',23).
% From E: 
% 
% :-call_pel_directive(load('foundations/EC.e')).
:- call_pel_directive(load('foundations/EC.e')).

% load examples/AkmanEtAl2004/ZooWorld.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',25).
% From E: 
% 
% :-call_pel_directive(load('examples/AkmanEtAl2004/ZooWorld.e')).
:- call_pel_directive(load('examples/AkmanEtAl2004/ZooWorld.e')).

% human Homer
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',27).
% From E: 
% 
% t(human,homer).
human(homer).

% dog Snoopy
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',27).
% From E: 
% 
% t(dog,snoopy).
dog(snoopy).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',30).
% Species(Homer)=HumanSpecies.
% From E: 
% 
% species(homer)=humanSpecies.
species(homer,humanSpecies).


% Adult(Homer).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',30).
% From E: 
% 
% adult(homer).
adult(homer).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',32).
% Species(Snoopy)=DogSpecies.
% From E: 
% 
% species(snoopy)=dogSpecies.
species(snoopy,dogSpecies).


% Adult(Snoopy).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',32).
% From E: 
% 
% adult(snoopy).
adult(snoopy).


% !HoldsAt(Opened(GateAO),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',34).
% From E: 
% 
% holds_at(not(opened(gateAO)),0).
initially not opened(gateAO).
 %  initial_state([not(opened(gateAO))]).
 %  "% =================================".
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',36).
% {position} 


% HoldsAt(Pos(Homer,position),0) & Outside=Loc(position).
% From E: 
% 
% exists(
%    [Position], 
%    (holds_at(pos(homer,Position),0) , 
%     '='(
%        outside, 
%        loc(Position)))).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',36).
exists([Position],  (initially(pos(homer, Position)), outside(loc(Position)))).
% {position} 


% HoldsAt(Pos(Snoopy,position),0) & CageA=Loc(position).
% From E: 
% 
% exists(
%    [Position], 
%    (holds_at(pos(snoopy,Position),0) , 
%     '='(
%        cageA, 
%        loc(Position)))).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',36).
exists([Position],  (initially(pos(snoopy, Position)), cageA(loc(Position)))).
% {position} 


% HoldsAt(Pos(Homer,position),2) & CageA=Loc(position).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',38).
% From E: 
% 
% exists(
%    [Position], 
%    (holds_at(pos(homer,Position),2) , 
%     '='(
%        cageA, 
%        loc(Position)))).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',38).
exists([Position],  (holds_at(pos(homer, Position), 2), cageA(loc(Position)))).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',40).
% {position} 


% HoldsAt(Pos(Snoopy,position),2) & Outside=Loc(position).
% From E: 
% 
% exists(
%    [Position], 
%    (holds_at(pos(snoopy,Position),2) , 
%     '='(
%        outside, 
%        loc(Position)))).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',40).
exists([Position],  (holds_at(pos(snoopy, Position), 2), outside(loc(Position)))).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',42).
% [human]
 % HoldsAt(PosDeterminingFluent(human,1),2).
% From E: 
% 
% holds_at(posDeterminingFluent(Human,1),2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',42).
holds_at(posDeterminingFluent(Human,1),2).


% [event,animal]
 % !HoldsAt(DoneBy(event,animal),2).
% From E: 
% 
% holds_at(not(doneBy(Event,Animal)),2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',42).
holds_at(not(doneBy(Event,Animal)),2).

% range time 0 2
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',44).
% From E: 
% 
% :-call_pel_directive(range(time,0,2)).
:- call_pel_directive(range(time, 0, 2)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',46).
% range position 1 8
% From E: 
% 
% :-call_pel_directive(range(position,1,8)).
:- call_pel_directive(range(position, 1, 8)).

% range offset 0 0
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',46).
% From E: 
% 
% :-call_pel_directive(range(offset,0,0)).
:- call_pel_directive(range(offset, 0, 0)).
%; End of file.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e',49).
% From E: 
% 
% :-call_pel_directive(translate(ending,'/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e.lps')).
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/AkmanEtAl2004/ZooTest3.e.lps')).
