:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPlanning.e',44).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPostdiction.pel')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(ecalc).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPostdiction.pel')).
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Giunchiglia:2004,
%;   author = "Enrico Giunchiglia and Joohyung Lee and Vladimir Lifschitz and Norman C. McCain and Hudson Turner",
%;   year = "2004",
%;   title = "Nonmonotonic causal theories",
%;   journal = "Artificial Intelligence",
%;   volume = "153",
%;   pages = "49--104",
%; }
%;
%; postdiction

% load foundations/Root.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPostdiction.e',23).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:- call_pel_directive(load('foundations/EC.e')).

% load examples/GiunchigliaEtAl2004/MonkeyBananas.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPostdiction.e',25).
:- call_pel_directive(load('examples/GiunchigliaEtAl2004/MonkeyBananas.e')).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPostdiction.e',27).
% HoldsAt(At(Monkey,L1),0).
holds_at(at_loc(monkey,l1),0).


% HoldsAt(At(Bananas,L2),0).
holds_at(at_loc(bananas,l2),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPostdiction.e',29).
% Happens(Walk(L3),0).
happens_at(walk(l3),0).


% Happens(PushBox(L2),1).
happens_at(pushBox(l2),1).

% completion Happens
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPostdiction.e',31).
:- call_pel_directive(completion(happens_at)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPostdiction.e',34).
% range time 0 2
:- call_pel_directive(range(time, 0, 2)).

% range offset 0 0
:- call_pel_directive(range(offset, 0, 0)).
%; End of file.
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPostdiction.pel')).
