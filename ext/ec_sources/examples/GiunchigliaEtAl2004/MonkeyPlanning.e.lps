:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',107).
% From E: 
% 
% :-call_pel_directive(translate(unskipped,'/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPlanning.e.lps')).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPlanning.e.lps')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',107).
% From E: 
% 
% :-call_pel_directive(translate(begining,'/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPlanning.e.lps')).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPlanning.e.lps')).
% Sat, 10 Oct 2020 14:56:41 GMT File: <stream>(0x5597f2b9db00)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Giunchiglia:2004,
%;   author = "Enrico Giunchiglia and Joohyung Lee and Vladimir Lifschitz and Norman C. McCain and Hudson Turner",
%;   year = "2004",
%;   title = "Nonmonotonic causal theories",
%;   journal = "Artificial Intelligence",
%;   volume = "153",
%;   pages = "49--104",
%; }
%;
%; planning

% load foundations/Root.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPlanning.e',23).
% From E: 
% 
% :-call_pel_directive(load('foundations/Root.e')).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPlanning.e',23).
% From E: 
% 
% :-call_pel_directive(load('foundations/EC.e')).
:- call_pel_directive(load('foundations/EC.e')).

% load examples/GiunchigliaEtAl2004/MonkeyBananas.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPlanning.e',25).
% From E: 
% 
% :-call_pel_directive(load('examples/GiunchigliaEtAl2004/MonkeyBananas.e')).
:- call_pel_directive(load('examples/GiunchigliaEtAl2004/MonkeyBananas.e')).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPlanning.e',27).
% HoldsAt(At(Monkey,L1),0).
% From E: 
% 
% holds_at(at_loc(monkey,l1),0).
initially at_loc(monkey, l1).
 %  initial_state([at_loc(monkey,l1)]).
 %  "% =================================".


% HoldsAt(At(Bananas,L2),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPlanning.e',27).
% From E: 
% 
% holds_at(at_loc(bananas,l2),0).
initially at_loc(bananas, l2).
 %  initial_state([at_loc(bananas,l2)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPlanning.e',29).
% HoldsAt(At(Box,L3),0).
% From E: 
% 
% holds_at(at_loc(box,l3),0).
initially at_loc(box, l3).
 %  initial_state([at_loc(box,l3)]).
 %  "% =================================".


% HoldsAt(HasBananas(),4).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPlanning.e',29).
% From E: 
% 
% holds_at(hasBananas(),4).
holds_at(hasBananas,4).


%; PLAN Happens(Walk(L3),0).
%; PLAN Happens(PushBox(L2),1).
%; PLAN Happens(ClimbOn(),2).
%; PLAN Happens(GraspBananas(),3).
%; one event at a time
% [event1,event2,time]
 % Happens(event1,time) & Happens(event2,time) ->
% event1=event2.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPlanning.e',37).
% From E: 
% 
% '->'(
%    (happens_at(Event1,Time) , 
%     happens_at(Event2,Time)), 
%    Event1=Event2).
 %   [Time].
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPlanning.e',37).
Event1, Event2 ->
    Event1=Event2.

% range time 0 4
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPlanning.e',40).
% From E: 
% 
% :-call_pel_directive(range(time,0,4)).
:- call_pel_directive(range(time, 0, 4)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPlanning.e',42).
% range offset 0 0
% From E: 
% 
% :-call_pel_directive(range(offset,0,0)).
:- call_pel_directive(range(offset, 0, 0)).
%; End of file.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPlanning.e',44).
% From E: 
% 
% :-call_pel_directive(translate(ending,'/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPlanning.e.lps')).
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyPlanning.e.lps')).
