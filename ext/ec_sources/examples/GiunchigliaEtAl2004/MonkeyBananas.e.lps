:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/Story1.e',45).
% From E: 
% 
% :-call_pel_directive(translate(unskipped,'/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e.lps')).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e.lps')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/FrankEtAl2003/Story1.e',45).
% From E: 
% 
% :-call_pel_directive(translate(begining,'/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e.lps')).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e.lps')).
% Sat, 10 Oct 2020 14:56:41 GMT File: <stream>(0x5597f2bc5000)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Giunchiglia:2004,
%;   author = "Enrico Giunchiglia and Joohyung Lee and Vladimir Lifschitz and Norman C. McCain and Hudson Turner",
%;   year = "2004",
%;   title = "Nonmonotonic causal theories",
%;   journal = "Artificial Intelligence",
%;   volume = "153",
%;   pages = "49--104",
%; }
%;

% sort object
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',21).
% From E: 
% 
% sort(object).
sort(object).

% sort location
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',21).
% From E: 
% 
% sort(location).
sort(location).

% object Monkey, Bananas, Box
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',24).
% From E: 
% 
% t(object,monkey).
object(monkey).
% From E: 
% 
% t(object,bananas).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',24).
object(bananas).
% From E: 
% 
% t(object,box).
object(box).

% location L1, L2, L3
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',24).
% From E: 
% 
% t(location,l1).
location(l1).
% From E: 
% 
% t(location,l2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',24).
location(l2).
% From E: 
% 
% t(location,l3).
location(l3).

% fluent At(object,location)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',27).
% From E: 
% 
% fluent(at_loc(object,location)).
mpred_prop(at_loc(object,location),fluent).
fluents([at_loc/2]).

% fluent OnBox()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',27).
% From E: 
% 
% fluent(onBox()).
fluents([onBox/0]).

% fluent HasBananas()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',29).
% From E: 
% 
% fluent(hasBananas()).
fluents([hasBananas/0]).

% event Walk(location)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',31).
% From E: 
% 
% event(walk(location)).
mpred_prop(walk(location),event).
events([walk/1]).

% event PushBox(location)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',31).
% From E: 
% 
% event(pushBox(location)).
mpred_prop(pushBox(location),event).
events([pushBox/1]).

% event ClimbOn()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',33).
% From E: 
% 
% event(climbOn()).
events([climbOn/0]).

% event ClimbOff()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',33).
% From E: 
% 
% event(climbOff()).
events([climbOff/0]).

% event GraspBananas()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',35).
% From E: 
% 
% event(graspBananas()).
events([graspBananas/0]).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',37).
% [object,location1,location2,time]
% HoldsAt(At(object,location1),time) &
% HoldsAt(At(object,location2),time) ->
% location1=location2.
% From E: 
% 
% '->'(
%    (holds_at(at_loc(Object,Location1),Time) , 
%     holds_at(at_loc(Object,Location2),Time)), 
%    Location1=Location2).
 %   [Time].
false not equals(Location1, Location2), at_loc(Object, Location1), at_loc(Object, Location2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',37).

 /*  d_pre([ not(equals(Location1,Location2)),
   	holds(at_loc(Object,Location1),Time_At),
   	holds(at_loc(Object,Location2),Time_At)
         ]).
 */
 %  "% =================================".


% [object,location,time]
% object=% Monkey ->
% Initiates(Walk(location),At(object,location),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',43).
% From E: 
% 
% '->'(
%    Object=monkey, 
%    initiates_at(
%       walk(Location), 
%       at_loc(Object,Location), 
%       Time)).
 %   [Time].
false not (walk(Location)initiates at_loc(Object, Location)), equals(Object, monkey).

 /*  d_pre([ not(initiates(walk(Location),
   		      at_loc(Object,Location))),
   	equals(Object,monkey)
         ]).
 */
 %  "% =================================".


% [object,location1,location2,time]
% object=% Monkey &
% HoldsAt(At(object,location1),time) ->
% Terminates(Walk(location2),At(object,location1),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',47).
% From E: 
% 
% '->'(
%    (Object=monkey , 
%     holds_at(at_loc(Object,Location1),Time)), 
%    terminates_at(
%       walk(Location2), 
%       at_loc(Object,Location1), 
%       Time)).
 %   [Time].
false not (walk(Location2)terminates at_loc(Object, Location1)), equals(Object, monkey), at_loc(Object, Location1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',47).

 /*  d_pre([ not(terminates(walk(Location2),
   		       at_loc(Object,Location1))),
   	equals(Object,monkey),
   	holds(at_loc(Object,Location1),Time_At)
         ]).
 */
 %  "% =================================".


% [location,time]
% Happens(Walk(location),time) ->
% !HoldsAt(At(Monkey,location),time) &
% !HoldsAt(OnBox(),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',52).
% From E: 
% 
% '->'(
%    happens_at(walk(Location),Time), 
%    (holds_at(not(at_loc(monkey,Location)),Time) , 
%     holds_at(not(onBox()),Time))).
 %   [Time].
if walk(Location)then not at_loc(monkey, Location), not onBox.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',52).

 /*  reactive_rule([ happens(walk(Location),
   			Time_From,
   			Time_Until)
   	      ],
   	      [ holds(not(at_loc(monkey,Location)),Time_At),
   		holds(not(onBox),Time_At)
   	      ]).
 */
 %  "% =================================".


% [location,time]
% HoldsAt(HasBananas(),time) &
% HoldsAt(At(Monkey,location),time) ->
% HoldsAt(At(Bananas,location),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',57).
% From E: 
% 
% '->'(
%    (holds_at(hasBananas(),Time) , 
%     holds_at(at_loc(monkey,Location),Time)), 
%    holds_at(at_loc(bananas,Location),Time)).
 %   [Time].
at_loc(bananas, Location)if hasBananas, at_loc(monkey, Location).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',57).

 /*  l_int(holds(at_loc(bananas,Location),Time_At),
         [ holds(hasBananas,Time_At),
   	holds(at_loc(monkey,Location),Time_At)
         ]).
 */
 %  "% =================================".


% [object,location,time]
% object=% Box | object=Monkey ->
% Initiates(PushBox(location),At(object,location),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',62).
% From E: 
% 
% '->'(
%    (Object=box ; 
%     Object=monkey), 
%    initiates_at(
%       pushBox(Location), 
%       at_loc(Object,Location), 
%       Time)).
 %   [Time].
false((not(equals(Object, box)), not(equals(Object, monkey)))) ->
    initiates(pushBox(Location), at_loc(Object, Location)).


% [object,location1,location2,time]
% (object=Box | object=Monkey) &
% HoldsAt(At(object,location1),time) ->
% Terminates(PushBox(location2),At(object,location1),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',66).
% From E: 
% 
% '->'(
%    ((Object=box ; 
%      Object=monkey) , 
%     holds_at(at_loc(Object,Location1),Time)), 
%    terminates_at(
%       pushBox(Location2), 
%       at_loc(Object,Location1), 
%       Time)).
 %   [Time].
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',66).
false((not(equals(Object, box)), not(equals(Object, monkey)))), at_loc(Object, Location1) ->
    terminates(pushBox(Location2), at_loc(Object, Location1)).


% [location,time]
% Happens(PushBox(location),time) ->
% ({location1}
%   HoldsAt(At(Box,location1),time) &
%   HoldsAt(At(Monkey,location1),time)) &
% !HoldsAt(At(Monkey,location),time) &
% !HoldsAt(OnBox(),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',71).
% From E: 
% 
% '->'(
%    happens_at(pushBox(Location),Time), 
%    (exists(
%        [Location1], 
%        (holds_at(at_loc(box,Location1),Time) , 
%         holds_at(at_loc(monkey,Location1),Time))) , 
%      holds_at(not(at_loc(monkey,Location)),Time) , 
%     holds_at(not(onBox()),Time))).
 %   [Time].
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',71).
pushBox(Location) ->
    exists([Location1],
            (at_loc(box, Location1), at_loc(monkey, Location1))),
    not(at_loc(monkey, Location)),
    not(onBox).


% [time]
 % Initiates(ClimbOn(),OnBox(),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',77).
% From E: 
% 
% initiates_at(climbOn(),onBox(),Time).
 %   [Time].
climbOn initiates onBox.
 %  initiated(happens(climbOn,Time_From,Time_Until),onBox,[]).
 %  "% =================================".


% [time]
% Happens(ClimbOn(),time) ->
% !HoldsAt(OnBox(),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',81).
% From E: 
% 
% '->'(
%    happens_at(climbOn(),Time), 
%    holds_at(not(onBox()),Time)).
 %   [Time].
not onBox if climbOn.

 /*  l_int(holds(not(onBox),Time_At),
         [happens(climbOn,Time_At,Time_At)]).
 */
 %  "% =================================".


% [time]
 % Terminates(ClimbOff(),OnBox(),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',83).
% From E: 
% 
% terminates_at(climbOff(),onBox(),Time).
 %   [Time].
climbOff terminates onBox.
 %  terminated(happens(climbOff,Time_From,Time_Until),onBox,[]).
 %  "% =================================".


% [time]
% Happens(ClimbOff(),time) ->
% HoldsAt(OnBox(),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',87).
% From E: 
% 
% '->'(
%    happens_at(climbOff(),Time), 
%    holds_at(onBox(),Time)).
 %   [Time].
onBox if climbOff.

 /*  l_int(holds(onBox,Time_At),
         [happens(climbOff,Time_At,Time_At)]).
 */
 %  "% =================================".


% [time]
 % Initiates(GraspBananas(),HasBananas(),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',89).
% From E: 
% 
% initiates_at(graspBananas(),hasBananas(),Time).
 %   [Time].
graspBananas initiates hasBananas.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',89).

 /*  initiated(happens(graspBananas,Time_From,Time_Until),
   	  hasBananas,
   	  []).
 */
 %  "% =================================".


% [object,location,time]
% object=% Bananas ->
% Releases(GraspBananas(),At(object,location),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',93).
% From E: 
% 
% '->'(
%    Object=bananas, 
%    releases_at(
%       graspBananas(), 
%       at_loc(Object,Location), 
%       Time)).
 %   [Time].
false not releases(graspBananas, at_loc(Object, Location)), equals(Object, bananas).

 /*  d_pre([ not(releases(graspBananas,at_loc(Object,Location))),
   	equals(Object,bananas)
         ]).
 */
 %  "% =================================".


% [time]
% Happens(GraspBananas(),time) ->
% ({location1}
%   HoldsAt(At(Bananas,location1),time) &
%   HoldsAt(At(Monkey,location1),time)) &
% HoldsAt(OnBox(),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',97).
% From E: 
% 
% '->'(
%    happens_at(graspBananas(),Time), 
%    (exists(
%        [Location1], 
%        (holds_at(at_loc(bananas,Location1),Time) , 
%         holds_at(at_loc(monkey,Location1),Time))) , 
%     holds_at(onBox(),Time))).
 %   [Time].
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',97).
graspBananas ->
    exists([Location1],
            (at_loc(bananas, Location1), at_loc(monkey, Location1))),
    onBox.


% [time]
% HoldsAt(OnBox(),time) ->
% {location1}%  HoldsAt(At(Box,location1),time) &
%             HoldsAt(At(Monkey,location1),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',104).
% From E: 
% 
% exists(
%    [Location1], 
%    '->'(
%       holds_at(onBox(),Time), 
%       (holds_at(at_loc(box,Location1),Time) , 
%        holds_at(at_loc(monkey,Location1),Time)))).
 %   [Time].
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',104).
exists([Location1], if((at_loc(box, Location1), at_loc(monkey, Location1)), onBox)).


%; End of file.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e',107).
% From E: 
% 
% :-call_pel_directive(translate(ending,'/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e.lps')).
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/GiunchigliaEtAl2004/MonkeyBananas.e.lps')).
