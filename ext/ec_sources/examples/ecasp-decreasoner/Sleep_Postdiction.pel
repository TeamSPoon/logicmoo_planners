:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Sleep_Planning.e',19).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Sleep_Postdiction.pel')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(ecalc).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Sleep_Postdiction.pel')).

% load foundations/Root.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Sleep_Postdiction.e',1).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:- call_pel_directive(load('foundations/EC.e')).

% sort agent
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Sleep_Postdiction.e',4).
sort(agent).

% agent James
t(agent,james).

% fluent Awake(agent)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Sleep_Postdiction.e',7).
fluent(awake(agent)).

% event WakeUp(agent)
event(wakeUp(agent)).

% range time 0 1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Sleep_Postdiction.e',10).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:- call_pel_directive(range(offset, 1, 1)).


% [agent,time]
% (Initiates(WakeUp(agent),Awake(agent),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Sleep_Postdiction.e',13).
initiates_at(wakeUp(Agent),awake(Agent),Time).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Sleep_Postdiction.e',15).
% [agent,time]
% (Happens(WakeUp(agent),time)->
% !HoldsAt(Awake(agent),time)).
happens_at(wakeUp(Agent), Time) ->
    holds_at(not(awake(Agent)), Time).


% Happens(WakeUp(James),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Sleep_Postdiction.e',17).
happens_at(wakeUp(james),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Sleep_Postdiction.e',19).
% HoldsAt(Awake(James),1).
holds_at(awake(james),1).

% completion Happens
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Sleep_Postdiction.e',21).
:- call_pel_directive(completion(happens_at)).
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Sleep_Postdiction.pel')).
