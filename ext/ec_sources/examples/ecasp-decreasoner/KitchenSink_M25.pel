:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink.e',66).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.pel')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(ecalc).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.pel')).
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @inproceedings{Shanahan:1990,
%;   author = "Murray Shanahan",
%;   year = "1990",
%;   title = "Representing continuous change in the event calculus",
%;   editor = "Luigia Carlucci Aiello",
%;   booktitle = "\uppercase{P}roceedings of the \uppercase{N}inth \uppercase{E}uropean \uppercase{C}onference on \uppercase{A}rtificial \uppercase{I}ntelligence",
%;   pages = "598--603",
%;   address = "London",
%;   publisher = "Pitman",
%; }
%;
%; \fullciteA[pp. 326--329]{Shanahan:1997}
%;
%; @book{Shanahan:1997,
%;   author = "Murray Shanahan",
%;   year = "1997",
%;   title = "Solving the Frame Problem",
%;   address = "Cambridge, MA",
%;   publisher = "MIT Press",
%; }
%;
%; deduction
%;
%; modifications from Shanahan's formulation:
%; InitiallyP -> HoldsAt
%; timestamps
%; generalized (SkF6)
%;

% option trajectory on
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.e',40).
:- call_pel_directive(option(trajectory, on)).

% load foundations/Root.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.e',42).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:- call_pel_directive(load('foundations/EC.e')).

% sort height: integer
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.e',45).
subsort(height,integer).

% event TapOn()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.e',47).
event(tapOn()).

% event TapOff()
event(tapOff()).

% event Overflow()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.e',49).
event(overflow()).

% fluent Filling()
fluent(filling()).

% fluent Height(height)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.e',51).
fluent(height(height)).

% fluent Spilling()
fluent(spilling()).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.e',54).
% [time]
 % Initiates(TapOn(),Filling(),time).
initiates_at(tapOn(),filling(),Time).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.e',56).
% [time]
 % Terminates(TapOff(),Filling(),time).
terminates_at(tapOff(),filling(),Time).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.e',58).
%; should probably add:
%;[time] Terminates(TapOff(),Spilling(),time).
% [height,time]
 
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.e',61).
% Releases(TapOn(),Height(height),time).
releases_at(tapOn(),height(Height),Time).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.e',63).
% [height,time]
% HoldsAt(Height(height),time) ->
% Initiates(TapOff(),Height(height),time).
holds_at(height(Height), Time) ->
    initiates_at(tapOff(), height(Height), Time).


% [time]
 % Terminates(Overflow(),Filling(),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.e',66).
terminates_at(overflow(),filling(),Time).


% [height,time]
% HoldsAt(Height(height),time) ->
% Initiates(Overflow(),Height(height),time).
holds_at(height(Height), Time) ->
    initiates_at(overflow(), height(Height), Time).


% [time]
 % Initiates(Overflow(),Spilling(),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.e',72).
initiates_at(overflow(),spilling(),Time).


% [height1,height2,offset,time]
% HoldsAt(Height(height1),time) &
% height2 = height1 + offset ->
% Trajectory(Filling(),time,Height(height2),offset).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.e',76).
holds_at(height(Height1), Time), Height2=Height1+Offset ->
    trajectory(filling(), Time, height(Height2), Offset).


% [height1,height2,time]
% HoldsAt(Height(height1),time) &
% HoldsAt(Height(height2),time) ->
% height1 = height2.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.e',81).
holds_at(height(Height1), Time), holds_at(height(Height2), Time) ->
    Height1=Height2.


% [time]
 % HoldsAt(Height(15),time) & HoldsAt(Filling(),time) ->
% Happens(Overflow(),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.e',84).
holds_at(height(15), Time), holds_at(filling(), Time) ->
    happens_at(overflow(), Time).


% HoldsAt(Height(0),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.e',87).
holds_at(height(0),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.e',89).
% !HoldsAt(Filling(),0).
holds_at(not(filling()),0).


% !HoldsAt(Spilling(),0).
holds_at(not(spilling()),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.e',91).
% Happens(TapOn(),5).
happens_at(tapOn(),5).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.e',93).
% completion Happens
:- call_pel_directive(completion(happens_at)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.e',95).
% range time 0 25
:- call_pel_directive(range(time, 0, 25)).

% range height 0 15
:- call_pel_directive(range(height, 0, 15)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.e',97).
% range offset 1 15
:- call_pel_directive(range(offset, 1, 15)).
%; End of file.
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/KitchenSink_M25.pel')).
