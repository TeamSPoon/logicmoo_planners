:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StolenCar40.e',65).
% From E: 
% 
% :-call_pel_directive(translate(unskipped,'/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e.lps')).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e.lps')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StolenCar40.e',65).
% From E: 
% 
% :-call_pel_directive(translate(begining,'/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e.lps')).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e.lps')).
% Sat, 10 Oct 2020 14:56:30 GMT File: <stream>(0x5597f2913700)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{GinsbergSmith:1988a,
%;   author = "Matthew L. Ginsberg and David E. Smith",
%;   year = "1988",
%;   title = "Reasoning about action \uppercase{I}: \uppercase{A} possible worlds approach",
%;   journal = "Artificial Intelligence",
%;   volume = "35",
%;   number = "2",
%;   pages = "165--195",
%; }
%;
%; \fullciteA[pp. 288--289]{Shanahan:1997}
%;
%; @book{Shanahan:1997,
%;   author = "Murray Shanahan",
%;   year = "1997",
%;   title = "Solving the Frame Problem",
%;   address = "Cambridge, MA",
%;   publisher = "MIT Press",
%; }
%;
%; deduction
%;
%; modifications from Shanahan's formulation:
%; timestamps
%; added:
%; !HoldsAt(Blocked1(),0).
%; !HoldsAt(Blocked2(),0).
%;

% load foundations/Root.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e',40).
% From E: 
% 
% :-call_pel_directive(load('foundations/Root.e')).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e',42).
% From E: 
% 
% :-call_pel_directive(load('foundations/EC.e')).
:- call_pel_directive(load('foundations/EC.e')).

% event Close1()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e',44).
% From E: 
% 
% event(close1()).
events([close1/0]).

% event Close2()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e',44).
% From E: 
% 
% event(close2()).
events([close2/0]).

% event Start()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e',46).
% From E: 
% 
% event(start()).
events([start/0]).

% fluent Blocked1()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e',46).
% From E: 
% 
% fluent(blocked1()).
fluents([blocked1/0]).

% fluent Blocked2()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e',48).
% From E: 
% 
% fluent(blocked2()).
fluents([blocked2/0]).

% fluent Stuffy()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e',48).
% From E: 
% 
% fluent(stuffy()).
fluents([stuffy/0]).

% noninertial Stuffy
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e',50).
% From E: 
% 
% :-call_pel_directive(noninertial(stuffy)).
:- call_pel_directive(noninertial(stuffy)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e',52).
% [time]
 % Initiates(Close1(),Blocked1(),time).
% From E: 
% 
% initiates_at(close1(),blocked1(),Time).
 %   [Time].
close1 initiates blocked1.
 %  initiated(happens(close1,Time_From,Time_Until),blocked1,[]).
 %  "% =================================".


% [time]
 % Initiates(Close2(),Blocked2(),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e',52).
% From E: 
% 
% initiates_at(close2(),blocked2(),Time).
 %   [Time].
close2 initiates blocked2.
 %  initiated(happens(close2,Time_From,Time_Until),blocked2,[]).
 %  "% =================================".


% [time]
% HoldsAt(Stuffy(),time) <->
% HoldsAt(Blocked1(),time)&HoldsAt(Blocked2(),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e',56).
% From E: 
% 
% <->(
%    holds_at(stuffy(),Time), 
%    (holds_at(blocked1(),Time) , 
%     holds_at(blocked2(),Time))).
 %   [Time].
if stuffy then blocked1, blocked2.

 /*  reactive_rule([stuffy],
   	      [ holds(blocked1,Time_At),
   		holds(blocked2,Time_At)
   	      ]).
 */
 %  "% =================================".
if blocked1, blocked2 then stuffy.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e',56).

 /*  reactive_rule([ holds(blocked1,Time_At2),
   		holds(blocked2,Time_At2)
   	      ],
   	      [stuffy]).
 */
 %  "% =================================".


% [time]
 % Initiates(Start(),Blocked1(),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e',58).
% From E: 
% 
% initiates_at(start(),blocked1(),Time).
 %   [Time].
start initiates blocked1.
 %  initiated(happens(start,Time_From,Time_Until),blocked1,[]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e',60).
% [time]
 % Terminates(Start(),Blocked2(),time).
% From E: 
% 
% terminates_at(start(),blocked2(),Time).
 %   [Time].
start terminates blocked2.
 %  terminated(happens(start,Time_From,Time_Until),blocked2,[]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e',62).
% !HoldsAt(Blocked1(),0).
% From E: 
% 
% holds_at(not(blocked1()),0).
initially not blocked1.
 %  initial_state([not(blocked1)]).
 %  "% =================================".


% !HoldsAt(Blocked2(),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e',62).
% From E: 
% 
% holds_at(not(blocked2()),0).
initially not blocked2.
 %  initial_state([not(blocked2)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e',64).
% Happens(Start(),0).
% From E: 
% 
% happens_at(start(),0).
observe start at 0.
 %  observe([start],0).
 %  "% =================================".


% Happens(Close2(),1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e',64).
% From E: 
% 
% happens_at(close2(),1).
observe close2 at 1.
 %  observe([close2],1).
 %  "% =================================".

% completion Happens
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e',66).
% From E: 
% 
% :-call_pel_directive(completion(happens_at)).
:- call_pel_directive(completion(happens_at)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e',69).
% range time 0 2
% From E: 
% 
% :-call_pel_directive(range(time,0,2)).
:- call_pel_directive(range(time, 0, 2)).

% range offset 1 1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e',69).
% From E: 
% 
% :-call_pel_directive(range(offset,1,1)).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e',72).
% From E: 
% 
% :-call_pel_directive(translate(ending,'/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e.lps')).
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/StuffyRoom2.e.lps')).
