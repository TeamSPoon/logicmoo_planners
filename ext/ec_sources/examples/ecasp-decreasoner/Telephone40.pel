:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone3.e',163).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.pel')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(ecalc).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.pel')).
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

% load foundations/Root.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',20).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:- call_pel_directive(load('foundations/EC.e')).

% sort agent
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',23).
sort(agent).

% sort phone
sort(phone).

% agent Agent1, Agent2
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',26).
t(agent,agent1).
t(agent,agent2).

% phone Phone1, Phone2
t(phone,phone1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',26).
t(phone,phone2).

% fluent Ringing(phone,phone)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',29).
fluent(ringing(phone,phone)).

% fluent DialTone(phone)
fluent(dialTone(phone)).

% fluent BusySignal(phone)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',31).
fluent(busySignal(phone)).

% fluent Idle(phone)
fluent(idle(phone)).

% fluent Connected(phone,phone)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',33).
fluent(connected(phone,phone)).

% fluent Disconnected(phone)
fluent(disconnected(phone)).

% event PickUp(agent,phone)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',36).
event(pickUp(agent,phone)).

% event SetDown(agent,phone)
event(setDown(agent,phone)).

% event Dial(agent,phone,phone)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',38).
event(dial(agent,phone,phone)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',40).
%; Sigma
% [agent,phone,time]
% HoldsAt(Idle(phone),time) ->
% Initiates(PickUp(agent,phone),DialTone(phone),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',42).
holds_at(idle(Phone), Time) ->
    initiates_at(pickUp(Agent, Phone),
                 dialTone(Phone),
                 Time).


% [agent,phone,time]
% HoldsAt(Idle(phone),time) ->
% Terminates(PickUp(agent,phone),Idle(phone),time).
holds_at(idle(Phone), Time) ->
    terminates_at(pickUp(Agent, Phone),
                  idle(Phone),
                  Time).


% [agent,phone,time]
% HoldsAt(DialTone(phone),time) ->
% Initiates(SetDown(agent,phone),Idle(phone),time).
holds_at(dialTone(Phone), Time) ->
    initiates_at(setDown(Agent, Phone),
                 idle(Phone),
                 Time).


% [agent,phone,time]
% HoldsAt(DialTone(phone),time) ->
% Terminates(SetDown(agent,phone),DialTone(phone),time).
holds_at(dialTone(Phone), Time) ->
    terminates_at(setDown(Agent, Phone),
                  dialTone(Phone),
                  Time).


% [agent,phone1,phone2,time]
% HoldsAt(DialTone(phone1),time) &
% HoldsAt(Idle(phone2),time) ->
% Initiates(Dial(agent,phone1,phone2),Ringing(phone1,phone2),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',59).
holds_at(dialTone(Phone1), Time), holds_at(idle(Phone2), Time) ->
    initiates_at(dial(Agent, Phone1, Phone2),
                 ringing(Phone1, Phone2),
                 Time).


% [agent,phone1,phone2,time]
% HoldsAt(DialTone(phone1),time) &
% HoldsAt(Idle(phone2),time) ->
% Terminates(Dial(agent,phone1,phone2),DialTone(phone1),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',64).
holds_at(dialTone(Phone1), Time), holds_at(idle(Phone2), Time) ->
    terminates_at(dial(Agent, Phone1, Phone2),
                  dialTone(Phone1),
                  Time).


% [agent,phone1,phone2,time]
% HoldsAt(DialTone(phone1),time) &
% HoldsAt(Idle(phone2),time) ->
% Terminates(Dial(agent,phone1,phone2),Idle(phone2),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',69).
holds_at(dialTone(Phone1), Time), holds_at(idle(Phone2), Time) ->
    terminates_at(dial(Agent, Phone1, Phone2),
                  idle(Phone2),
                  Time).


% [agent,phone1,phone2,time]
% HoldsAt(DialTone(phone1),time) &
% !HoldsAt(Idle(phone2),time) ->
% Initiates(Dial(agent,phone1,phone2),BusySignal(phone1),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',74).
holds_at(dialTone(Phone1), Time), holds_at(not(idle(Phone2)), Time) ->
    initiates_at(dial(Agent, Phone1, Phone2),
                 busySignal(Phone1),
                 Time).


% [agent,phone1,phone2,time]
% HoldsAt(DialTone(phone1),time) &
% !HoldsAt(Idle(phone2),time) ->
% Terminates(Dial(agent,phone1,phone2),DialTone(phone1),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',79).
holds_at(dialTone(Phone1), Time), holds_at(not(idle(Phone2)), Time) ->
    terminates_at(dial(Agent, Phone1, Phone2),
                  dialTone(Phone1),
                  Time).


% [agent,phone,time]
% HoldsAt(BusySignal(phone),time) ->
% Initiates(SetDown(agent,phone),Idle(phone),time).
holds_at(busySignal(Phone), Time) ->
    initiates_at(setDown(Agent, Phone),
                 idle(Phone),
                 Time).


% [agent,phone,time]
% HoldsAt(BusySignal(phone),time) ->
% Terminates(SetDown(agent,phone),BusySignal(phone),time).
holds_at(busySignal(Phone), Time) ->
    terminates_at(setDown(Agent, Phone),
                  busySignal(Phone),
                  Time).


% [agent,phone1,phone2,time]
% HoldsAt(Ringing(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone1),Idle(phone1),time).
holds_at(ringing(Phone1, Phone2), Time) ->
    initiates_at(setDown(Agent, Phone1),
                 idle(Phone1),
                 Time).


% [agent,phone1,phone2,time]
% HoldsAt(Ringing(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone1),Idle(phone2),time).
holds_at(ringing(Phone1, Phone2), Time) ->
    initiates_at(setDown(Agent, Phone1),
                 idle(Phone2),
                 Time).


% [agent,phone1,phone2,time]
% HoldsAt(Ringing(phone1,phone2),time) ->
% Terminates(SetDown(agent,phone1),Ringing(phone1,phone2),time).
holds_at(ringing(Phone1, Phone2), Time) ->
    terminates_at(setDown(Agent, Phone1),
                  ringing(Phone1, Phone2),
                  Time).


% [agent,phone1,phone2,time]
% HoldsAt(Ringing(phone1,phone2),time) ->
% Initiates(PickUp(agent,phone2),Connected(phone1,phone2),time).
holds_at(ringing(Phone1, Phone2), Time) ->
    initiates_at(pickUp(Agent, Phone2),
                 connected(Phone1, Phone2),
                 Time).


% [agent,phone1,phone2,time]
% HoldsAt(Ringing(phone1,phone2),time) ->
% Terminates(PickUp(agent,phone2),Ringing(phone1,phone2),time).
holds_at(ringing(Phone1, Phone2), Time) ->
    terminates_at(pickUp(Agent, Phone2),
                  ringing(Phone1, Phone2),
                  Time).


% [agent,phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone1),Idle(phone1),time).
holds_at(connected(Phone1, Phone2), Time) ->
    initiates_at(setDown(Agent, Phone1),
                 idle(Phone1),
                 Time).


% [agent,phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone1),Disconnected(phone2),time).
holds_at(connected(Phone1, Phone2), Time) ->
    initiates_at(setDown(Agent, Phone1),
                 disconnected(Phone2),
                 Time).


% [agent,phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) ->
% Terminates(SetDown(agent,phone1),Connected(phone1,phone2),time).
holds_at(connected(Phone1, Phone2), Time) ->
    terminates_at(setDown(Agent, Phone1),
                  connected(Phone1, Phone2),
                  Time).


% [agent,phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone2),Idle(phone2),time).
holds_at(connected(Phone1, Phone2), Time) ->
    initiates_at(setDown(Agent, Phone2),
                 idle(Phone2),
                 Time).


% [agent,phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone2),Disconnected(phone1),time).
holds_at(connected(Phone1, Phone2), Time) ->
    initiates_at(setDown(Agent, Phone2),
                 disconnected(Phone1),
                 Time).


% [agent,phone1,phone2,time]
% HoldsAt(Connected(phone1,phone2),time) ->
% Terminates(SetDown(agent,phone2),Connected(phone1,phone2),time).
holds_at(connected(Phone1, Phone2), Time) ->
    terminates_at(setDown(Agent, Phone2),
                  connected(Phone1, Phone2),
                  Time).


% [agent,phone,time]
% HoldsAt(Disconnected(phone),time) ->
% Initiates(SetDown(agent,phone),Idle(phone),time).
holds_at(disconnected(Phone), Time) ->
    initiates_at(setDown(Agent, Phone),
                 idle(Phone),
                 Time).


% [agent,phone,time]
% HoldsAt(Disconnected(phone),time) ->
% Terminates(SetDown(agent,phone),Disconnected(phone),time).
holds_at(disconnected(Phone), Time) ->
    terminates_at(setDown(Agent, Phone),
                  disconnected(Phone),
                  Time).


%; Delta

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',145).
% Delta: 
directive(delta).
 


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',145).
% Happens(PickUp(Agent1,Phone1),0).
happens_at(pickUp(agent1,phone1),0).

% Delta: 
directive(delta).
 


% Happens(Dial(Agent1,Phone1,Phone2),8).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',145).
happens_at(dial(agent1,phone1,phone2),8).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',147).
% Delta: 
directive(delta).
 


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',147).
% Happens(PickUp(Agent2,Phone2),32).
happens_at(pickUp(agent2,phone2),32).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',149).
%; Gamma
% [phone]
 % HoldsAt(Idle(phone),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',151).
holds_at(idle(Phone),0).


% [phone]
 % !HoldsAt(DialTone(phone),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',151).
holds_at(not(dialTone(Phone)),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',153).
% [phone]
 % !HoldsAt(BusySignal(phone),0).
holds_at(not(busySignal(Phone)),0).


% [phone1,phone2]
 % !HoldsAt(Ringing(phone1,phone2),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',153).
holds_at(not(ringing(Phone1,Phone2)),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',155).
% [phone1,phone2]
 % !HoldsAt(Connected(phone1,phone2),0).
holds_at(not(connected(Phone1,Phone2)),0).


% [phone]
 % !HoldsAt(Disconnected(phone),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',155).
holds_at(not(disconnected(Phone)),0).

% completion Delta Happens
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',157).
:- call_pel_directive(completion(delta)).
:- call_pel_directive(completion(happens_at)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.e',160).
% range time 0 40
:- call_pel_directive(range(time, 0, 40)).

% range offset 1 1
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/Telephone40.pel')).
