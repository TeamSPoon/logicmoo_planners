:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon15.e',94).
% From E: 
% 
% :-call_pel_directive(translate(unskipped,'/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e.lps')).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e.lps')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon15.e',94).
% From E: 
% 
% :-call_pel_directive(translate(begining,'/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e.lps')).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e.lps')).
% Sat, 10 Oct 2020 14:56:27 GMT File: <stream>(0x5597f2ba2f00)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{MillerShanahan:1999,
%;   author = "Rob Miller and Murray Shanahan",
%;   year = "1999",
%;   title = "The event calculus in classical logic---\uppercase{A}lternative axiomatisations",
%;   journal = "Link{\"{o}}ping Electronic Articles in Computer and Information Science",
%;   volume = "4",
%;   number = "016",
%; }
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

% option encoding 3
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',29).
% From E: 
% 
% :-call_pel_directive(option(encoding,3)).
:- call_pel_directive(option(encoding, 3)).

% option trajectory on
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',29).
% From E: 
% 
% :-call_pel_directive(option(trajectory,on)).
:- call_pel_directive(option(trajectory, on)).

% load foundations/Root.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',32).
% From E: 
% 
% :-call_pel_directive(load('foundations/Root.e')).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',32).
% From E: 
% 
% :-call_pel_directive(load('foundations/EC.e')).
:- call_pel_directive(load('foundations/EC.e')).

% sort balloon
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',35).
% From E: 
% 
% sort(balloon).
sort(balloon).

% sort agent
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',35).
% From E: 
% 
% sort(agent).
sort(agent).

% sort height: integer
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',37).
% From E: 
% 
% subsort(height,integer).
subsort(height,integer).

% agent Nathan
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',39).
% From E: 
% 
% t(agent,nathan).
agent(nathan).

% balloon Balloon
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',39).
% From E: 
% 
% t(balloon,balloon).
balloon(balloon).

% fluent HeaterOn(balloon)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',42).
% From E: 
% 
% fluent(heaterOn(balloon)).
mpred_prop(heaterOn(balloon),fluent).
fluents([heaterOn/1]).

% fluent Height(balloon,height)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',42).
% From E: 
% 
% fluent(height(balloon,height)).
mpred_prop(height(balloon,height),fluent).
fluents([height/2]).

% noninertial Height
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',44).
% From E: 
% 
% :-call_pel_directive(noninertial(height)).
:- call_pel_directive(noninertial(height)).

% event TurnOnHeater(agent,balloon)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',46).
% From E: 
% 
% event(turnOnHeater(agent,balloon)).
events([turnOnHeater/2]).
mpred_prop(turnOnHeater(agent,balloon),action).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',46).
actions([turnOnHeater/2]).

% event TurnOffHeater(agent,balloon)
% From E: 
% 
% event(turnOffHeater(agent,balloon)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',46).
events([turnOffHeater/2]).
mpred_prop(turnOffHeater(agent,balloon),action).
actions([turnOffHeater/2]).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',49).
%; Sigma
% [agent,balloon,time]
% Initiates(TurnOnHeater(agent,balloon),HeaterOn(balloon),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',51).
% From E: 
% 
% initiates_at(
%    turnOnHeater(Agent,Balloon), 
%    heaterOn(Balloon), 
%    Time).
 %   [Time].
turnOnHeater(Agent, Balloon)initiates heaterOn(Balloon).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',51).

 /*  initiated(happens(turnOnHeater(Agent,Balloon),
   		  Time_From,
   		  Time_Until),
   	  heaterOn(Balloon),
   	  []).
 */
 %  "% =================================".


% [agent,balloon,time]
% Terminates(TurnOffHeater(agent,balloon),HeaterOn(balloon),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',55).
% From E: 
% 
% terminates_at(
%    turnOffHeater(Agent,Balloon), 
%    heaterOn(Balloon), 
%    Time).
 %   [Time].
turnOffHeater(Agent, Balloon)terminates heaterOn(Balloon).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',55).

 /*  terminated(happens(turnOffHeater(Agent,Balloon),
   		   Time_From,
   		   Time_Until),
   	   heaterOn(Balloon),
   	   []).
 */
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',57).
%; Delta

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',59).
% Delta: 
% From E: 
% 
% directive(delta).
directive(delta).
 


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',59).
% Happens(TurnOnHeater(Nathan,Balloon),0).
% From E: 
% 
% happens_at(turnOnHeater(nathan,balloon),0).
observe turnOnHeater(nathan, balloon)at 0.
 %  observe([turnOnHeater(nathan,balloon)],0).
 %  "% =================================".

% Delta: 
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',59).
% From E: 
% 
% directive(delta).
directive(delta).
 


% Happens(TurnOffHeater(Nathan,Balloon),8).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',59).
% From E: 
% 
% happens_at(turnOffHeater(nathan,balloon),8).
observe turnOffHeater(nathan, balloon)at 8.
 %  observe([turnOffHeater(nathan,balloon)],8).
 %  "% =================================".


%; Psi
% [balloon,height1,height2,time]
% HoldsAt(Height(balloon,height1),time) &
% HoldsAt(Height(balloon,height2),time) ->
% height1=height2.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',64).
% From E: 
% 
% '->'(
%    (holds_at(height(Balloon,Height1),Time) , 
%     holds_at(height(Balloon,Height2),Time)), 
%    Height1=Height2).
 %   [Time].
false not equals(Height1, Height2), height(Balloon, Height1), height(Balloon, Height2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',64).

 /*  d_pre([ not(equals(Height1,Height2)),
   	holds(height(Balloon,Height1),Time_At),
   	holds(height(Balloon,Height2),Time_At)
         ]).
 */
 %  "% =================================".


%; Pi
% [balloon,height1,height2,offset,time]
% HoldsAt(Height(balloon,height1),time) &
% height2 = (height1 + offset) ->
% Trajectory(HeaterOn(balloon),time,Height(balloon,height2),offset).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',71).
% From E: 
% 
% '->'(
%    (holds_at(height(Balloon,Height1),Time) , 
%     Height2=Height1+Offset), 
%    trajectory(
%       heaterOn(Balloon), 
%       Time, Time, 
%                height(Balloon,Height2), 
%                Offset)).
 %   [Time].
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',71).
holds_at(height(Balloon, Height1), Time), Height2=Height1+Offset ->
    trajectory(heaterOn(Balloon),
               Time,
               height(Balloon, Height2),
               Offset).


% [balloon,height1,height2,offset,time]
% HoldsAt(Height(balloon,height1),time) &
% height2 = (height1 - offset) ->
% AntiTrajectory(HeaterOn(balloon),time,Height(balloon,height2),offset).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',77).
% From E: 
% 
% '->'(
%    (holds_at(height(Balloon,Height1),Time) , 
%     Height2=Height1-Offset), 
%    antiTrajectory(
%       heaterOn(Balloon), 
%       Time, Time, 
%                height(Balloon,Height2), 
%                Offset)).
 %   [Time].
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',77).
holds_at(height(Balloon, Height1), Time), Height2=Height1-Offset ->
    antiTrajectory(heaterOn(Balloon),
                   Time,
                   height(Balloon, Height2),
                   Offset).


%; Gamma


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',83).
% HoldsAt(Height(Balloon,0),0).
% From E: 
% 
% holds_at(height(balloon,0),0).
initially height(balloon, 0).
 %  initial_state([height(balloon,0)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',85).
%; added:


% !HoldsAt(HeaterOn(Balloon),0).
% From E: 
% 
% holds_at(not(heaterOn(balloon)),0).
initially not heaterOn(balloon).
 %  initial_state([not(heaterOn(balloon))]).
 %  "% =================================".

% completion Delta Happens
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',87).
% From E: 
% 
% :-call_pel_directive(completion(delta)).
:- call_pel_directive(completion(delta)).
% From E: 
% 
% :-call_pel_directive(completion(happens_at)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',87).
:- call_pel_directive(completion(happens_at)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',90).
% range time 0 20
% From E: 
% 
% :-call_pel_directive(range(time,0,20)).
:- call_pel_directive(range(time, 0, 20)).

% range height 0 8
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',90).
% From E: 
% 
% :-call_pel_directive(range(height,0,8)).
:- call_pel_directive(range(height, 0, 8)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',92).
% range offset 1 8
% From E: 
% 
% :-call_pel_directive(range(offset,1,8)).
:- call_pel_directive(range(offset, 1, 8)).
%; End of file.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e',94).
% From E: 
% 
% :-call_pel_directive(translate(ending,'/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e.lps')).
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp-decreasoner/HotAirBalloon20.e.lps')).
