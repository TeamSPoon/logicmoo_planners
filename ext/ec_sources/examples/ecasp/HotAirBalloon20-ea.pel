:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon15-ea.e',74).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.pel')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(ecalc).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.pel')).
%; HotAirBalloon20-ea.e

% option encoding 3
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',2).
:- call_pel_directive(option(encoding, 3)).

% option trajectory on
:- call_pel_directive(option(trajectory, on)).

% load foundations/Root.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',5).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:- call_pel_directive(load('foundations/EC.e')).

% sort balloon
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',8).
sort(balloon).

% sort agent
sort(agent).

% sort height: integer
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',10).
subsort(height,integer).

% agent Nathan
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',12).
t(agent,nathan).

% balloon Balloon
t(balloon,balloon).

% fluent HeaterOn(balloon)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',15).
fluent(heaterOn(balloon)).

% fluent Height(balloon,height)
fluent(height(balloon,height)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',15).
%;noninertial Height

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',19).
% event TurnOnHeater(agent,balloon)
event(turnOnHeater(agent,balloon)).

% event TurnOffHeater(agent,balloon)
event(turnOffHeater(agent,balloon)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',22).
%; Sigma
% [agent,balloon,time]
% Initiates(TurnOnHeater(agent,balloon),HeaterOn(balloon),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',24).
initiates_at(turnOnHeater(Agent,Balloon),
	     heaterOn(Balloon),
	     Time).


% [agent,balloon,time]
% Terminates(TurnOffHeater(agent,balloon),HeaterOn(balloon),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',28).
terminates_at(turnOffHeater(Agent,Balloon),
	      heaterOn(Balloon),
	      Time).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',30).
%; Delta


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',32).
% Happens(TurnOnHeater(Nathan,Balloon),0).
happens_at(turnOnHeater(nathan,balloon),0).


% Happens(TurnOffHeater(Nathan,Balloon),8).
happens_at(turnOffHeater(nathan,balloon),8).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',36).
%; Psi
% [balloon,height1,height2,time]
% (HoldsAt(Height(balloon,height1),time) &
% HoldsAt(Height(balloon,height2),time) ->
% height1=height2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',38).
holds_at(height(Balloon, Height1), Time), holds_at(height(Balloon, Height2), Time) ->
    Height1=Height2.


%; Pi
% [balloon,height1,height2,offset,time]
% (HoldsAt(Height(balloon,height1),time) &
% height2 = (height1 + offset) ->
% Trajectory(HeaterOn(balloon),time,Height(balloon,height2),offset)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',45).
holds_at(height(Balloon, Height1), Time), Height2=Height1+Offset ->
    trajectory(heaterOn(Balloon),
               Time,
               height(Balloon, Height2),
               Offset).


% [balloon,height1,height2,offset,time]
% (HoldsAt(Height(balloon,height1),time) &
% height2 = (height1 - offset) ->
% AntiTrajectory(HeaterOn(balloon),time,Height(balloon,height2),offset)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',51).
holds_at(height(Balloon, Height1), Time), Height2=Height1-Offset ->
    antiTrajectory(heaterOn(Balloon),
                   Time,
                   height(Balloon, Height2),
                   Offset).


%; Gamma


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',57).
% HoldsAt(Height(Balloon,0),0).
holds_at(height(balloon,0),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',59).
%; added:


% !HoldsAt(HeaterOn(Balloon),0).
holds_at(not(heaterOn(balloon)),0).


%;noninertial Height
% [balloon,height,time]
% ReleasedAt(Height(balloon,height), time).
released_at(height(Balloon,Height),Time).


% [balloon]
% !ReleasedAt(HeaterOn(balloon),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',65).
not(released_at(heaterOn(Balloon),0)).

% completion Happens
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',67).
:- call_pel_directive(completion(happens_at)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',70).
% range time 0 20
:- call_pel_directive(range(time, 0, 20)).

% range height 0 8
:- call_pel_directive(range(height, 0, 8)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',72).
% range offset 1 8
:- call_pel_directive(range(offset, 1, 8)).
%; End of file.
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.pel')).
