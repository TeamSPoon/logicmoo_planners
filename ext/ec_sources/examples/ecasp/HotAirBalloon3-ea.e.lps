:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',74).
% From E: 
% 
% :-call_pel_directive(translate(unskipped,'/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e.lps')).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e.lps')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon20-ea.e',74).
% From E: 
% 
% :-call_pel_directive(translate(begining,'/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e.lps')).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e.lps')).
% Sat, 10 Oct 2020 14:56:35 GMT File: <stream>(0x5597f1774700)%; HotAirBalloon3-ea.e

% option encoding 3
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',2).
% From E: 
% 
% :-call_pel_directive(option(encoding,3)).
:- call_pel_directive(option(encoding, 3)).

% option trajectory on
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',2).
% From E: 
% 
% :-call_pel_directive(option(trajectory,on)).
:- call_pel_directive(option(trajectory, on)).

% load foundations/Root.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',5).
% From E: 
% 
% :-call_pel_directive(load('foundations/Root.e')).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',5).
% From E: 
% 
% :-call_pel_directive(load('foundations/EC.e')).
:- call_pel_directive(load('foundations/EC.e')).

% sort balloon
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',8).
% From E: 
% 
% sort(balloon).
sort(balloon).

% sort agent
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',8).
% From E: 
% 
% sort(agent).
sort(agent).

% sort height: integer
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',10).
% From E: 
% 
% subsort(height,integer).
subsort(height,integer).

% agent Nathan
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',12).
% From E: 
% 
% t(agent,nathan).
agent(nathan).

% balloon Balloon
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',12).
% From E: 
% 
% t(balloon,balloon).
balloon(balloon).

% fluent HeaterOn(balloon)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',15).
% From E: 
% 
% fluent(heaterOn(balloon)).
mpred_prop(heaterOn(balloon),fluent).
fluents([heaterOn/1]).

% fluent Height(balloon,height)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',15).
% From E: 
% 
% fluent(height(balloon,height)).
mpred_prop(height(balloon,height),fluent).
fluents([height/2]).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',15).
%;noninertial Height

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',19).
% event TurnOnHeater(agent,balloon)
% From E: 
% 
% event(turnOnHeater(agent,balloon)).
events([turnOnHeater/2]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',19).
mpred_prop(turnOnHeater(agent,balloon),action).
actions([turnOnHeater/2]).

% event TurnOffHeater(agent,balloon)
% From E: 
% 
% event(turnOffHeater(agent,balloon)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',19).
events([turnOffHeater/2]).
mpred_prop(turnOffHeater(agent,balloon),action).
actions([turnOffHeater/2]).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',22).
%; Sigma
% [agent,balloon,time]
% Initiates(TurnOnHeater(agent,balloon),HeaterOn(balloon),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',24).
% From E: 
% 
% initiates_at(
%    turnOnHeater(Agent,Balloon), 
%    heaterOn(Balloon), 
%    Time).
 %   [Time].
turnOnHeater(Agent, Balloon)initiates heaterOn(Balloon).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',24).

 /*  initiated(happens(turnOnHeater(Agent,Balloon),
   		  Time_From,
   		  Time_Until),
   	  heaterOn(Balloon),
   	  []).
 */
 %  "% =================================".


% [agent,balloon,time]
% Terminates(TurnOffHeater(agent,balloon),HeaterOn(balloon),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',28).
% From E: 
% 
% terminates_at(
%    turnOffHeater(Agent,Balloon), 
%    heaterOn(Balloon), 
%    Time).
 %   [Time].
turnOffHeater(Agent, Balloon)terminates heaterOn(Balloon).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',28).

 /*  terminated(happens(turnOffHeater(Agent,Balloon),
   		   Time_From,
   		   Time_Until),
   	   heaterOn(Balloon),
   	   []).
 */
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',30).
%; Delta


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',32).
% Happens(TurnOnHeater(Nathan,Balloon),0).
% From E: 
% 
% happens_at(turnOnHeater(nathan,balloon),0).
observe turnOnHeater(nathan, balloon)at 0.
 %  observe([turnOnHeater(nathan,balloon)],0).
 %  "% =================================".


% Happens(TurnOffHeater(Nathan,Balloon),2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',32).
% From E: 
% 
% happens_at(turnOffHeater(nathan,balloon),2).
observe turnOffHeater(nathan, balloon)at 2.
 %  observe([turnOffHeater(nathan,balloon)],2).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',36).
%; Psi
% [balloon,height1,height2,time]
% (HoldsAt(Height(balloon,height1),time) &
% HoldsAt(Height(balloon,height2),time) ->
% height1=height2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',38).
% From E: 
% 
% '->'(
%    (holds_at(height(Balloon,Height1),Time) , 
%     holds_at(height(Balloon,Height2),Time)), 
%    Height1=Height2).
 %   [Time].
false not equals(Height1, Height2), height(Balloon, Height1), height(Balloon, Height2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',38).

 /*  d_pre([ not(equals(Height1,Height2)),
   	holds(height(Balloon,Height1),Time_At),
   	holds(height(Balloon,Height2),Time_At)
         ]).
 */
 %  "% =================================".


%; Pi
% [balloon,height1,height2,offset,time]
% (HoldsAt(Height(balloon,height1),time) &
% height2 = (height1 + offset) ->
% Trajectory(HeaterOn(balloon),time,Height(balloon,height2),offset)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',45).
% From E: 
% 
% '->'(
%    (holds_at(height(Balloon,Height1),Time) , 
%     Height2=Height1+Offset), 
%    trajectory(
%       heaterOn(Balloon), 
%       Time, Time, 
%                height(Balloon,Height2), 
%                Offset)).
 %   [Time].
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',45).
holds_at(height(Balloon, Height1), Time), Height2=Height1+Offset ->
    trajectory(heaterOn(Balloon),
               Time,
               height(Balloon, Height2),
               Offset).


% [balloon,height1,height2,offset,time]
% (HoldsAt(Height(balloon,height1),time) &
% height2 = (height1 - offset) ->
% AntiTrajectory(HeaterOn(balloon),time,Height(balloon,height2),offset)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',51).
% From E: 
% 
% '->'(
%    (holds_at(height(Balloon,Height1),Time) , 
%     Height2=Height1-Offset), 
%    antiTrajectory(
%       heaterOn(Balloon), 
%       Time, Time, 
%                height(Balloon,Height2), 
%                Offset)).
 %   [Time].
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',51).
holds_at(height(Balloon, Height1), Time), Height2=Height1-Offset ->
    antiTrajectory(heaterOn(Balloon),
                   Time,
                   height(Balloon, Height2),
                   Offset).


%; Gamma


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',57).
% HoldsAt(Height(Balloon,0),0).
% From E: 
% 
% holds_at(height(balloon,0),0).
initially height(balloon, 0).
 %  initial_state([height(balloon,0)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',59).
%; added:


% !HoldsAt(HeaterOn(Balloon),0).
% From E: 
% 
% holds_at(not(heaterOn(balloon)),0).
initially not heaterOn(balloon).
 %  initial_state([not(heaterOn(balloon))]).
 %  "% =================================".


%;noninertial Height
% [balloon,height,time]
% ReleasedAt(Height(balloon,height), time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',63).
% From E: 
% 
% released_at(height(Balloon,Height),Time).
 %   [Time].
released(height(Balloon,Height)).


% [balloon]
% !ReleasedAt(HeaterOn(balloon),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',65).
% From E: 
% 
% not(released_at(heaterOn(Balloon),0)).
not(released_at(heaterOn(Balloon),0)).

% completion Happens
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',67).
% From E: 
% 
% :-call_pel_directive(completion(happens_at)).
:- call_pel_directive(completion(happens_at)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',70).
% range time 0 3
% From E: 
% 
% :-call_pel_directive(range(time,0,3)).
:- call_pel_directive(range(time, 0, 3)).

% range height 0 2
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',70).
% From E: 
% 
% :-call_pel_directive(range(height,0,2)).
:- call_pel_directive(range(height, 0, 2)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',72).
% range offset 1 2
% From E: 
% 
% :-call_pel_directive(range(offset,1,2)).
:- call_pel_directive(range(offset, 1, 2)).
%; End of file.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e',74).
% From E: 
% 
% :-call_pel_directive(translate(ending,'/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e.lps')).
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/HotAirBalloon3-ea.e.lps')).
