:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss40-ea.e',38).
% From E: 
% 
% :-call_pel_directive(translate(unskipped,'/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e.lps')).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e.lps')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss40-ea.e',38).
% From E: 
% 
% :-call_pel_directive(translate(begining,'/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e.lps')).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e.lps')).
% Sat, 10 Oct 2020 15:31:51 GMT File: <stream>(0x559e4af67e00)%; CoinToss4-ea.e

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e',3).
% load foundations/Root.e
% From E: 
% 
% :-call_pel_directive(load('foundations/Root.e')).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e',3).
% From E: 
% 
% :-call_pel_directive(load('foundations/EC.e')).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e',6).
% event Toss()
% From E: 
% 
% event(toss()).
events([toss/0]).

% fluent ItsHeads()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e',6).
% From E: 
% 
% fluent(itsHeads()).
fluents([itsHeads/0]).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e',8).
% fluent Heads()
% From E: 
% 
% fluent(heads()).
fluents([heads/0]).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e',10).
% [time]
 % (HoldsAt(ItsHeads(),time) -> Initiates(Toss(),Heads(),time)).
% From E: 
% 
% '->'(
%    holds_at(itsHeads(),Time), 
%    initiates_at(toss(),heads(),Time)).
 %   [Time].
toss initiates heads if itsHeads.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e',10).

 /*  initiated(happens(toss,Time_From,Time_Until),
   	  heads,
   	  [itsHeads]).
 */
 %  "% =================================".


% [time]
 % (!HoldsAt(ItsHeads(),time) -> Terminates(Toss(),Heads(),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e',14).
% From E: 
% 
% '->'(
%    holds_at(not(itsHeads()),Time), 
%    terminates_at(toss(),heads(),Time)).
 %   [Time].
toss terminates heads if not itsHeads.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e',14).

 /*  terminated(happens(toss,Time_From,Time_Until),
   	   heads,
   	   [not(itsHeads)]).
 */
 %  "% =================================".


%;noninertial ItsHeads
% [time]
% (ReleasedAt(ItsHeads(),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e',18).
% From E: 
% 
% released_at(itsHeads(),Time).
 %   [Time].
released(itsHeads).


% !ReleasedAt(Heads(),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e',20).
% From E: 
% 
% not(released_at(heads(),0)).
not(released_at(heads,0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e',24).
% HoldsAt(Heads(),0).
% From E: 
% 
% holds_at(heads(),0).
initially heads.
 %  initial_state([heads]).
 %  "% =================================".


% Happens(Toss(),1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e',24).
% From E: 
% 
% happens_at(toss(),1).
observe toss at 1.
 %  observe([toss],1).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e',26).
% Happens(Toss(),2).
% From E: 
% 
% happens_at(toss(),2).
observe toss at 2.
 %  observe([toss],2).
 %  "% =================================".


% Happens(Toss(),3).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e',26).
% From E: 
% 
% happens_at(toss(),3).
observe toss at 3.
 %  observe([toss],3).
 %  "% =================================".


%; prune models irrelevant to example:


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e',30).
% HoldsAt(ItsHeads(),0).
% From E: 
% 
% holds_at(itsHeads(),0).
initially itsHeads.
 %  initial_state([itsHeads]).
 %  "% =================================".


% HoldsAt(ItsHeads(),4).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e',30).
% From E: 
% 
% holds_at(itsHeads(),4).
holds_at(itsHeads,4).

% completion Happens
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e',32).
% From E: 
% 
% :-call_pel_directive(completion(happens_at)).
:- call_pel_directive(completion(happens_at)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e',35).
% range time 0 4
% From E: 
% 
% :-call_pel_directive(range(time,0,4)).
:- call_pel_directive(range(time, 0, 4)).

% range offset 1 1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e',35).
% From E: 
% 
% :-call_pel_directive(range(offset,1,1)).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e',38).
% From E: 
% 
% :-call_pel_directive(translate(ending,'/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e.lps')).
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/CoinToss4-ea.e.lps')).
