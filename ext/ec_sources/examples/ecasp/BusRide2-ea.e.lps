:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Cassimatis2002/TwoScreens.e',56).
% From E: 
% 
% :-call_pel_directive(translate(unskipped,'/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e.lps')).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e.lps')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Cassimatis2002/TwoScreens.e',56).
% From E: 
% 
% :-call_pel_directive(translate(begining,'/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e.lps')).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e.lps')).
% Sat, 10 Oct 2020 15:31:50 GMT File: <stream>(0x559e4af4b500)%; BusRide2-ea.e

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',3).
% load foundations/Root.e
% From E: 
% 
% :-call_pel_directive(load('foundations/Root.e')).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',3).
% From E: 
% 
% :-call_pel_directive(load('foundations/EC.e')).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',6).
% fluent HasTicket()
% From E: 
% 
% fluent(hasTicket()).
fluents([hasTicket/0]).

% fluent OnRed()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',6).
% From E: 
% 
% fluent(onRed()).
fluents([onRed/0]).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',8).
% fluent OnYellow()
% From E: 
% 
% fluent(onYellow()).
fluents([onYellow/0]).

% event Buy()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',8).
% From E: 
% 
% event(buy()).
events([buy/0]).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',10).
% event Board()
% From E: 
% 
% event(board()).
events([board/0]).

% event BoardRed()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',10).
% From E: 
% 
% event(boardRed()).
events([boardRed/0]).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',12).
% event BoardYellow()
% From E: 
% 
% event(boardYellow()).
events([boardYellow/0]).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',14).
% [time]
% (Happens(Board(),time) -> 
%  Happens(BoardRed(),time) | Happens(BoardYellow(),time)).
% From E: 
% 
% '->'(
%    happens_at(board(),Time), 
%    (happens_at(boardRed(),Time) ; 
%     happens_at(boardYellow(),Time))).
 %   [Time].
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',14).
board ->
    false((not(boardRed), not(boardYellow))).


% [time]
 % (Initiates(Buy(),HasTicket(),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',19).
% From E: 
% 
% initiates_at(buy(),hasTicket(),Time).
 %   [Time].
buy initiates hasTicket.
 %  initiated(happens(buy,Time_From,Time_Until),hasTicket,[]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',21).
% [time]
% (HoldsAt(HasTicket(),time) -> 
%  Initiates(BoardRed(),OnRed(),time)).
% From E: 
% 
% '->'(
%    holds_at(hasTicket(),Time), 
%    initiates_at(boardRed(),onRed(),Time)).
 %   [Time].
boardRed initiates onRed if hasTicket.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',21).

 /*  initiated(happens(boardRed,Time_From,Time_Until),
   	  onRed,
   	  [holds(hasTicket,Time_From)]).
 */
 %  "% =================================".


% [time]
 % (HoldsAt(HasTicket(),time) -> 
%  Initiates(BoardYellow(),OnYellow(),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',26).
% From E: 
% 
% '->'(
%    holds_at(hasTicket(),Time), 
%    initiates_at(boardYellow(),onYellow(),Time)).
 %   [Time].
boardYellow initiates onYellow if hasTicket.

 /*  initiated(happens(boardYellow,Time_From,Time_Until),
   	  onYellow,
   	  [holds(hasTicket,Time_From)]).
 */
 %  "% =================================".


% [time]
 % (HoldsAt(OnRed(),time) -> 
%  !HoldsAt(OnYellow(),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',30).
% From E: 
% 
% '->'(
%    holds_at(onRed(),Time), 
%    holds_at(not(onYellow()),Time)).
 %   [Time].
not onYellow if onRed.
 %  l_int(holds(not(onYellow),Time_At),[holds(onRed,Time_At)]).
 %  "% =================================".


% [time]
 % (HoldsAt(OnYellow(),time) -> 
%  !HoldsAt(OnRed(),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',34).
% From E: 
% 
% '->'(
%    holds_at(onYellow(),Time), 
%    holds_at(not(onRed()),Time)).
 %   [Time].
not onRed if onYellow.
 %  l_int(holds(not(onRed),Time_At),[holds(onYellow,Time_At)]).
 %  "% =================================".


% [time]
 % (HoldsAt(OnRed(),time) -> 
%  HoldsAt(HasTicket(),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',38).
% From E: 
% 
% '->'(
%    holds_at(onRed(),Time), 
%    holds_at(hasTicket(),Time)).
 %   [Time].
hasTicket if onRed.
 %  l_int(holds(hasTicket,Time_At),[holds(onRed,Time_At)]).
 %  "% =================================".


% [time]
 % (HoldsAt(OnYellow(),time) -> 
%  HoldsAt(HasTicket(),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',42).
% From E: 
% 
% '->'(
%    holds_at(onYellow(),Time), 
%    holds_at(hasTicket(),Time)).
 %   [Time].
hasTicket if onYellow.
 %  l_int(holds(hasTicket,Time_At),[holds(onYellow,Time_At)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',46).
% !ReleasedAt(HasTicket(),0).
% From E: 
% 
% not(released_at(hasTicket(),0)).
not(released_at(hasTicket,0)).


% !ReleasedAt(OnRed(),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',46).
% From E: 
% 
% not(released_at(onRed(),0)).
not(released_at(onRed,0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',48).
% !ReleasedAt(OnYellow(),0).
% From E: 
% 
% not(released_at(onYellow(),0)).
not(released_at(onYellow,0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',50).
% HoldsAt(OnRed(),2).
% From E: 
% 
% holds_at(onRed(),2).
holds_at(onRed,2).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',52).
% !HoldsAt(HasTicket(),0).
% From E: 
% 
% holds_at(not(hasTicket()),0).
initially not hasTicket.
 %  initial_state([not(hasTicket)]).
 %  "% =================================".


% Happens(Buy(),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',52).
% From E: 
% 
% happens_at(buy(),0).
observe buy at 0.
 %  observe([buy],0).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',54).
% Happens(Board(),1).
% From E: 
% 
% happens_at(board(),1).
observe board at 1.
 %  observe([board],1).
 %  "% =================================".


%; ABDUCED Happens(BoardRed(), 1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',57).
% completion Happens
% From E: 
% 
% :-call_pel_directive(completion(happens_at)).
:- call_pel_directive(completion(happens_at)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',59).
% range time 0 2
% From E: 
% 
% :-call_pel_directive(range(time,0,2)).
:- call_pel_directive(range(time, 0, 2)).

% range offset 1 1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',59).
% From E: 
% 
% :-call_pel_directive(range(offset,1,1)).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e',62).
% From E: 
% 
% :-call_pel_directive(translate(ending,'/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e.lps')).
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide2-ea.e.lps')).
