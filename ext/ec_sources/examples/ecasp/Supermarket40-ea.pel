:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Supermarket12-ea.e',68).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Supermarket40-ea.pel')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(ecalc).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Supermarket40-ea.pel')).
%; Supermarket40-ea.e

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Supermarket40-ea.e',3).
% load foundations/Root.e
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Supermarket40-ea.e',6).
% event Push()
event(push()).

% event Pull()
event(pull()).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Supermarket40-ea.e',8).
% fluent Forwards()
fluent(forwards()).

% fluent Backwards()
fluent(backwards()).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Supermarket40-ea.e',10).
% fluent Spinning()
fluent(spinning()).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Supermarket40-ea.e',12).
% [time]
% (!Happens(Pull(), time) ->
% Initiates(Push(), Forwards(), time)).
not(happens_at(pull(), Time)) ->
    initiates_at(push(), forwards(), Time).


% [time]
% (!Happens(Pull(), time) ->
% Terminates(Push(), Backwards(), time)).
not(happens_at(pull(), Time)) ->
    terminates_at(push(), backwards(), Time).


% [time]
% (!Happens(Push(), time) ->
% Initiates(Pull(), Backwards(), time)).
not(happens_at(push(), Time)) ->
    initiates_at(pull(), backwards(), Time).


% [time]
% (!Happens(Push(), time) ->
% Terminates(Pull(), Forwards(), time)).
not(happens_at(push(), Time)) ->
    terminates_at(pull(), forwards(), Time).


% [time]
% (Happens(Push(), time) ->
% Initiates(Pull(), Spinning(), time)).
happens_at(push(), Time) ->
    initiates_at(pull(), spinning(), Time).


% [time]
% (Happens(Push(), time) ->
% Terminates(Pull(), Forwards(), time)).
happens_at(push(), Time) ->
    terminates_at(pull(), forwards(), Time).


% [time]
% (Happens(Push(), time) ->
% Terminates(Pull(), Backwards(), time)).
happens_at(push(), Time) ->
    terminates_at(pull(), backwards(), Time).


% [time]
% (!Happens(Pull(), time) ->
% Terminates(Push(), Spinning(), time)).
not(happens_at(pull(), Time)) ->
    terminates_at(push(), spinning(), Time).


% [time]
% (!Happens(Push(), time) ->
% Terminates(Pull(), Spinning(), time)).
not(happens_at(push(), Time)) ->
    terminates_at(pull(), spinning(), Time).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Supermarket40-ea.e',49).
% !ReleasedAt(Forwards(),0).
not(released_at(forwards(),0)).


% !ReleasedAt(Backwards(),0).
not(released_at(backwards(),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Supermarket40-ea.e',51).
% !ReleasedAt(Spinning(),0).
not(released_at(spinning(),0)).


% !HoldsAt(Forwards(), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Supermarket40-ea.e',53).
holds_at(not(forwards()),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Supermarket40-ea.e',55).
% !HoldsAt(Backwards(), 0).
holds_at(not(backwards()),0).


% !HoldsAt(Spinning(), 0).
holds_at(not(spinning()),0).


% Happens(Push(), 15).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Supermarket40-ea.e',57).
happens_at(push(),15).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Supermarket40-ea.e',59).
% Happens(Pull(), 15).
happens_at(pull(),15).


% Happens(Pull(), 35).
happens_at(pull(),35).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Supermarket40-ea.e',61).
% Happens(Push(), 35).
happens_at(push(),35).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Supermarket40-ea.e',63).
% completion Happens
:- call_pel_directive(completion(happens_at)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Supermarket40-ea.e',65).
% range time 0 40
:- call_pel_directive(range(time, 0, 40)).

% range offset 1 1
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Supermarket40-ea.pel')).
