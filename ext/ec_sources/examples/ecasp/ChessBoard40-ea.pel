:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(pfc).
% Wed, 01 Apr 2020 20:01:03 GMT
% From ../ecasp/ChessBoard40-ea.pel:4
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard2-ea.e',51).

 /*  loading(load_e_pl,
   	'/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e').
 */
%; ChessBoard40-ea.e

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:2
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',3).
% load foundations/Root.e
:- load_e('foundations/Root.e', changed).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:3
% load foundations/EC.e
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',3).
:- load_e('foundations/EC.e', changed).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:5
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',6).
% event Throw()
event(throw).
==> mpred_prop(throw,event).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:6
% fluent ItsBlack()
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',6).
fluent(itsBlack).
==> mpred_prop(itsBlack,fluent).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:7
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',8).
% fluent ItsWhite()
fluent(itsWhite).
==> mpred_prop(itsWhite,fluent).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:8
% fluent OnBlack()
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',8).
fluent(onBlack).
==> mpred_prop(onBlack,fluent).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:9
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',10).
% fluent OnWhite()
fluent(onWhite).
==> mpred_prop(onWhite,fluent).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:11
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',12).
% [time]
% (HoldsAt(ItsWhite(),time) ->
% Initiates(Throw(),OnWhite(),time)).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:13

 /*  [holds_at(itsWhite, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(throw, onWhite, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',12).
axiom(initiates(throw, onWhite, Time),
    [holds_at(itsWhite, Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:15
% [time]
% (HoldsAt(ItsBlack(),time) ->
% Initiates(Throw(),OnBlack(),time)).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:17

 /*  [holds_at(itsBlack, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(throw, onBlack, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',17).
axiom(initiates(throw, onBlack, Time),
    [holds_at(itsBlack, Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:19
% [time]
 % (HoldsAt(ItsWhite(),time) | HoldsAt(ItsBlack(),time)).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',21).

 /*   (   holds_at(itsWhite, Time)
      ;   holds_at(itsBlack, Time)
      ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',21).

 /*  holds_at(itsWhite, Time) :-
       not(holds_at(itsBlack, Time)).
 */

 /*  [holds_at(neg(itsBlack), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(itsWhite, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',21).
axiom(holds_at(itsWhite, Time),
    [holds_at(neg(itsBlack), Time)]).

 /*  holds_at(itsBlack, Time) :-
       not(holds_at(itsWhite, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',21).

 /*  [holds_at(neg(itsWhite), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(itsBlack, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',21).
axiom(holds_at(itsBlack, Time),
    [holds_at(neg(itsWhite), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:23
%;noninertial ItsBlack, ItsWhite
% [time]
% (ReleasedAt(ItsBlack(),time)).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:25

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], releasedAt(itsBlack, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',25).
axiom(releasedAt(itsBlack, Time),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:27
% [time]
% (ReleasedAt(ItsWhite(),time)).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',29).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], releasedAt(itsWhite, Time)).
 */
axiom(releasedAt(itsWhite, Time),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:31
% !ReleasedAt(OnBlack(),0).
 %  not(releasedAt(onBlack,0)).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',31).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], not(releasedAt(onBlack, 0))).
 */
axiom(not(releasedAt(onBlack, 0)),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:32
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',33).
% !ReleasedAt(OnWhite(),0).
 %  not(releasedAt(onWhite,0)).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], not(releasedAt(onWhite, 0))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',33).
axiom(not(releasedAt(onWhite, 0)),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:35
% !HoldsAt(OnWhite(),0).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',35).

 /*  [] ->
       ta(Ta_Param, tvs1=[start], tvs2=[start], holds_at(neg(onWhite), start)).
 */
axiom(holds_at(neg(onWhite), start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:36
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',37).
% !HoldsAt(OnBlack(),0).

 /*  [] ->
       ta(Ta_Param, tvs1=[start], tvs2=[start], holds_at(neg(onBlack), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',37).
axiom(holds_at(neg(onBlack), start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:37
% Happens(Throw(),35).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',37).

 /*  [b(start, Startd35), toffset(start, 35, Startd35), ignore(start+35==Startd35)] ->
       ta(Ta_Param,
          tvs1=[start+35],
          tvs2=[Startd35, start],
          happens(throw, Startd35)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',37).
axiom(happens(throw, Startd35),
    [b(start, Startd35), toffset(start, 35, Startd35)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:39
%; prune models irrelevant to example:


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:40
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',41).
% HoldsAt(ItsWhite(),0).

 /*  [] ->
       ta(Ta_Param, tvs1=[start], tvs2=[start], holds_at(itsWhite, start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',41).
axiom(holds_at(itsWhite, start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:41
% HoldsAt(ItsBlack(),0).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',41).

 /*  [] ->
       ta(Ta_Param, tvs1=[start], tvs2=[start], holds_at(itsBlack, start)).
 */
axiom(holds_at(itsBlack, start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:42
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',43).
% HoldsAt(ItsWhite(),40).

 /*  [b(start, Startd40), toffset(start, 40, Startd40), ignore(start+40==Startd40)] ->
       ta(Ta_Param,
          tvs1=[start+40],
          tvs2=[Startd40, start],
          holds_at(itsWhite, Startd40)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',43).
axiom(holds_at(itsWhite, Startd40),
    [b(start, Startd40), toffset(start, 40, Startd40)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:43
% HoldsAt(ItsBlack(),40).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',43).

 /*  [b(start, Startd40), toffset(start, 40, Startd40), ignore(start+40==Startd40)] ->
       ta(Ta_Param,
          tvs1=[start+40],
          tvs2=[Startd40, start],
          holds_at(itsBlack, Startd40)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',43).
axiom(holds_at(itsBlack, Startd40),
    [b(start, Startd40), toffset(start, 40, Startd40)]).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:45
% completion Happens
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',45).
==> completion(happens).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:47
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',48).
% range time 0 40
==> range(time,0,40).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e:48
% range offset 1 1
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/ecasp/ChessBoard40-ea.e',48).
==> range(offset,1,1).
%; End of file.
