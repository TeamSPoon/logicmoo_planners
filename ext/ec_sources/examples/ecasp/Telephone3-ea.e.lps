:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Supermarket40-ea.e',68).
% From E: 
% 
% :-call_pel_directive(translate(unskipped,'/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e.lps')).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e.lps')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Supermarket40-ea.e',68).
% From E: 
% 
% :-call_pel_directive(translate(begining,'/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e.lps')).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e.lps')).
% Sat, 10 Oct 2020 14:56:38 GMT File: <stream>(0x5597f292d800)%; Telephone3-ea.e

% load foundations/Root.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',2).
% From E: 
% 
% :-call_pel_directive(load('foundations/Root.e')).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',2).
% From E: 
% 
% :-call_pel_directive(load('foundations/EC.e')).
:- call_pel_directive(load('foundations/EC.e')).

% sort agent
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',5).
% From E: 
% 
% sort(agent).
sort(agent).

% sort phone
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',5).
% From E: 
% 
% sort(phone).
sort(phone).

% agent Agent1, Agent2
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',8).
% From E: 
% 
% t(agent,agent1).
agent(agent1).
% From E: 
% 
% t(agent,agent2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',8).
agent(agent2).

% phone Phone1, Phone2
% From E: 
% 
% t(phone,phone1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',8).
phone(phone1).
% From E: 
% 
% t(phone,phone2).
phone(phone2).

% fluent Ringing(phone,phone)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',11).
% From E: 
% 
% fluent(ringing(phone,phone)).
mpred_prop(ringing(phone,phone),fluent).
fluents([ringing/2]).

% fluent DialTone(phone)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',11).
% From E: 
% 
% fluent(dialTone(phone)).
mpred_prop(dialTone(phone),fluent).
fluents([dialTone/1]).

% fluent BusySignal(phone)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',13).
% From E: 
% 
% fluent(busySignal(phone)).
mpred_prop(busySignal(phone),fluent).
fluents([busySignal/1]).

% fluent Idle(phone)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',13).
% From E: 
% 
% fluent(idle(phone)).
mpred_prop(idle(phone),fluent).
fluents([idle/1]).

% fluent Connected(phone,phone)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',15).
% From E: 
% 
% fluent(connected(phone,phone)).
mpred_prop(connected(phone,phone),fluent).
fluents([connected/2]).

% fluent Disconnected(phone)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',15).
% From E: 
% 
% fluent(disconnected(phone)).
mpred_prop(disconnected(phone),fluent).
fluents([disconnected/1]).

% event PickUp(agent,phone)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',18).
% From E: 
% 
% event(pickUp(agent,phone)).
events([pickUp/2]).
mpred_prop(pickUp(agent,phone),action).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',18).
actions([pickUp/2]).

% event SetDown(agent,phone)
% From E: 
% 
% event(setDown(agent,phone)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',18).
events([setDown/2]).
mpred_prop(setDown(agent,phone),action).
actions([setDown/2]).

% event Dial(agent,phone,phone)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',20).
% From E: 
% 
% event(dial(agent,phone,phone)).
events([dial/3]).
mpred_prop(dial(agent,phone,phone),action).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',20).
actions([dial/3]).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',22).
%; Sigma
% [agent,phone,time]
% (HoldsAt(Idle(phone),time) ->
% Initiates(PickUp(agent,phone),DialTone(phone),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',24).
% From E: 
% 
% '->'(
%    holds_at(idle(Phone),Time), 
%    initiates_at(
%       pickUp(Agent,Phone), 
%       dialTone(Phone), 
%       Time)).
 %   [Time].
pickUp(Agent, Phone)initiates dialTone(Phone)if idle(Phone).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',24).

 /*  initiated(happens(pickUp(Agent,Phone),
   		  Time_From,
   		  Time_Until),
   	  dialTone(Phone),
   	  [holds(idle(Phone),Time_From)]).
 */
 %  "% =================================".


% [agent,phone,time]
% (HoldsAt(Idle(phone),time) ->
% Terminates(PickUp(agent,phone),Idle(phone),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',29).
% From E: 
% 
% '->'(
%    holds_at(idle(Phone),Time), 
%    terminates_at(
%       pickUp(Agent,Phone), 
%       idle(Phone), 
%       Time)).
 %   [Time].
pickUp(Agent, Phone)terminates idle(Phone)if idle(Phone).

 /*  terminated(happens(pickUp(Agent,Phone),
   		   Time_From,
   		   Time_Until),
   	   idle(Phone),
   	   [holds(idle(Phone),Time_From)]).
 */
 %  "% =================================".


% [agent,phone,time]
% (HoldsAt(DialTone(phone),time) ->
% Initiates(SetDown(agent,phone),Idle(phone),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',33).
% From E: 
% 
% '->'(
%    holds_at(dialTone(Phone),Time), 
%    initiates_at(
%       setDown(Agent,Phone), 
%       idle(Phone), 
%       Time)).
 %   [Time].
setDown(Agent, Phone)initiates idle(Phone)if dialTone(Phone).

 /*  initiated(happens(setDown(Agent,Phone),
   		  Time_From,
   		  Time_Until),
   	  idle(Phone),
   	  [holds(dialTone(Phone),Time_From)]).
 */
 %  "% =================================".


% [agent,phone,time]
% (HoldsAt(DialTone(phone),time) ->
% Terminates(SetDown(agent,phone),DialTone(phone),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',37).
% From E: 
% 
% '->'(
%    holds_at(dialTone(Phone),Time), 
%    terminates_at(
%       setDown(Agent,Phone), 
%       dialTone(Phone), 
%       Time)).
 %   [Time].
setDown(Agent, Phone)terminates dialTone(Phone)if dialTone(Phone).

 /*  terminated(happens(setDown(Agent,Phone),
   		   Time_From,
   		   Time_Until),
   	   dialTone(Phone),
   	   [holds(dialTone(Phone),Time_From)]).
 */
 %  "% =================================".


% [agent,phone1,phone2,time]
% (HoldsAt(DialTone(phone1),time) &
% HoldsAt(Idle(phone2),time) ->
% Initiates(Dial(agent,phone1,phone2),Ringing(phone1,phone2),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',41).
% From E: 
% 
% '->'(
%    (holds_at(dialTone(Phone1),Time) , 
%     holds_at(idle(Phone2),Time)), 
%    initiates_at(
%       dial(Agent,Phone1,Phone2), 
%       ringing(Phone1,Phone2), 
%       Time)).
 %   [Time].
dial(Agent, Phone1, Phone2)initiates ringing(Phone1, Phone2)if dialTone(Phone1), idle(Phone2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',41).

 /*  initiated(happens(dial(Agent,Phone1,Phone2),
   		  Time_From,
   		  Time_Until),
   	  ringing(Phone1,Phone2),
   	  [ holds(dialTone(Phone1),Time_From),
   	    holds(idle(Phone2),Time_From)
   	  ]).
 */
 %  "% =================================".


% [agent,phone1,phone2,time]
% (HoldsAt(DialTone(phone1),time) &
% HoldsAt(Idle(phone2),time) ->
% Terminates(Dial(agent,phone1,phone2),DialTone(phone1),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',46).
% From E: 
% 
% '->'(
%    (holds_at(dialTone(Phone1),Time) , 
%     holds_at(idle(Phone2),Time)), 
%    terminates_at(
%       dial(Agent,Phone1,Phone2), 
%       dialTone(Phone1), 
%       Time)).
 %   [Time].
dial(Agent, Phone1, Phone2)terminates dialTone(Phone1)if dialTone(Phone1), idle(Phone2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',46).

 /*  terminated(happens(dial(Agent,Phone1,Phone2),
   		   Time_From,
   		   Time_Until),
   	   dialTone(Phone1),
   	   [ holds(dialTone(Phone1),Time_From),
   	     holds(idle(Phone2),Time_From)
   	   ]).
 */
 %  "% =================================".


% [agent,phone1,phone2,time]
% (HoldsAt(DialTone(phone1),time) &
% HoldsAt(Idle(phone2),time) ->
% Terminates(Dial(agent,phone1,phone2),Idle(phone2),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',51).
% From E: 
% 
% '->'(
%    (holds_at(dialTone(Phone1),Time) , 
%     holds_at(idle(Phone2),Time)), 
%    terminates_at(
%       dial(Agent,Phone1,Phone2), 
%       idle(Phone2), 
%       Time)).
 %   [Time].
dial(Agent, Phone1, Phone2)terminates idle(Phone2)if dialTone(Phone1), idle(Phone2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',51).

 /*  terminated(happens(dial(Agent,Phone1,Phone2),
   		   Time_From,
   		   Time_Until),
   	   idle(Phone2),
   	   [ holds(dialTone(Phone1),Time_From),
   	     holds(idle(Phone2),Time_From)
   	   ]).
 */
 %  "% =================================".


% [agent,phone1,phone2,time]
% (HoldsAt(DialTone(phone1),time) &
% !HoldsAt(Idle(phone2),time) ->
% Initiates(Dial(agent,phone1,phone2),BusySignal(phone1),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',56).
% From E: 
% 
% '->'(
%    (holds_at(dialTone(Phone1),Time) , 
%     holds_at(not(idle(Phone2)),Time)), 
%    initiates_at(
%       dial(Agent,Phone1,Phone2), 
%       busySignal(Phone1), 
%       Time)).
 %   [Time].
dial(Agent, Phone1, Phone2)initiates busySignal(Phone1)if dialTone(Phone1), not idle(Phone2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',56).

 /*  initiated(happens(dial(Agent,Phone1,Phone2),
   		  Time_From,
   		  Time_Until),
   	  busySignal(Phone1),
   	  [ holds(dialTone(Phone1),Time_From),
   	    holds(not(idle(Phone2)),Time_From)
   	  ]).
 */
 %  "% =================================".


% [agent,phone1,phone2,time]
% (HoldsAt(DialTone(phone1),time) &
% !HoldsAt(Idle(phone2),time) ->
% Terminates(Dial(agent,phone1,phone2),DialTone(phone1),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',61).
% From E: 
% 
% '->'(
%    (holds_at(dialTone(Phone1),Time) , 
%     holds_at(not(idle(Phone2)),Time)), 
%    terminates_at(
%       dial(Agent,Phone1,Phone2), 
%       dialTone(Phone1), 
%       Time)).
 %   [Time].
dial(Agent, Phone1, Phone2)terminates dialTone(Phone1)if dialTone(Phone1), not idle(Phone2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',61).

 /*  terminated(happens(dial(Agent,Phone1,Phone2),
   		   Time_From,
   		   Time_Until),
   	   dialTone(Phone1),
   	   [ holds(dialTone(Phone1),Time_From),
   	     holds(not(idle(Phone2)),Time_From)
   	   ]).
 */
 %  "% =================================".


% [agent,phone,time]
% (HoldsAt(BusySignal(phone),time) ->
% Initiates(SetDown(agent,phone),Idle(phone),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',66).
% From E: 
% 
% '->'(
%    holds_at(busySignal(Phone),Time), 
%    initiates_at(
%       setDown(Agent,Phone), 
%       idle(Phone), 
%       Time)).
 %   [Time].
setDown(Agent, Phone)initiates idle(Phone)if busySignal(Phone).

 /*  initiated(happens(setDown(Agent,Phone),
   		  Time_From,
   		  Time_Until),
   	  idle(Phone),
   	  [holds(busySignal(Phone),Time_From)]).
 */
 %  "% =================================".


% [agent,phone,time]
% (HoldsAt(BusySignal(phone),time) ->
% Terminates(SetDown(agent,phone),BusySignal(phone),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',70).
% From E: 
% 
% '->'(
%    holds_at(busySignal(Phone),Time), 
%    terminates_at(
%       setDown(Agent,Phone), 
%       busySignal(Phone), 
%       Time)).
 %   [Time].
setDown(Agent, Phone)terminates busySignal(Phone)if busySignal(Phone).

 /*  terminated(happens(setDown(Agent,Phone),
   		   Time_From,
   		   Time_Until),
   	   busySignal(Phone),
   	   [holds(busySignal(Phone),Time_From)]).
 */
 %  "% =================================".


% [agent,phone1,phone2,time]
% (HoldsAt(Ringing(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone1),Idle(phone1),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',74).
% From E: 
% 
% '->'(
%    holds_at(ringing(Phone1,Phone2),Time), 
%    initiates_at(
%       setDown(Agent,Phone1), 
%       idle(Phone1), 
%       Time)).
 %   [Time].
setDown(Agent, Phone1)initiates idle(Phone1)if ringing(Phone1, Phone2).

 /*  initiated(happens(setDown(Agent,Phone1),
   		  Time_From,
   		  Time_Until),
   	  idle(Phone1),
   	  [holds(ringing(Phone1,Phone2),Time_From)]).
 */
 %  "% =================================".


% [agent,phone1,phone2,time]
% (HoldsAt(Ringing(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone1),Idle(phone2),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',78).
% From E: 
% 
% '->'(
%    holds_at(ringing(Phone1,Phone2),Time), 
%    initiates_at(
%       setDown(Agent,Phone1), 
%       idle(Phone2), 
%       Time)).
 %   [Time].
setDown(Agent, Phone1)initiates idle(Phone2)if ringing(Phone1, Phone2).

 /*  initiated(happens(setDown(Agent,Phone1),
   		  Time_From,
   		  Time_Until),
   	  idle(Phone2),
   	  [holds(ringing(Phone1,Phone2),Time_From)]).
 */
 %  "% =================================".


% [agent,phone1,phone2,time]
% (HoldsAt(Ringing(phone1,phone2),time) ->
% Terminates(SetDown(agent,phone1),Ringing(phone1,phone2),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',82).
% From E: 
% 
% '->'(
%    holds_at(ringing(Phone1,Phone2),Time), 
%    terminates_at(
%       setDown(Agent,Phone1), 
%       ringing(Phone1,Phone2), 
%       Time)).
 %   [Time].
setDown(Agent, Phone1)terminates ringing(Phone1, Phone2)if ringing(Phone1, Phone2).

 /*  terminated(happens(setDown(Agent,Phone1),
   		   Time_From,
   		   Time_Until),
   	   ringing(Phone1,Phone2),
   	   [holds(ringing(Phone1,Phone2),Time_From)]).
 */
 %  "% =================================".


% [agent,phone1,phone2,time]
% (HoldsAt(Ringing(phone1,phone2),time) ->
% Initiates(PickUp(agent,phone2),Connected(phone1,phone2),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',86).
% From E: 
% 
% '->'(
%    holds_at(ringing(Phone1,Phone2),Time), 
%    initiates_at(
%       pickUp(Agent,Phone2), 
%       connected(Phone1,Phone2), 
%       Time)).
 %   [Time].
pickUp(Agent, Phone2)initiates connected(Phone1, Phone2)if ringing(Phone1, Phone2).

 /*  initiated(happens(pickUp(Agent,Phone2),
   		  Time_From,
   		  Time_Until),
   	  connected(Phone1,Phone2),
   	  [holds(ringing(Phone1,Phone2),Time_From)]).
 */
 %  "% =================================".


% [agent,phone1,phone2,time]
% (HoldsAt(Ringing(phone1,phone2),time) ->
% Terminates(PickUp(agent,phone2),Ringing(phone1,phone2),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',90).
% From E: 
% 
% '->'(
%    holds_at(ringing(Phone1,Phone2),Time), 
%    terminates_at(
%       pickUp(Agent,Phone2), 
%       ringing(Phone1,Phone2), 
%       Time)).
 %   [Time].
pickUp(Agent, Phone2)terminates ringing(Phone1, Phone2)if ringing(Phone1, Phone2).

 /*  terminated(happens(pickUp(Agent,Phone2),
   		   Time_From,
   		   Time_Until),
   	   ringing(Phone1,Phone2),
   	   [holds(ringing(Phone1,Phone2),Time_From)]).
 */
 %  "% =================================".


% [agent,phone1,phone2,time]
% (HoldsAt(Connected(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone1),Idle(phone1),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',94).
% From E: 
% 
% '->'(
%    holds_at(connected(Phone1,Phone2),Time), 
%    initiates_at(
%       setDown(Agent,Phone1), 
%       idle(Phone1), 
%       Time)).
 %   [Time].
setDown(Agent, Phone1)initiates idle(Phone1)if connected(Phone1, Phone2).

 /*  initiated(happens(setDown(Agent,Phone1),
   		  Time_From,
   		  Time_Until),
   	  idle(Phone1),
   	  [holds(connected(Phone1,Phone2),Time_From)]).
 */
 %  "% =================================".


% [agent,phone1,phone2,time]
% (HoldsAt(Connected(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone1),Disconnected(phone2),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',98).
% From E: 
% 
% '->'(
%    holds_at(connected(Phone1,Phone2),Time), 
%    initiates_at(
%       setDown(Agent,Phone1), 
%       disconnected(Phone2), 
%       Time)).
 %   [Time].
setDown(Agent, Phone1)initiates disconnected(Phone2)if connected(Phone1, Phone2).

 /*  initiated(happens(setDown(Agent,Phone1),
   		  Time_From,
   		  Time_Until),
   	  disconnected(Phone2),
   	  [holds(connected(Phone1,Phone2),Time_From)]).
 */
 %  "% =================================".


% [agent,phone1,phone2,time]
% (HoldsAt(Connected(phone1,phone2),time) ->
% Terminates(SetDown(agent,phone1),Connected(phone1,phone2),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',102).
% From E: 
% 
% '->'(
%    holds_at(connected(Phone1,Phone2),Time), 
%    terminates_at(
%       setDown(Agent,Phone1), 
%       connected(Phone1,Phone2), 
%       Time)).
 %   [Time].
setDown(Agent, Phone1)terminates connected(Phone1, Phone2)if connected(Phone1, Phone2).

 /*  terminated(happens(setDown(Agent,Phone1),
   		   Time_From,
   		   Time_Until),
   	   connected(Phone1,Phone2),
   	   [ holds(connected(Phone1,Phone2),
   		   Time_From)
   	   ]).
 */
 %  "% =================================".


% [agent,phone1,phone2,time]
% (HoldsAt(Connected(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone2),Idle(phone2),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',106).
% From E: 
% 
% '->'(
%    holds_at(connected(Phone1,Phone2),Time), 
%    initiates_at(
%       setDown(Agent,Phone2), 
%       idle(Phone2), 
%       Time)).
 %   [Time].
setDown(Agent, Phone2)initiates idle(Phone2)if connected(Phone1, Phone2).

 /*  initiated(happens(setDown(Agent,Phone2),
   		  Time_From,
   		  Time_Until),
   	  idle(Phone2),
   	  [holds(connected(Phone1,Phone2),Time_From)]).
 */
 %  "% =================================".


% [agent,phone1,phone2,time]
% (HoldsAt(Connected(phone1,phone2),time) ->
% Initiates(SetDown(agent,phone2),Disconnected(phone1),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',110).
% From E: 
% 
% '->'(
%    holds_at(connected(Phone1,Phone2),Time), 
%    initiates_at(
%       setDown(Agent,Phone2), 
%       disconnected(Phone1), 
%       Time)).
 %   [Time].
setDown(Agent, Phone2)initiates disconnected(Phone1)if connected(Phone1, Phone2).

 /*  initiated(happens(setDown(Agent,Phone2),
   		  Time_From,
   		  Time_Until),
   	  disconnected(Phone1),
   	  [holds(connected(Phone1,Phone2),Time_From)]).
 */
 %  "% =================================".


% [agent,phone1,phone2,time]
% (HoldsAt(Connected(phone1,phone2),time) ->
% Terminates(SetDown(agent,phone2),Connected(phone1,phone2),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',114).
% From E: 
% 
% '->'(
%    holds_at(connected(Phone1,Phone2),Time), 
%    terminates_at(
%       setDown(Agent,Phone2), 
%       connected(Phone1,Phone2), 
%       Time)).
 %   [Time].
setDown(Agent, Phone2)terminates connected(Phone1, Phone2)if connected(Phone1, Phone2).

 /*  terminated(happens(setDown(Agent,Phone2),
   		   Time_From,
   		   Time_Until),
   	   connected(Phone1,Phone2),
   	   [ holds(connected(Phone1,Phone2),
   		   Time_From)
   	   ]).
 */
 %  "% =================================".


% [agent,phone,time]
% (HoldsAt(Disconnected(phone),time) ->
% Initiates(SetDown(agent,phone),Idle(phone),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',118).
% From E: 
% 
% '->'(
%    holds_at(disconnected(Phone),Time), 
%    initiates_at(
%       setDown(Agent,Phone), 
%       idle(Phone), 
%       Time)).
 %   [Time].
setDown(Agent, Phone)initiates idle(Phone)if disconnected(Phone).

 /*  initiated(happens(setDown(Agent,Phone),
   		  Time_From,
   		  Time_Until),
   	  idle(Phone),
   	  [holds(disconnected(Phone),Time_From)]).
 */
 %  "% =================================".


% [agent,phone,time]
% (HoldsAt(Disconnected(phone),time) ->
% Terminates(SetDown(agent,phone),Disconnected(phone),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',122).
% From E: 
% 
% '->'(
%    holds_at(disconnected(Phone),Time), 
%    terminates_at(
%       setDown(Agent,Phone), 
%       disconnected(Phone), 
%       Time)).
 %   [Time].
setDown(Agent, Phone)terminates disconnected(Phone)if disconnected(Phone).

 /*  terminated(happens(setDown(Agent,Phone),
   		   Time_From,
   		   Time_Until),
   	   disconnected(Phone),
   	   [holds(disconnected(Phone),Time_From)]).
 */
 %  "% =================================".


%; Delta


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',127).
% Happens(PickUp(Agent1,Phone1),0).
% From E: 
% 
% happens_at(pickUp(agent1,phone1),0).
observe pickUp(agent1, phone1)at 0.
 %  observe([pickUp(agent1,phone1)],0).
 %  "% =================================".


% Happens(Dial(Agent1,Phone1,Phone2),1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',127).
% From E: 
% 
% happens_at(dial(agent1,phone1,phone2),1).
observe dial(agent1, phone1, phone2)at 1.
 %  observe([dial(agent1,phone1,phone2)],1).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',129).
% Happens(PickUp(Agent2,Phone2),2).
% From E: 
% 
% happens_at(pickUp(agent2,phone2),2).
observe pickUp(agent2, phone2)at 2.
 %  observe([pickUp(agent2,phone2)],2).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',131).
%; Gamma
% [phone]
 % HoldsAt(Idle(phone),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',133).
% From E: 
% 
% holds_at(idle(Phone),0).
initially idle(Phone).
 %  initial_state([idle(Phone)]).
 %  "% =================================".


% [phone]
 % !HoldsAt(DialTone(phone),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',133).
% From E: 
% 
% holds_at(not(dialTone(Phone)),0).
initially not dialTone(Phone).
 %  initial_state([not(dialTone(Phone))]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',135).
% [phone]
 % !HoldsAt(BusySignal(phone),0).
% From E: 
% 
% holds_at(not(busySignal(Phone)),0).
initially not busySignal(Phone).
 %  initial_state([not(busySignal(Phone))]).
 %  "% =================================".


% [phone1,phone2]
 % !HoldsAt(Ringing(phone1,phone2),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',135).
% From E: 
% 
% holds_at(not(ringing(Phone1,Phone2)),0).
initially not ringing(Phone1, Phone2).
 %  initial_state([not(ringing(Phone1,Phone2))]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',137).
% [phone1,phone2]
 % !HoldsAt(Connected(phone1,phone2),0).
% From E: 
% 
% holds_at(not(connected(Phone1,Phone2)),0).
initially not connected(Phone1, Phone2).
 %  initial_state([not(connected(Phone1,Phone2))]).
 %  "% =================================".


% [phone]
 % !HoldsAt(Disconnected(phone),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',137).
% From E: 
% 
% holds_at(not(disconnected(Phone)),0).
initially not disconnected(Phone).
 %  initial_state([not(disconnected(Phone))]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',141).
% [phone1, phone2]
% !ReleasedAt(Ringing(phone1, phone2),0).
% From E: 
% 
% not(released_at(ringing(Phone1,Phone2),0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',141).
not(released_at(ringing(Phone1,Phone2),0)).


% [phone]
% !ReleasedAt(DialTone(phone),0).
% From E: 
% 
% not(released_at(dialTone(Phone),0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',141).
not(released_at(dialTone(Phone),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',143).
% [phone]
% !ReleasedAt(BusySignal(phone),0).
% From E: 
% 
% not(released_at(busySignal(Phone),0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',143).
not(released_at(busySignal(Phone),0)).


% [phone]
% !ReleasedAt(Idle(phone),0).
% From E: 
% 
% not(released_at(idle(Phone),0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',143).
not(released_at(idle(Phone),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',145).
% [phone1, phone2]
% !ReleasedAt(Connected(phone1,phone2),0).
% From E: 
% 
% not(released_at(connected(Phone1,Phone2),0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',145).
not(released_at(connected(Phone1,Phone2),0)).


% [phone]
% !ReleasedAt(Disconnected(phone),0).
% From E: 
% 
% not(released_at(disconnected(Phone),0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',145).
not(released_at(disconnected(Phone),0)).

% completion Happens
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',147).
% From E: 
% 
% :-call_pel_directive(completion(happens_at)).
:- call_pel_directive(completion(happens_at)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',150).
% range time 0 3
% From E: 
% 
% :-call_pel_directive(range(time,0,3)).
:- call_pel_directive(range(time, 0, 3)).

% range offset 1 1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',150).
% From E: 
% 
% :-call_pel_directive(range(offset,1,1)).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e',153).
% From E: 
% 
% :-call_pel_directive(translate(ending,'/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e.lps')).
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/Telephone3-ea.e.lps')).
