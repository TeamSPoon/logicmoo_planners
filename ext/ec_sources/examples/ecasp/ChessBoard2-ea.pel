:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/BusRide40-ea.e',62).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/ChessBoard2-ea.pel')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(ecalc).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/ChessBoard2-ea.pel')).
%; ChessBoard2-ea.e

% load foundations/Root.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/ChessBoard2-ea.e',3).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:- call_pel_directive(load('foundations/EC.e')).

% event Throw()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/ChessBoard2-ea.e',6).
event(throw()).

% fluent ItsBlack()
fluent(itsBlack()).

% fluent ItsWhite()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/ChessBoard2-ea.e',8).
fluent(itsWhite()).

% fluent OnBlack()
fluent(onBlack()).

% fluent OnWhite()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/ChessBoard2-ea.e',10).
fluent(onWhite()).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/ChessBoard2-ea.e',12).
% [time]
% (HoldsAt(ItsWhite(),time) ->
% Initiates(Throw(),OnWhite(),time)).
holds_at(itsWhite(), Time) ->
    initiates_at(throw(), onWhite(), Time).


% [time]
% (HoldsAt(ItsBlack(),time) ->
% Initiates(Throw(),OnBlack(),time)).
holds_at(itsBlack(), Time) ->
    initiates_at(throw(), onBlack(), Time).


% [time]
 % (HoldsAt(ItsWhite(),time) | HoldsAt(ItsBlack(),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/ChessBoard2-ea.e',21).
 (   holds_at(itsWhite(), Time)
   ;   holds_at(itsBlack(), Time)
   ).


%;noninertial ItsBlack, ItsWhite
% [time]
% (ReleasedAt(ItsBlack(),time)).
released_at(itsBlack(),Time).


% [time]
% (ReleasedAt(ItsWhite(),time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/ChessBoard2-ea.e',29).
released_at(itsWhite(),Time).


% !ReleasedAt(OnBlack(),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/ChessBoard2-ea.e',31).
not(released_at(onBlack(),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/ChessBoard2-ea.e',33).
% !ReleasedAt(OnWhite(),0).
not(released_at(onWhite(),0)).


% !HoldsAt(OnWhite(),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/ChessBoard2-ea.e',35).
holds_at(not(onWhite()),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/ChessBoard2-ea.e',37).
% !HoldsAt(OnBlack(),0).
holds_at(not(onBlack()),0).


% Happens(Throw(),1).
happens_at(throw(),1).


%; prune models irrelevant to example:


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/ChessBoard2-ea.e',41).
% HoldsAt(ItsWhite(),0).
holds_at(itsWhite(),0).


% HoldsAt(ItsBlack(),0).
holds_at(itsBlack(),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/ChessBoard2-ea.e',43).
% HoldsAt(ItsWhite(),2).
holds_at(itsWhite(),2).


% HoldsAt(ItsBlack(),2).
holds_at(itsBlack(),2).

% completion Happens
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/ChessBoard2-ea.e',45).
:- call_pel_directive(completion(happens_at)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/ChessBoard2-ea.e',48).
% range time 0 2
:- call_pel_directive(range(time, 0, 2)).

% range offset 1 1
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ecasp/ChessBoard2-ea.pel')).
