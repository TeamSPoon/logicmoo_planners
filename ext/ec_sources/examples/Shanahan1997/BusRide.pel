:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(pfc).
% Wed, 01 Apr 2020 20:00:38 GMT
% From ../examples/Shanahan1997/BusRide.pel:4
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',71).

 /*  loading(load_e_pl,
   	'/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e').
 */
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Kartha:1994,
%;   author = "G. Neelakantan Kartha",
%;   year = "1994",
%;   title = "Two counterexamples related to \uppercase{B}aker's approach to the frame problem",
%;   journal = "Artificial Intelligence",
%;   volume = "69",
%;   number = "1--2",
%;   pages = "379--391",
%; }
%;
%; \fullciteA[pp. 359--361]{Shanahan:1997}
%;
%; @book{Shanahan:1997,
%;   author = "Murray Shanahan",
%;   year = "1997",
%;   title = "Solving the Frame Problem",
%;   address = "Cambridge, MA",
%;   publisher = "MIT Press",
%; }
%;
%; modifications from Shanahan's formulation:
%; InitiallyN -> !HoldsAt
%; timestamps
%;

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e:35
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',36).
% load foundations/Root.e
:- load_e('foundations/Root.e', changed).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e:36
% load foundations/EC.e
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',36).
:- load_e('foundations/EC.e', changed).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e:38
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',39).
% fluent HasTicket()
fluent(hasTicket).
==> mpred_prop(hasTicket,fluent).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e:39
% fluent OnRed()
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',39).
fluent(onRed).
==> mpred_prop(onRed,fluent).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e:40
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',41).
% fluent OnYellow()
fluent(onYellow).
==> mpred_prop(onYellow,fluent).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e:41
% event Buy()
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',41).
event(buy).
==> mpred_prop(buy,event).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e:42
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',43).
% event Board()
event(board).
==> mpred_prop(board,event).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e:43
% event BoardRed()
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',43).
event(boardRed).
==> mpred_prop(boardRed,event).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e:44
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',45).
% event BoardYellow()
event(boardYellow).
==> mpred_prop(boardYellow,event).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e:46
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',47).
% [time]
 % Happens(Board(),time) -> Happens(BoardRed(),time) | Happens(BoardYellow(),time).

 /*  happens(board, Time) ->
       (   happens(boardRed, Time)
       ;   happens(boardYellow, Time)
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',47).

 /*  happens(boardRed, Time) :-
       not(happens(boardYellow, Time)),
       happens(board, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',47).

 /*  [not(happens(boardYellow, Time)), happens(board, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          happens(boardRed, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',47).
axiom(happens(boardRed, Time),
    [not(happens(boardYellow, Time)), happens(board, Time)]).

 /*  happens(boardYellow, Time) :-
       not(happens(boardRed, Time)),
       happens(board, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',47).

 /*  [not(happens(boardRed, Time)), happens(board, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          happens(boardYellow, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',47).
axiom(happens(boardYellow, Time),
    [not(happens(boardRed, Time)), happens(board, Time)]).

 /*  not(happens(board, Time)) :-
       not(happens(boardRed, Time)),
       not(happens(boardYellow, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',47).

 /*  [not(happens(boardRed, Time)), not(happens(boardYellow, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(board, Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',47).
axiom(not(happens(board, Time)),
    [not(happens(boardRed, Time)), not(happens(boardYellow, Time))]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e:48
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',49).
% [time]
 % Initiates(Buy(),HasTicket(),time).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(buy, hasTicket, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',49).
axiom(initiates(buy, hasTicket, Time),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e:49
% [time]
 % HoldsAt(HasTicket(),time) -> Initiates(BoardRed(),OnRed(),time).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',49).

 /*  [holds_at(hasTicket, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(boardRed, onRed, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',49).
axiom(initiates(boardRed, onRed, Time),
    [holds_at(hasTicket, Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e:50
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',51).
% [time]
 % HoldsAt(HasTicket(),time) -> Initiates(BoardYellow(),OnYellow(),time).

 /*  [holds_at(hasTicket, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(boardYellow, onYellow, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',51).
axiom(initiates(boardYellow, onYellow, Time),
    [holds_at(hasTicket, Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e:52
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',53).
% [time]
 % !(HoldsAt(OnRed(),time) & HoldsAt(OnYellow(),time)).

 /*   not(( holds_at(onRed, Time),
            holds_at(onYellow, Time)
          )).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',53).

 /*  not(holds_at(onRed, Time)) :-
       holds_at(onYellow, Time).
 */

 /*  [holds_at(onYellow, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(onRed), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',53).
axiom(holds_at(neg(onRed), Time),
    [holds_at(onYellow, Time)]).

 /*  not(holds_at(onYellow, Time)) :-
       holds_at(onRed, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',53).

 /*  [holds_at(onRed, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(onYellow), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',53).
axiom(holds_at(neg(onYellow), Time),
    [holds_at(onRed, Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e:53
% [time]
 % HoldsAt(OnRed(),time) -> HoldsAt(HasTicket(),time).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',53).

 /*  holds_at(onRed, Time) ->
       holds_at(hasTicket, Time).
 */

 /*  holds_at(hasTicket, Time) :-
       holds_at(onRed, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',53).

 /*  [holds_at(onRed, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(hasTicket, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',53).
axiom(holds_at(hasTicket, Time),
    [holds_at(onRed, Time)]).

 /*  not(holds_at(onRed, Time)) :-
       not(holds_at(hasTicket, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',53).

 /*  [holds_at(neg(hasTicket), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(onRed), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',53).
axiom(holds_at(neg(onRed), Time),
    [holds_at(neg(hasTicket), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e:54
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',55).
% [time]
 % HoldsAt(OnYellow(),time) -> HoldsAt(HasTicket(),time).

 /*  holds_at(onYellow, Time) ->
       holds_at(hasTicket, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',55).

 /*  holds_at(hasTicket, Time) :-
       holds_at(onYellow, Time).
 */

 /*  [holds_at(onYellow, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(hasTicket, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',55).
axiom(holds_at(hasTicket, Time),
    [holds_at(onYellow, Time)]).

 /*  not(holds_at(onYellow, Time)) :-
       not(holds_at(hasTicket, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',55).

 /*  [holds_at(neg(hasTicket), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(onYellow), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',55).
axiom(holds_at(neg(onYellow), Time),
    [holds_at(neg(hasTicket), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e:56
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',57).
% HoldsAt(OnRed(),2).

 /*  [b(start, Start2), toffset(start, 2, Start2), ignore(start+2==Start2)] ->
       ta(Ta_Param,
          tvs1=[start+2],
          tvs2=[Start2, start],
          holds_at(onRed, Start2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',57).
axiom(holds_at(onRed, Start2),
    [b(start, Start2), toffset(start, 2, Start2)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e:58
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',59).
% !HoldsAt(HasTicket(),0).

 /*  [] ->
       ta(Ta_Param,
          tvs1=[start],
          tvs2=[start],
          holds_at(neg(hasTicket), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',59).
axiom(holds_at(neg(hasTicket), start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e:59
% Happens(Buy(),0).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',59).

 /*  [] ->
       ta(Ta_Param, tvs1=[start], tvs2=[start], happens(buy, start)).
 */
axiom(happens(buy, start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e:60
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',61).
% Happens(Board(),1).

 /*  [b(start, Maptime), ignore(start+1==Maptime)] ->
       ta(Ta_Param,
          tvs1=[start+1],
          tvs2=[Maptime, start],
          happens(board, Maptime)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',61).
axiom(happens(board, Maptime),
    [b(start, Maptime)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e:61
%; ABDUCED Happens(BoardRed(), 1).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e:63
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',64).
% completion Happens
==> completion(happens).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e:65
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',66).
% range time 0 2
==> range(time,0,2).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e:66
% range offset 1 1
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',66).
==> range(offset,1,1).
%; End of file.
