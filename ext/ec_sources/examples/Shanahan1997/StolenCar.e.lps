:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Shanahan1997/DeadOrAlive.e',56).
% From E: 
% 
% :-call_pel_directive(translate(unskipped,'/pack/logicmoo_ec/ext/ec_sources/examples/Shanahan1997/StolenCar.e.lps')).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/Shanahan1997/StolenCar.e.lps')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Shanahan1997/DeadOrAlive.e',56).
% From E: 
% 
% :-call_pel_directive(translate(begining,'/pack/logicmoo_ec/ext/ec_sources/examples/Shanahan1997/StolenCar.e.lps')).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/Shanahan1997/StolenCar.e.lps')).
% Sat, 10 Oct 2020 14:56:45 GMT File: <stream>(0x5597f2be6e00)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @inproceedings{Kautz:1986,
%;   author = "Henry A. Kautz",
%;   year = "1986",
%;   title = "The Logic of Persistence",
%;   booktitle = "\uppercase{P}roceedings of the \uppercase{F}ifth \uppercase{N}ational \uppercase{C}onference on \uppercase{A}rtificial \uppercase{I}ntelligence",
%;   pages = "401--405",
%;   address = "Los Altos, CA",
%;   publisher = "Morgan Kaufmann",
%; }
%;
%; \fullciteA[p. 359]{Shanahan:1997}
%;
%; @book{Shanahan:1997,
%;   author = "Murray Shanahan",
%;   year = "1997",
%;   title = "Solving the Frame Problem",
%;   address = "Cambridge, MA",
%;   publisher = "MIT Press",
%; }
%;
%; abduction
%;
%; modifications from Shanahan's formulation:
%; timestamps
%; added !HoldsAt(CarParked(),0).
%;

% load foundations/Root.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Shanahan1997/StolenCar.e',38).
% From E: 
% 
% :-call_pel_directive(load('foundations/Root.e')).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Shanahan1997/StolenCar.e',38).
% From E: 
% 
% :-call_pel_directive(load('foundations/EC.e')).
:- call_pel_directive(load('foundations/EC.e')).

% event Park()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Shanahan1997/StolenCar.e',41).
% From E: 
% 
% event(park()).
events([park/0]).

% event Steal()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Shanahan1997/StolenCar.e',41).
% From E: 
% 
% event(steal()).
events([steal/0]).

% fluent CarParked()
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Shanahan1997/StolenCar.e',43).
% From E: 
% 
% fluent(carParked()).
fluents([carParked/0]).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Shanahan1997/StolenCar.e',45).
% [time]
 % Initiates(Park(),CarParked(),time).
% From E: 
% 
% initiates_at(park(),carParked(),Time).
 %   [Time].
park initiates carParked.
 %  initiated(happens(park,Time_From,Time_Until),carParked,[]).
 %  "% =================================".


% [time]
 % Terminates(Steal(),CarParked(),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Shanahan1997/StolenCar.e',45).
% From E: 
% 
% terminates_at(steal(),carParked(),Time).
 %   [Time].
steal terminates carParked.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Shanahan1997/StolenCar.e',45).

 /*  terminated(happens(steal,Time_From,Time_Until),
   	   carParked,
   	   []).
 */
 %  "% =================================".


% !HoldsAt(CarParked(),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Shanahan1997/StolenCar.e',47).
% From E: 
% 
% holds_at(not(carParked()),0).
initially not carParked.
 %  initial_state([not(carParked)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Shanahan1997/StolenCar.e',49).
% Happens(Park(),0).
% From E: 
% 
% happens_at(park(),0).
observe park at 0.
 %  observe([park],0).
 %  "% =================================".


%; ABDUCED Happens(Steal(), 1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Shanahan1997/StolenCar.e',51).
% !HoldsAt(CarParked(),2).
% From E: 
% 
% holds_at(not(carParked()),2).
holds_at(not(carParked),2).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Shanahan1997/StolenCar.e',53).
% range time 0 2
% From E: 
% 
% :-call_pel_directive(range(time,0,2)).
:- call_pel_directive(range(time, 0, 2)).

% range offset 1 1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Shanahan1997/StolenCar.e',53).
% From E: 
% 
% :-call_pel_directive(range(offset,1,1)).
:- call_pel_directive(range(offset, 1, 1)).
%; End of file.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/Shanahan1997/StolenCar.e',56).
% From E: 
% 
% :-call_pel_directive(translate(ending,'/pack/logicmoo_ec/ext/ec_sources/examples/Shanahan1997/StolenCar.e.lps')).
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/Shanahan1997/StolenCar.e.lps')).
