:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(pfc).
% Wed, 01 Apr 2020 20:00:34 GMT
% From ../examples/Mueller2004b/OffOn.pel:4
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/Leaf.e',81).

 /*  loading(load_e_pl,
   	'/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e').
 */
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @inproceedings{Mueller:2004b,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "A tool for satisfiability-based commonsense reasoning in the event calculus",
%;   editor = "Valerie Barr and Zdravko Markov",
%;   booktitle = "\uppercase{P}roceedings of the \uppercase{S}eventeenth \uppercase{I}nternational \uppercase{F}lorida \uppercase{A}rtificial \uppercase{I}ntelligence \uppercase{R}esearch \uppercase{S}ociety \uppercase{C}onference",
%;   pages = "147--152",
%;   address = "Menlo Park, CA",
%;   publisher = "AAAI Press",
%; }
%;

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e:22
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',23).
% load foundations/Root.e
:- load_e('foundations/Root.e', changed).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e:23
% load foundations/EC.e
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',23).
:- load_e('foundations/EC.e', changed).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e:25
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',26).
% sort agent
==> sort(agent).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e:26
% sort switch
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',26).
==> sort(switch).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e:28
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',29).
% fluent On(switch)
fluent(on(switch)).
==> mpred_prop(on(switch),fluent).
==> meta_argtypes(on(switch)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e:29
% fluent Off(switch)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',29).
fluent(off(switch)).
==> mpred_prop(off(switch),fluent).
==> meta_argtypes(off(switch)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e:30
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',31).
% event TurnOn(agent,switch)
event(turnOn(agent,switch)).
==> mpred_prop(turnOn(agent,switch),event).
==> meta_argtypes(turnOn(agent,switch)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e:31
% event TurnOff(agent,switch)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',31).
event(turnOff(agent,switch)).
==> mpred_prop(turnOff(agent,switch),event).
==> meta_argtypes(turnOff(agent,switch)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e:33
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',34).
% noninertial Off
==> noninertial(off).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e:35
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',36).
% [switch,time]
 % HoldsAt(Off(switch),time) <-> !HoldsAt(On(switch),time).

 /*  holds_at(off(Switch), Time) <->
       holds_at(neg(on(Switch)), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',36).

 /*  [holds_at, off] <->
       [holds_at, neg, on].
 */

 /*  holds_at(off(Switch), Time) ->
       holds_at(neg(on(Switch)), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',36).

 /*  holds_at(neg(on(Switch)), Time) :-
       holds_at(off(Switch), Time).
 */

 /*  [holds_at(off(Switch), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(on(Switch)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',36).
axiom(holds_at(neg(on(Switch)), Time),
    [holds_at(off(Switch), Time)]).

 /*  not(holds_at(off(Switch), Time)) :-
       not(holds_at(neg(on(Switch)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',36).

 /*  [holds_at(on(Switch), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(off(Switch)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',36).
axiom(holds_at(neg(off(Switch)), Time),
    [holds_at(on(Switch), Time)]).

 /*  holds_at(neg(on(Switch)), Time) ->
       holds_at(off(Switch), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',36).

 /*  holds_at(off(Switch), Time) :-
       holds_at(neg(on(Switch)), Time).
 */

 /*  [holds_at(neg(on(Switch)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(off(Switch), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',36).
axiom(holds_at(off(Switch), Time),
    [holds_at(neg(on(Switch)), Time)]).

 /*  not(holds_at(neg(on(Switch)), Time)) :-
       not(holds_at(off(Switch), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',36).

 /*  [holds_at(neg(off(Switch)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(on(Switch), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',36).
axiom(holds_at(on(Switch), Time),
    [holds_at(neg(off(Switch)), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e:37
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',38).
% [agent,switch,time]
 % Initiates(TurnOn(agent,switch),On(switch),time).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(turnOn(Agent, Switch), on(Switch), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',38).
axiom(initiates(turnOn(Agent, Switch), on(Switch), Time),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e:38
% [agent,switch,time]
 % Terminates(TurnOff(agent,switch),On(switch),time).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',38).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(turnOff(Agent, Switch),
                     on(Switch),
                     Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',38).
axiom(terminates(turnOff(Agent, Switch), on(Switch), Time),
    []).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e:40
% agent James
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',40).
==> t(agent,james).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e:41
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',42).
% switch Switch1
==> t(switch,switch1).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e:43
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',44).
% !HoldsAt(On(Switch1),0).

 /*  [] ->
       ta(Ta_Param,
          tvs1=[start],
          tvs2=[start],
          holds_at(neg(on(switch1)), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',44).
axiom(holds_at(neg(on(switch1)), start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e:44
% Happens(TurnOn(James,Switch1),0).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',44).

 /*  [] ->
       ta(Ta_Param,
          tvs1=[start],
          tvs2=[start],
          happens(turnOn(james, switch1), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',44).
axiom(happens(turnOn(james, switch1), start),
    []).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e:46
% range time 0 1
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',46).
==> range(time,0,1).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e:47
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004b/OffOn.e',48).
% range offset 1 1
==> range(offset,1,1).
%; End of file.
