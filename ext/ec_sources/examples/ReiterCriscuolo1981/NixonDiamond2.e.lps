:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond1.e',62).
% From E: 
% 
% :-call_pel_directive(translate(unskipped,'/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e.lps')).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e.lps')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond1.e',62).
% From E: 
% 
% :-call_pel_directive(translate(begining,'/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e.lps')).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e.lps')).
% Sat, 10 Oct 2020 15:32:02 GMT File: <stream>(0x559e4b39ea00)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; conflicting defaults: method (D)
%; \fullciteA[p. 274]{ReiterCriscuolo:1981}
%; \fullciteA[pp. 98--99]{McCarthy:1986}
%; \fullciteA[p. 18]{BrewkaDixKonolige:1997}
%;
%; @inproceedings{ReiterCriscuolo:1981,
%;   author = "Raymond Reiter and Giovanni Criscuolo",
%;   year = "1981",
%;   title = "On interacting defaults",
%;   booktitle = "\uppercase{P}roceedings of the \uppercase{S}eventh \uppercase{I}nternational \uppercase{J}oint \uppercase{C}onference on \uppercase{A}rtificial \uppercase{I}ntelligence",
%;   volume = "1",
%;   pages = "270--276",
%;   address = "Los Altos, CA",
%;   publisher = "William Kaufmann",
%; }
%;
%; @article{McCarthy:1986,
%;   author = "John McCarthy",
%;   year = "1986",
%;   title = "Applications of circumscription to formalizing common-sense knowledge",
%;   journal = "Artificial Intelligence",
%;   volume = "28",
%;   pages = "89--116".
%; }
%;
%; @book{BrewkaDixKonolige:1997,
%;   author = "Gerhard Brewka and J{\"{u}}rgen Dix and Kurt Konolige",
%;   year = "1997",
%;   title = "Nonmonotonic Reasoning: An Overview",
%;   address = "Stanford, CA",
%;   publisher = "CSLI",
%; }
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',45).
% load foundations/Root.e
% From E: 
% 
% :-call_pel_directive(load('foundations/Root.e')).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',45).
% From E: 
% 
% :-call_pel_directive(load('foundations/EC.e')).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',48).
% sort x
% From E: 
% 
% sort(x).
sort(x).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',50).
% predicate Republican(x)
% From E: 
% 
% predicate(republican(x)).
mpred_prop(republican(x),predicate).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',50).
predicates([republican/1]).

% predicate Quaker(x)
% From E: 
% 
% predicate(quaker(x)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',50).
mpred_prop(quaker(x),predicate).
predicates([quaker/1]).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',52).
% predicate Pacifist(x)
% From E: 
% 
% predicate(pacifist(x)).
mpred_prop(pacifist(x),predicate).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',52).
predicates([pacifist/1]).

% predicate Ab1(x)
% From E: 
% 
% predicate(ab1(x)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',52).
mpred_prop(ab1(x),predicate).
predicates([ab1/1]).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',54).
% predicate Ab2(x)
% From E: 
% 
% predicate(ab2(x)).
mpred_prop(ab2(x),predicate).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',54).
predicates([ab2/1]).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',56).
% x John
% From E: 
% 
% t(x,john).
x(john).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',58).
% Republican(John).
% From E: 
% 
% republican(john).
republican(john).


% Quaker(John).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',58).
% From E: 
% 
% quaker(john).
quaker(john).


% [x]
 % Republican(x) & !Ab1(x) -> !Pacifist(x).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',60).
% From E: 
% 
% '->'(
%    (republican(X) , 
%     not(ab1(X))), 
%    not(pacifist(X))).
if republican(X), not ab1(X)then not pacifist(X).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',60).

 /*  reactive_rule([republican(X),not(ab1(X))],
   	      [not(pacifist(X))]).
 */
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',62).
% [x]
 % Quaker(x) & !Ab2(x) -> Pacifist(x).
% From E: 
% 
% '->'(
%    (quaker(X) , 
%     not(ab2(X))), 
%    pacifist(X)).
if quaker(X), not ab2(X)then pacifist(X).
 %  reactive_rule([quaker(X),not(ab2(X))],[pacifist(X)]).
 %  "% =================================".

% Theta: 
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',62).
% From E: 
% 
% directive(theta).
directive(theta).
 


% [x]
 % Republican(x) -> Ab2(x).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',62).
% From E: 
% 
% '->'(
%    republican(X), 
%    ab2(X)).
if republican(X)then ab2(X).
 %  reactive_rule([republican(X)],[ab2(X)]).
 %  "% =================================".

% range time 0 0
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',64).
% From E: 
% 
% :-call_pel_directive(range(time,0,0)).
:- call_pel_directive(range(time, 0, 0)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',66).
% range offset 1 1
% From E: 
% 
% :-call_pel_directive(range(offset,1,1)).
:- call_pel_directive(range(offset, 1, 1)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',68).
% completion Theta Ab1
% From E: 
% 
% :-call_pel_directive(completion(theta)).
:- call_pel_directive(completion(theta)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',68).
% From E: 
% 
% :-call_pel_directive(completion(ab1)).
:- call_pel_directive(completion(ab1)).

% completion Theta Ab2
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',68).
% From E: 
% 
% :-call_pel_directive(completion(theta)).
:- call_pel_directive(completion(theta)).
% From E: 
% 
% :-call_pel_directive(completion(ab2)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',68).
:- call_pel_directive(completion(ab2)).
%; End of file.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e',71).
% From E: 
% 
% :-call_pel_directive(translate(ending,'/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e.lps')).
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/examples/ReiterCriscuolo1981/NixonDiamond2.e.lps')).
