:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Diving.e',682).
% translate: unskipped  File: /pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e.lps 
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
% translate: begining  File: /pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e.lps 
% Thu, 08 Oct 2020 21:36:10 GMT File: <stream>(0x55894c1db500)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; Dress
%; (cf Sleep)
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',15).
% event PutOn(agent,clothing)
% event(
%    putOn(agent,clothing)).
actions([putOn/2]).
% mpred_prop(
%    putOn(agent,clothing), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',15).
mpred_prop(putOn(agent,clothing),event).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',17).
% event TakeOff(agent,clothing)
% event(
%    takeOff(agent,clothing)).
actions([takeOff/2]).
% mpred_prop(
%    takeOff(agent,clothing), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',17).
mpred_prop(takeOff(agent,clothing),event).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',19).
% fluent Wearing(agent,clothing)
% fluent(
%    wearing(agent,clothing)).
fluents([wearing/2]).
% mpred_prop(
%    wearing(agent,clothing), 
%    fluent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',19).
mpred_prop(wearing(agent,clothing),fluent).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',21).
% [agent,clothing,time]
% Initiates(PutOn(agent,clothing),
%           Wearing(agent,clothing),
%           time).
% initiates(
%    putOn(Agent,Clothing), 
%    wearing(Agent,Clothing), 
%    Time).
putOn(Agent, Clothing)initiates wearing(Agent, Clothing).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',21).

 /*  initiated(happens(putOn(Agent,Clothing),
   		  Time_From,
   		  Time_Until),
   	  wearing(Agent,Clothing),
   	  []).
 */
 %  "% =================================".


% [agent,clothing,time]
% Happens(PutOn(agent,clothing),time) ->
% !HoldsAt(Wearing(agent,clothing),time) &
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',27).
% {location}%  HoldsAt(At(agent,location),time) &
%            HoldsAt(At(clothing,location),time).
% '->'(
%    ','(
%       ';'(
%          not(
%             not(
%                wearing(Agent,Clothing))), 
%          ';'(
%             not(
%                at(Agent,Exists_Location)), 
%             not(
%                at(Clothing,Exists_Location)))), 
%       some(
%          Exists_Location, 
%          '$kolem_Fn_686'(Agent,Clothing,Time))), 
%    not(
%       putOn(Agent,Clothing))).
if (not not wearing(Agent, Clothing);not loc_at(Agent, Exists_Location);not loc_at(Clothing, Exists_Location)), some(Exists_Location, '$kolem_Fn_686'(Agent, Clothing, Time))then not putOn(Agent, Clothing).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',29).

 /*   reactive_rule([  (not(not(wearing(Agent, Clothing)));not(loc_at(Agent, Exists_Location));not(loc_at(Clothing, Exists_Location))),
                      some(Exists_Location,
                           '$kolem_Fn_686'(Agent, Clothing, Time))
                    ],
                    [not(putOn(Agent, Clothing))]).
 */
 %  "% =================================".
% '->'(
%    ','(
%       putOn(Agent,Clothing), 
%       some(
%          Exists_Location, 
%          '$kolem_Fn_686'(Agent,Clothing,Time))), 
%    not(
%       wearing(Agent,Clothing))).
not wearing(Agent, Clothing)if putOn(Agent, Clothing), some(Exists_Location, '$kolem_Fn_686'(Agent, Clothing, Time)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',29).

 /*  l_int(holds(not(wearing(Agent,Clothing)),Time_At),
         [ happens(putOn(Agent,Clothing),
   		Time_At,
   		Time_At),
   	some(Exists_Location,
   	     '$kolem_Fn_686'(Agent,Clothing,Time))
         ]).
 */
 %  "% =================================".
% '->'(
%    ','(
%       putOn(Agent,Clothing), 
%       some(
%          Exists_Location, 
%          '$kolem_Fn_686'(Agent,Clothing,Time))), 
%    at(Agent,Exists_Location)).
if putOn(Agent, Clothing), some(Exists_Location, '$kolem_Fn_686'(Agent, Clothing, Time))then loc_at(Agent, Exists_Location).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',29).

 /*  reactive_rule([ happens(putOn(Agent,Clothing),
   			Time_From,
   			Time_Until),
   		some(Exists_Location,
   		     '$kolem_Fn_686'(Agent,
   				     Clothing,
   				     Time))
   	      ],
   	      [loc_at(Agent,Exists_Location)]).
 */
 %  "% =================================".
% '->'(
%    ','(
%       putOn(Agent,Clothing), 
%       some(
%          Exists_Location, 
%          '$kolem_Fn_686'(Agent,Clothing,Time))), 
%    at(Clothing,Exists_Location)).
if putOn(Agent, Clothing), some(Exists_Location, '$kolem_Fn_686'(Agent, Clothing, Time))then loc_at(Clothing, Exists_Location).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',29).

 /*  reactive_rule([ happens(putOn(Agent,Clothing),
   			Time_From8,
   			Time_Until9),
   		some(Exists_Location,
   		     '$kolem_Fn_686'(Agent,
   				     Clothing,
   				     Time))
   	      ],
   	      [loc_at(Clothing,Exists_Location)]).
 */
 %  "% =================================".


% [agent,clothing,time]
% Terminates(TakeOff(agent,clothing),
%            Wearing(agent,clothing),
%            time).
% terminates(
%    takeOff(Agent,Clothing), 
%    wearing(Agent,Clothing), 
%    Time).
takeOff(Agent, Clothing)terminates wearing(Agent, Clothing).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',33).

 /*  terminated(happens(takeOff(Agent,Clothing),
   		   Time_From,
   		   Time_Until),
   	   wearing(Agent,Clothing),
   	   []).
 */
 %  "% =================================".


% [agent,clothing,time]
% Happens(TakeOff(agent,clothing),time) ->
% HoldsAt(Wearing(agent,clothing),time).
% '->'(
%    metreqs(
%       takeOff(Agent,Clothing)), 
%    requires(
%       takeOff(Agent,Clothing), 
%       When_Time)).
if takeOff(Agent, Clothing)then requires(takeOff(Agent, Clothing), When_Time).

 /*  reactive_rule([ happens(takeOff(Agent,Clothing),
   			Time_From,
   			Time_Until)
   	      ],
   	      [ requires(takeOff(Agent,Clothing),
   			 When_Time)
   	      ]).
 */
 %  "% =================================".
% '->'(
%    wearing(Agent,Clothing), 
%    metreqs(
%       takeOff(Agent,Clothing))).
takeOff(Agent, Clothing)if wearing(Agent, Clothing).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',38).

 /*  l_events(happens(takeOff(Agent,Clothing),
   		 Time_From6,
   		 Time_From6),
   	 [holds(wearing(Agent,Clothing),Time_From6)]).
 */
 %  "% =================================".
% '->'(
%    not(
%       wearing(Agent,Clothing)), 
%    not(
%       takeOff(Agent,Clothing))).
if not wearing(Agent, Clothing)then not takeOff(Agent, Clothing).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',38).

 /*  reactive_rule([ holds(not(wearing(Agent,Clothing)),
   		      Time_At)
   	      ],
   	      [not(takeOff(Agent,Clothing))]).
 */
 %  "% =================================".


% [agent,clothing,location,time]
% Releases(PutOn(agent,clothing),At(clothing,location),time).
% releases(
%    putOn(Agent,Clothing), 
%    at(Clothing,Location), 
%    Time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',42).
releases(putOn(Agent,Clothing),
	 loc_at(Clothing,Location),
	 Time).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',44).
% [agent,clothing,location,time]
% HoldsAt(Wearing(agent,clothing),time) &
% HoldsAt(At(agent,location),time) ->
% HoldsAt(At(clothing,location),time).
% '->'(
%    ','(
%       wearing(Agent,Clothing), 
%       at(Agent,Location)), 
%    at(Clothing,Location)).
if wearing(Agent, Clothing), loc_at(Agent, Location)then loc_at(Clothing, Location).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',44).

 /*  reactive_rule([ holds(wearing(Agent,Clothing),
   		      Time_At),
   		loc_at(Agent,Location)
   	      ],
   	      [loc_at(Clothing,Location)]).
 */
 %  "% =================================".
% '->'(
%    ','(
%       at(Agent,Location), 
%       not(
%          at(Clothing,Location))), 
%    not(
%       wearing(Agent,Clothing))).
not wearing(Agent, Clothing)if loc_at(Agent, Location), not loc_at(Clothing, Location).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',44).

 /*  l_int(holds(not(wearing(Agent,Clothing)),Time_At5),
         [ loc_at(Agent,Location),
   	not(loc_at(Clothing,Location))
         ]).
 */
 %  "% =================================".
% '->'(
%    ','(
%       wearing(Agent,Clothing), 
%       not(
%          at(Clothing,Location))), 
%    not(
%       at(Agent,Location))).
if wearing(Agent, Clothing), not loc_at(Clothing, Location)then not loc_at(Agent, Location).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',44).

 /*  reactive_rule([ holds(wearing(Agent,Clothing),
   		      Time_At6),
   		not(loc_at(Clothing,Location))
   	      ],
   	      [not(loc_at(Agent,Location))]).
 */
 %  "% =================================".


%;[agent,clothing,location1,location2,time]
%;HoldsAt(At(agent,location1),time) &
%;location1 != location2 ->
%;Terminates(TakeOff(agent,clothing),At(clothing,location2),time).
% [agent,clothing,location,time]
% HoldsAt(At(agent,location),time) ->
% Initiates(TakeOff(agent,clothing),At(clothing,location),time).
% '->'(
%    at(Agent,Location), 
%    initiates(
%       takeOff(Agent,Clothing), 
%       at(Clothing,Location), 
%       Time)).
if loc_at(Agent, Location)then initiates(takeOff(Agent, Clothing), loc_at(Clothing, Location)at Time, _).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',54).

 /*  reactive_rule([loc_at(Agent,Location)],
   	      [ initiates(takeOff(Agent,Clothing),
   			  at(loc_at(Clothing,Location),
   			     Time),
   			  Initiates)
   	      ]).
 */
 %  "% =================================".


%; End of file.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',57).
% translate: ending  File: /pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e.lps 
