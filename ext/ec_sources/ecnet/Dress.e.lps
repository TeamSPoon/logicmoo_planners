:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Diving.e',682).
% From E: 
% 
% :-call_pel_directive(translate(unskipped,'/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e.lps')).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e.lps')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Diving.e',682).
% From E: 
% 
% :-call_pel_directive(translate(begining,'/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e.lps')).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e.lps')).
% Sat, 10 Oct 2020 15:31:36 GMT File: <stream>(0x559e4b46b700)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; Dress
%; (cf Sleep)
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',15).
% event PutOn(agent,clothing)
% From E: 
% 
% event(putOn(agent,clothing)).
events([putOn/2]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',15).
mpred_prop(putOn(agent,clothing),action).
actions([putOn/2]).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',17).
% event TakeOff(agent,clothing)
% From E: 
% 
% event(takeOff(agent,clothing)).
events([takeOff/2]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',17).
mpred_prop(takeOff(agent,clothing),action).
actions([takeOff/2]).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',19).
% fluent Wearing(agent,clothing)
% From E: 
% 
% fluent(wearing(agent,clothing)).
mpred_prop(wearing(agent,clothing),fluent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',19).
fluents([wearing/2]).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',21).
% [agent,clothing,time]
% Initiates(PutOn(agent,clothing),
%           Wearing(agent,clothing),
%           time).
% From E: 
% 
% initiates_at(
%    putOn(Agent,Clothing), 
%    wearing(Agent,Clothing), 
%    Time).
 %   [Time].
putOn(Agent, Clothing)initiates wearing(Agent, Clothing).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',21).

 /*  initiated(happens(putOn(Agent,Clothing),
   		  Time_From,
   		  Time_Until),
   	  wearing(Agent,Clothing),
   	  []).
 */
 %  "% =================================".


% [agent,clothing,time]
% Happens(PutOn(agent,clothing),time) ->
% !HoldsAt(Wearing(agent,clothing),time) &
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',27).
% {location}%  HoldsAt(At(agent,location),time) &
%            HoldsAt(At(clothing,location),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',29).
% From E: 
% 
% exists(
%    [Location], 
%    '->'(
%       happens_at(putOn(Agent,Clothing),Time), 
%       (holds_at(not(wearing(Agent,Clothing)),Time) , 
%         holds_at(at_loc(Agent,Location),Time) , 
%        holds_at(at_loc(Clothing,Location),Time)))).
 %   [Time].
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',29).
exists([Location], if((not(wearing(Agent, Clothing)), at_loc(Agent, Location), at_loc(Clothing, Location)), putOn(Agent, Clothing))).


% [agent,clothing,time]
% Terminates(TakeOff(agent,clothing),
%            Wearing(agent,clothing),
%            time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',33).
% From E: 
% 
% terminates_at(
%    takeOff(Agent,Clothing), 
%    wearing(Agent,Clothing), 
%    Time).
 %   [Time].
takeOff(Agent, Clothing)terminates wearing(Agent, Clothing).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',33).

 /*  terminated(happens(takeOff(Agent,Clothing),
   		   Time_From,
   		   Time_Until),
   	   wearing(Agent,Clothing),
   	   []).
 */
 %  "% =================================".


% [agent,clothing,time]
% Happens(TakeOff(agent,clothing),time) ->
% HoldsAt(Wearing(agent,clothing),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',38).
% From E: 
% 
% '->'(
%    happens_at(takeOff(Agent,Clothing),Time), 
%    holds_at(wearing(Agent,Clothing),Time)).
 %   [Time].
wearing(Agent, Clothing)if takeOff(Agent, Clothing).

 /*  l_int(holds(wearing(Agent,Clothing),Time_At),
         [ happens(takeOff(Agent,Clothing),
   		Time_At,
   		Time_At)
         ]).
 */
 %  "% =================================".


% [agent,clothing,location,time]
% Releases(PutOn(agent,clothing),At(clothing,location),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',42).
% From E: 
% 
% releases_at(
%    putOn(Agent,Clothing), 
%    at_loc(Clothing,Location), 
%    Time).
 %   [Time].
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',42).
releases(putOn(Agent,Clothing),
	 at_loc(Clothing,Location)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',44).
% [agent,clothing,location,time]
% HoldsAt(Wearing(agent,clothing),time) &
% HoldsAt(At(agent,location),time) ->
% HoldsAt(At(clothing,location),time).
% From E: 
% 
% '->'(
%    (holds_at(wearing(Agent,Clothing),Time) , 
%     holds_at(at_loc(Agent,Location),Time)), 
%    holds_at(at_loc(Clothing,Location),Time)).
 %   [Time].
if wearing(Agent, Clothing), at_loc(Agent, Location)then at_loc(Clothing, Location).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',44).

 /*  reactive_rule([ holds(wearing(Agent,Clothing),
   		      Time_At),
   		at_loc(Agent,Location)
   	      ],
   	      [at_loc(Clothing,Location)]).
 */
 %  "% =================================".


%;[agent,clothing,location1,location2,time]
%;HoldsAt(At(agent,location1),time) &
%;location1 != location2 ->
%;Terminates(TakeOff(agent,clothing),At(clothing,location2),time).
% [agent,clothing,location,time]
% HoldsAt(At(agent,location),time) ->
% Initiates(TakeOff(agent,clothing),At(clothing,location),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',54).
% From E: 
% 
% '->'(
%    holds_at(at_loc(Agent,Location),Time), 
%    initiates_at(
%       takeOff(Agent,Clothing), 
%       at_loc(Clothing,Location), 
%       Time)).
 %   [Time].
takeOff(Agent, Clothing)initiates at_loc(Clothing, Location)if at_loc(Agent, Location).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',54).

 /*  initiated(happens(takeOff(Agent,Clothing),
   		  Time_From,
   		  Time_Until),
   	  at_loc(Clothing,Location),
   	  [holds(at_loc(Agent,Location),Time_From)]).
 */
 %  "% =================================".


%; End of file.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',57).
% From E: 
% 
% :-call_pel_directive(translate(ending,'/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e.lps')).
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e.lps')).
