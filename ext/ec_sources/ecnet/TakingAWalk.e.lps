:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',212).
% From E: 
% 
% :-call_pel_directive(translate(unskipped,'/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e.lps')).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e.lps')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',212).
% From E: 
% 
% :-call_pel_directive(translate(begining,'/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e.lps')).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e.lps')).
% Sat, 10 Oct 2020 15:31:46 GMT File: <stream>(0x559e4b3a0700)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Mueller:2004c,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "Understanding script-based stories using commonsense reasoning",
%;   journal = "Cognitive Systems Research",
%;   volume = "5",
%;   number = "4",
%;   pages = "307--340",
%; }
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',22).
% option modeldiff on
% From E: 
% 
% :-call_pel_directive(option(modeldiff,on)).
:- call_pel_directive(option(modeldiff, on)).

% option renaming off
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',22).
% From E: 
% 
% :-call_pel_directive(option(renaming,off)).
:- call_pel_directive(option(renaming, off)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',25).
% ignore Love, ThreatenedBy
% From E: 
% 
% :-call_pel_directive(ignore(love)).
:- call_pel_directive(ignore(love)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',25).
% From E: 
% 
% :-call_pel_directive(ignore(threatenedBy)).
:- call_pel_directive(ignore(threatenedBy)).

% ignore LookOutOnto, Floor, BuildingOf, SkyOf, GroundOf
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',25).
% From E: 
% 
% :-call_pel_directive(ignore(lookOutOnto)).
:- call_pel_directive(ignore(lookOutOnto)).
% From E: 
% 
% :-call_pel_directive(ignore(floor)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',25).
:- call_pel_directive(ignore(floor)).
% From E: 
% 
% :-call_pel_directive(ignore(buildingOf)).
:- call_pel_directive(ignore(buildingOf)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',25).
% From E: 
% 
% :-call_pel_directive(ignore(skyOf)).
:- call_pel_directive(ignore(skyOf)).
% From E: 
% 
% :-call_pel_directive(ignore(groundOf)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',25).
:- call_pel_directive(ignore(groundOf)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',27).
% ignore Inside, PutInside, On, PlaceOn
% From E: 
% 
% :-call_pel_directive(ignore(inside)).
:- call_pel_directive(ignore(inside)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',27).
% From E: 
% 
% :-call_pel_directive(ignore(putInside)).
:- call_pel_directive(ignore(putInside)).
% From E: 
% 
% :-call_pel_directive(ignore(on)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',27).
:- call_pel_directive(ignore(on)).
% From E: 
% 
% :-call_pel_directive(ignore(placeOn)).
:- call_pel_directive(ignore(placeOn)).

% ignore Like, Happy, BecomeAngryAt
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',27).
% From E: 
% 
% :-call_pel_directive(ignore(like)).
:- call_pel_directive(ignore(like)).
% From E: 
% 
% :-call_pel_directive(ignore(happy)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',27).
:- call_pel_directive(ignore(happy)).
% From E: 
% 
% :-call_pel_directive(ignore(becomeAngryAt)).
:- call_pel_directive(ignore(becomeAngryAt)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',29).
% ignore Near, WalkFrom, WalkFromTo, RunFromTo
% From E: 
% 
% :-call_pel_directive(ignore(near)).
:- call_pel_directive(ignore(near)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',29).
% From E: 
% 
% :-call_pel_directive(ignore(walkFrom)).
:- call_pel_directive(ignore(walkFrom)).
% From E: 
% 
% :-call_pel_directive(ignore(walkFromTo)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',29).
:- call_pel_directive(ignore(walkFromTo)).
% From E: 
% 
% :-call_pel_directive(ignore(runFromTo)).
:- call_pel_directive(ignore(runFromTo)).

% ignore ActOnIntentionToWalkIn, IntentionToWalkIn, InvitedIn, InviteIn
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',29).
% From E: 
% 
% :-call_pel_directive(ignore(actOnIntentionToWalkIn)).
:- call_pel_directive(ignore(actOnIntentionToWalkIn)).
% From E: 
% 
% :-call_pel_directive(ignore(intentionToWalkIn)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',29).
:- call_pel_directive(ignore(intentionToWalkIn)).
% From E: 
% 
% :-call_pel_directive(ignore(invitedIn)).
:- call_pel_directive(ignore(invitedIn)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',29).
% From E: 
% 
% :-call_pel_directive(ignore(inviteIn)).
:- call_pel_directive(ignore(inviteIn)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',31).
% ignore TakeOffOf, TakeOutOf, LetGoOf
% From E: 
% 
% :-call_pel_directive(ignore(takeOffOf)).
:- call_pel_directive(ignore(takeOffOf)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',31).
% From E: 
% 
% :-call_pel_directive(ignore(takeOutOf)).
:- call_pel_directive(ignore(takeOutOf)).
% From E: 
% 
% :-call_pel_directive(ignore(letGoOf)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',31).
:- call_pel_directive(ignore(letGoOf)).

% ignore Greet, SayGoodbye, Order, KnowOrder
% From E: 
% 
% :-call_pel_directive(ignore(greet)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',31).
:- call_pel_directive(ignore(greet)).
% From E: 
% 
% :-call_pel_directive(ignore(sayGoodbye)).
:- call_pel_directive(ignore(sayGoodbye)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',31).
% From E: 
% 
% :-call_pel_directive(ignore(order)).
:- call_pel_directive(ignore(order)).
% From E: 
% 
% :-call_pel_directive(ignore(knowOrder)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',31).
:- call_pel_directive(ignore(knowOrder)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',33).
% ignore LieOn, SitOn, RiseFrom, LyingOn, SittingOn
% From E: 
% 
% :-call_pel_directive(ignore(lieOn)).
:- call_pel_directive(ignore(lieOn)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',33).
% From E: 
% 
% :-call_pel_directive(ignore(sitOn)).
:- call_pel_directive(ignore(sitOn)).
% From E: 
% 
% :-call_pel_directive(ignore(riseFrom)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',33).
:- call_pel_directive(ignore(riseFrom)).
% From E: 
% 
% :-call_pel_directive(ignore(lyingOn)).
:- call_pel_directive(ignore(lyingOn)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',33).
% From E: 
% 
% :-call_pel_directive(ignore(sittingOn)).
:- call_pel_directive(ignore(sittingOn)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',35).
% load foundations/Root.e
% From E: 
% 
% :-call_pel_directive(load('foundations/Root.e')).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',35).
% From E: 
% 
% :-call_pel_directive(load('foundations/EC.e')).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',37).
% load answers/Mueller2003/Ontology.e
% From E: 
% 
% :-call_pel_directive(load('answers/Mueller2003/Ontology.e')).
:- call_pel_directive(load('answers/Mueller2003/Ontology.e')).

% load answers/Mueller2004c/OTSpaceM.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',37).
% From E: 
% 
% :-call_pel_directive(load('answers/Mueller2004c/OTSpaceM.e')).
:- call_pel_directive(load('answers/Mueller2004c/OTSpaceM.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',39).
% load answers/Mueller2004c/RTSpaceM.e
% From E: 
% 
% :-call_pel_directive(load('answers/Mueller2004c/RTSpaceM.e')).
:- call_pel_directive(load('answers/Mueller2004c/RTSpaceM.e')).

% load answers/Mueller2003/Sleep.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',39).
% From E: 
% 
% :-call_pel_directive(load('answers/Mueller2003/Sleep.e')).
:- call_pel_directive(load('answers/Mueller2003/Sleep.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',41).
% load answers/Mueller2004c/Dress.e
% From E: 
% 
% :-call_pel_directive(load('answers/Mueller2004c/Dress.e')).
:- call_pel_directive(load('answers/Mueller2004c/Dress.e')).

% load answers/Mueller2004c/Rain.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',41).
% From E: 
% 
% :-call_pel_directive(load('answers/Mueller2004c/Rain.e')).
:- call_pel_directive(load('answers/Mueller2004c/Rain.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',44).
% room Origin1
% From E: 
% 
% t(room,origin1).
room(origin1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',46).
% door OriginDoor1
% From E: 
% 
% t(door,originDoor1).
door(originDoor1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',48).
% outside OriginOutside1
% From E: 
% 
% t(outside,originOutside1).
outside(originOutside1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',50).
% street StreetFromOriginToMiddle1
% From E: 
% 
% t(street,streetFromOriginToMiddle1).
street(streetFromOriginToMiddle1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',52).
% outside Middle1
% From E: 
% 
% t(outside,middle1).
outside(middle1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',54).
% street StreetFromMiddleToDestination1
% From E: 
% 
% t(street,streetFromMiddleToDestination1).
street(streetFromMiddleToDestination1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',56).
% outside DestinationOutside1
% From E: 
% 
% t(outside,destinationOutside1).
outside(destinationOutside1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',58).
% door DestinationDoor1
% From E: 
% 
% t(door,destinationDoor1).
door(destinationDoor1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',60).
% room Destination1
% From E: 
% 
% t(room,destination1).
room(destination1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',62).
% Side1(OriginDoor1)=OriginOutside1.
% From E: 
% 
% side1(originDoor1)=originOutside1.
side1(originDoor1,originOutside1).


% Side2(OriginDoor1)=Origin1.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',62).
% From E: 
% 
% side2(originDoor1)=origin1.
side2(originDoor1,origin1).


% Side1(StreetFromOriginToMiddle1)=OriginOutside1.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',64).
% From E: 
% 
% side1(streetFromOriginToMiddle1)=originOutside1.
side1(streetFromOriginToMiddle1,originOutside1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',66).
% Side2(StreetFromOriginToMiddle1)=Middle1.
% From E: 
% 
% side2(streetFromOriginToMiddle1)=middle1.
side2(streetFromOriginToMiddle1,middle1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',68).
% Side1(StreetFromMiddleToDestination1)=Middle1.
% From E: 
% 
% side1(streetFromMiddleToDestination1)=middle1.
side1(streetFromMiddleToDestination1,middle1).


% Side2(StreetFromMiddleToDestination1)=DestinationOutside1.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',68).
% From E: 
% 
% side2(streetFromMiddleToDestination1)=destinationOutside1.
side2(streetFromMiddleToDestination1,destinationOutside1).


% Side1(DestinationDoor1)=DestinationOutside1.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',70).
% From E: 
% 
% side1(destinationDoor1)=destinationOutside1.
side1(destinationDoor1,destinationOutside1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',72).
% Side2(DestinationDoor1)=Destination1.
% From E: 
% 
% side2(destinationDoor1)=destination1.
side2(destinationDoor1,destination1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',74).
% agent Walker1
% From E: 
% 
% t(agent,walker1).
agent(walker1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',76).
% clothing Clothes1
% From E: 
% 
% t(clothing,clothes1).
clothing(clothes1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',78).
% umbrella Umbrella1
% From E: 
% 
% t(umbrella,umbrella1).
umbrella(umbrella1).
%; initial state
% [agent,object]
 % !HoldsAt(Holding(agent,object),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',80).
% From E: 
% 
% holds_at(not(holding(Agent,Object)),0).
initially not holding(Agent, Object).
 %  initial_state([not(holding(Agent,Object))]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',82).
% [agent]
 % HoldsAt(Dressed(agent),0).
% From E: 
% 
% holds_at(dressed(Agent),0).
initially dressed(Agent).
 %  initial_state([dressed(Agent)]).
 %  "% =================================".


% [agent]
 % HoldsAt(Awake(agent),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',82).
% From E: 
% 
% holds_at(awake(Agent),0).
initially awake(Agent).
 %  initial_state([awake(Agent)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',84).
% [agent]
 % HoldsAt(Sleep3(agent),0).
% From E: 
% 
% holds_at(sleep3(Agent),0).
initially sleep3(Agent).
 %  initial_state([sleep3(Agent)]).
 %  "% =================================".


% [agent]
 % HoldsAt(Standing(agent),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',84).
% From E: 
% 
% holds_at(standing(Agent),0).
initially standing(Agent).
 %  initial_state([standing(Agent)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',86).
% HoldsAt(DoorUnlocked(OriginDoor1),0).
% From E: 
% 
% holds_at(doorUnlocked(originDoor1),0).
initially doorUnlocked(originDoor1).
 %  initial_state([doorUnlocked(originDoor1)]).
 %  "% =================================".


% !HoldsAt(DoorIsOpen(OriginDoor1),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',86).
% From E: 
% 
% holds_at(not(doorIsOpen(originDoor1)),0).
initially not doorIsOpen(originDoor1).
 %  initial_state([not(doorIsOpen(originDoor1))]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',88).
% HoldsAt(DoorUnlocked(DestinationDoor1),0).
% From E: 
% 
% holds_at(doorUnlocked(destinationDoor1),0).
initially doorUnlocked(destinationDoor1).
 %  initial_state([doorUnlocked(destinationDoor1)]).
 %  "% =================================".


% !HoldsAt(DoorIsOpen(DestinationDoor1),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',88).
% From E: 
% 
% holds_at(not(doorIsOpen(destinationDoor1)),0).
initially not doorIsOpen(destinationDoor1).
 %  initial_state([not(doorIsOpen(destinationDoor1))]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',90).
% HoldsAt(At(Walker1,Origin1),0).
% From E: 
% 
% holds_at(at_loc(walker1,origin1),0).
initially at_loc(walker1, origin1).
 %  initial_state([at_loc(walker1,origin1)]).
 %  "% =================================".


% HoldsAt(At(Clothes1,Origin1),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',90).
% From E: 
% 
% holds_at(at_loc(clothes1,origin1),0).
initially at_loc(clothes1, origin1).
 %  initial_state([at_loc(clothes1,origin1)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',92).
% HoldsAt(At(Umbrella1,Origin1),0).
% From E: 
% 
% holds_at(at_loc(umbrella1,origin1),0).
initially at_loc(umbrella1, origin1).
 %  initial_state([at_loc(umbrella1,origin1)]).
 %  "% =================================".


% [outside,time]
 % HoldsAt(Raining(outside),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',92).
% From E: 
% 
% holds_at(raining(Outside),Time).
 %   [Time].
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',92).
raining(Outside).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',94).
% [object]
 % !HoldsAt(Wet(object),0).
% From E: 
% 
% holds_at(not(wet(Object)),0).
initially not wet(Object).
 %  initial_state([not(wet(Object))]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',96).
%; narrative


% Happens(PutOn(Walker1,Clothes1),0).
% From E: 
% 
% happens_at(putOn(walker1,clothes1),0).
observe putOn(walker1, clothes1)at 0.
 %  observe([putOn(walker1,clothes1)],0).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',98).
% Happens(PickUp(Walker1,Umbrella1),1).
% From E: 
% 
% happens_at(pickUp(walker1,umbrella1),1).
observe pickUp(walker1, umbrella1)at 1.
 %  observe([pickUp(walker1,umbrella1)],1).
 %  "% =================================".


% Happens(DoorOpen(Walker1,OriginDoor1),2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',98).
% From E: 
% 
% happens_at(doorOpen(walker1,originDoor1),2).
observe doorOpen(walker1, originDoor1)at 2.
 %  observe([doorOpen(walker1,originDoor1)],2).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',100).
% Happens(WalkThroughDoor21(Walker1,OriginDoor1),3).
% From E: 
% 
% happens_at(walkThroughDoor21(walker1,originDoor1),3).
observe walkThroughDoor21(walker1, originDoor1)at 3.
 %  observe([walkThroughDoor21(walker1,originDoor1)],3).
 %  "% =================================".


% Happens(DoorClose(Walker1,OriginDoor1),4).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',100).
% From E: 
% 
% happens_at(doorClose(walker1,originDoor1),4).
observe doorClose(walker1, originDoor1)at 4.
 %  observe([doorClose(walker1,originDoor1)],4).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',102).
% Happens(WalkStreet12(Walker1,StreetFromOriginToMiddle1),5).
% From E: 
% 
% happens_at(walkStreet12(walker1,streetFromOriginToMiddle1),5).
observe walkStreet12(walker1, streetFromOriginToMiddle1)at 5.
 %  observe([walkStreet12(walker1,streetFromOriginToMiddle1)],5).
 %  "% =================================".


% Happens(WalkStreet12(Walker1,StreetFromMiddleToDestination1),6).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',102).
% From E: 
% 
% happens_at(walkStreet12(walker1,streetFromMiddleToDestination1),6).
observe walkStreet12(walker1, streetFromMiddleToDestination1)at 6.
 %  observe([walkStreet12(walker1,streetFromMiddleToDestination1)],6).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',104).
% Happens(DoorOpen(Walker1,DestinationDoor1),7).
% From E: 
% 
% happens_at(doorOpen(walker1,destinationDoor1),7).
observe doorOpen(walker1, destinationDoor1)at 7.
 %  observe([doorOpen(walker1,destinationDoor1)],7).
 %  "% =================================".


% Happens(WalkThroughDoor12(Walker1,DestinationDoor1),8).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',104).
% From E: 
% 
% happens_at(walkThroughDoor12(walker1,destinationDoor1),8).
observe walkThroughDoor12(walker1, destinationDoor1)at 8.
 %  observe([walkThroughDoor12(walker1,destinationDoor1)],8).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',106).
% Happens(DoorClose(Walker1,DestinationDoor1),9).
% From E: 
% 
% happens_at(doorClose(walker1,destinationDoor1),9).
observe doorClose(walker1, destinationDoor1)at 9.
 %  observe([doorClose(walker1,destinationDoor1)],9).
 %  "% =================================".


% Happens(TakeOff(Walker1,Clothes1),10).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',106).
% From E: 
% 
% happens_at(takeOff(walker1,clothes1),10).
observe takeOff(walker1, clothes1)at 10.
 %  observe([takeOff(walker1,clothes1)],10).
 %  "% =================================".

% range time 0 11
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',108).
% From E: 
% 
% :-call_pel_directive(range(time,0,11)).
:- call_pel_directive(range(time, 0, 11)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',110).
% range offset 0 0
% From E: 
% 
% :-call_pel_directive(range(offset,0,0)).
:- call_pel_directive(range(offset, 0, 0)).

% range diameter 0 0
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',110).
% From E: 
% 
% :-call_pel_directive(range(diameter,0,0)).
:- call_pel_directive(range(diameter, 0, 0)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',113).
% completion Happens
% From E: 
% 
% :-call_pel_directive(completion(happens_at)).
:- call_pel_directive(completion(happens_at)).
%; End of file.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e',115).
% From E: 
% 
% :-call_pel_directive(translate(ending,'/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e.lps')).
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingAWalk.e.lps')).
