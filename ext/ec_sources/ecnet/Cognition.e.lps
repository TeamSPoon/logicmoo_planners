:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Book.e',87).
% translate: unskipped  File: /pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e.lps 
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
% translate: begining  File: /pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e.lps 
% Wed, 07 Oct 2020 20:49:14 GMT File: <stream>(0x55afad5c4100)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e',11).
% event Read(agent,text,content)
 %  event(read(agent,text,content)).
 %  event(read(agent,text,content)).
actions([read/3]).
mpred_prop(read(agent,text,content),event).

% event ThinkAbout(agent,content)
 %  event(thinkAbout(agent,content)).
 %  event(thinkAbout(agent,content)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e',11).
actions([thinkAbout/2]).
mpred_prop(thinkAbout(agent,content),event).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e',13).
% event Think(agent)
 %  event(think(agent)).
 %  event(think(agent)).
actions([think/1]).
mpred_prop(think(agent),event).

% event Understand(agent,content)
 %  event(understand(agent,content)).
 %  event(understand(agent,content)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e',13).
actions([understand/2]).
mpred_prop(understand(agent,content),event).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e',15).
% event Dream(agent)
 %  event(dream(agent)).
 %  event(dream(agent)).
actions([dream/1]).
mpred_prop(dream(agent),event).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e',17).
% [agent,text,content,time]
% Happens(Read(agent,text,content),time) ->
% HoldsAt(See(agent,text),time).

 /*  happens(read(Agent, Text, Content), Time) ->
       holds_at(see(Agent, Text), Time).
 */
if happens(read(Agent, Text, Content), Time)then see(Agent, Text)at Time.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e',17).

 /*  reactive_rule([ happens(read(Agent,Text,Content),
   			Time)
   	      ],
   	      [holds(see(Agent,Text),Time)]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e',20).
% translate: ending  File: /pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e.lps 
