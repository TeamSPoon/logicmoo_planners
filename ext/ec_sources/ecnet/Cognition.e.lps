:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Book.e',87).
% From E: 
% 
% :-call_pel_directive(translate(unskipped,'/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e.lps')).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e.lps')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Book.e',87).
% From E: 
% 
% :-call_pel_directive(translate(begining,'/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e.lps')).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e.lps')).
% Sat, 10 Oct 2020 15:31:34 GMT File: <stream>(0x559e4b46ac00)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e',11).
% event Read(agent,text,content)
% From E: 
% 
% event(read(agent,text,content)).
events([read/3]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e',11).
mpred_prop(read(agent,text,content),action).
actions([read/3]).

% event ThinkAbout(agent,content)
% From E: 
% 
% event(thinkAbout(agent,content)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e',11).
events([thinkAbout/2]).
mpred_prop(thinkAbout(agent,content),action).
actions([thinkAbout/2]).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e',13).
% event Think(agent)
% From E: 
% 
% event(think(agent)).
events([think/1]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e',13).
mpred_prop(think(agent),action).
actions([think/1]).

% event Understand(agent,content)
% From E: 
% 
% event(understand(agent,content)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e',13).
events([understand/2]).
mpred_prop(understand(agent,content),action).
actions([understand/2]).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e',15).
% event Dream(agent)
% From E: 
% 
% event(dream(agent)).
events([dream/1]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e',15).
mpred_prop(dream(agent),action).
actions([dream/1]).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e',17).
% [agent,text,content,time]
% Happens(Read(agent,text,content),time) ->
% HoldsAt(See(agent,text),time).
% From E: 
% 
% '->'(
%    happens_at(read(Agent,Text,Content),Time), 
%    holds_at(see(Agent,Text),Time)).
 %   [Time].
if read(Agent, Text, Content)then see(Agent, Text).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e',17).

 /*  reactive_rule([read(Agent,Text,Content)],
   	      [see(Agent,Text)]).
 */
 %  "% =================================".
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e',20).
% From E: 
% 
% :-call_pel_directive(translate(ending,'/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e.lps')).
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e.lps')).
