:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Rain.e',41).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.pel')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(ecalc).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.pel')).
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Mueller:2004c,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "Understanding script-based stories using commonsense reasoning",
%;   journal = "Cognitive Systems Research",
%;   volume = "5",
%;   number = "4",
%;   pages = "307--340",
%; }
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',22).
% option modeldiff on
:- call_pel_directive(option(modeldiff, on)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',24).
% ignore Love, ThreatenedBy
:- call_pel_directive(ignore(love)).
:- call_pel_directive(ignore(threatenedBy)).

% ignore LookOutOnto, Floor, BuildingOf, SkyOf, GroundOf
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',24).
:- call_pel_directive(ignore(lookOutOnto)).
:- call_pel_directive(ignore(floor)).
:- call_pel_directive(ignore(buildingOf)).
:- call_pel_directive(ignore(skyOf)).
:- call_pel_directive(ignore(groundOf)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',26).
% ignore Inside
:- call_pel_directive(ignore(inside)).

% ignore Near, WalkFrom, WalkFromTo, RunFromTo
:- call_pel_directive(ignore(near)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',26).
:- call_pel_directive(ignore(walkFrom)).
:- call_pel_directive(ignore(walkFromTo)).
:- call_pel_directive(ignore(runFromTo)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',29).
% option renaming off
:- call_pel_directive(option(renaming, off)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',31).
% load foundations/Root.e
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',33).
% load answers/Mueller2003/Ontology.e
:- call_pel_directive(load('answers/Mueller2003/Ontology.e')).

% load answers/Mueller2004c/RTSpaceM.e
:- call_pel_directive(load('answers/Mueller2004c/RTSpaceM.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',35).
% load answers/Mueller2004c/OTSpaceM.e
:- call_pel_directive(load('answers/Mueller2004c/OTSpaceM.e')).

% load answers/Mueller2004c/Book.e
:- call_pel_directive(load('answers/Mueller2004c/Book.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',37).
% load answers/Mueller2004c/Cognition.e
:- call_pel_directive(load('answers/Mueller2004c/Cognition.e')).

% load answers/Mueller2003/Sleep.e
:- call_pel_directive(load('answers/Mueller2003/Sleep.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',39).
% load answers/Mueller2003/Vision.e
:- call_pel_directive(load('answers/Mueller2003/Vision.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',41).
% door Door1
t(door,door1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',43).
% room Room0
t(room,room0).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',45).
% room Room1
t(room,room1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',47).
% Side1(Door1)=Room0.
side1(door1)=room0.


% Side2(Door1)=Room1.
side2(door1)=room1.

% agent Reader1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',49).
t(agent,reader1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',52).
% book Book1
t(book,book1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',54).
% chair Chair1
t(chair,chair1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',56).
% physobj BookSupport1
t(physobj,bookSupport1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',58).
% content Content1
t(content,content1).
%; initial state
% [agent,object]
 % !HoldsAt(Holding(agent,object),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',60).
holds_at(not(holding(Agent,Object)),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',62).
% [agent,physobj]
 % !HoldsAt(SittingOn(agent,physobj),0).
holds_at(not(sittingOn(Agent,Physobj)),0).


% [agent,physobj]
 % !HoldsAt(LyingOn(agent,physobj),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',62).
holds_at(not(lyingOn(Agent,Physobj)),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',64).
% !{page}% HoldsAt(BookIsOpenTo(Book1,page),0).
not(exists([Page],holds_at(bookIsOpenTo(book1,Page),0))).


% [physobj1,physobj2]
% !(physobj1=Book1 & physobj2=BookSupport1) ->
% !HoldsAt(On(physobj1, physobj2),0).
not((Physobj1=book1, Physobj2=bookSupport1)) ->
    holds_at(not(on(Physobj1, Physobj2)), 0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',68).
% HoldsAt(Dressed(Reader1),0).
holds_at(dressed(reader1),0).


% HoldsAt(Awake(Reader1),0).
holds_at(awake(reader1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',70).
% HoldsAt(Sleep3(Reader1),0).
holds_at(sleep3(reader1),0).


% HoldsAt(Standing(Reader1),0).
holds_at(standing(reader1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',72).
% HoldsAt(DoorUnlocked(Door1),0).
holds_at(doorUnlocked(door1),0).


% HoldsAt(DoorIsOpen(Door1),0).
holds_at(doorIsOpen(door1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',74).
% HoldsAt(At(Reader1,Room0),0).
holds_at(at_loc(reader1,room0),0).


% HoldsAt(At(Chair1,Room1),0).
holds_at(at_loc(chair1,room1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',76).
% HoldsAt(At(Book1,Room1),0).
holds_at(at_loc(book1,room1),0).


% HoldsAt(On(Book1,BookSupport1),0).
holds_at(on(book1,bookSupport1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',78).
% [object]
 % !HoldsAt(See(Reader1,object),0).
holds_at(not(see(reader1,Object)),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',80).
%; narrative


% Happens(WalkThroughDoor12(Reader1,Door1),0).
happens_at(walkThroughDoor12(reader1,door1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',82).
% Happens(TakeOffOf(Reader1,Book1,BookSupport1),1).
happens_at(takeOffOf(reader1,book1,bookSupport1),1).


% Happens(SitOn(Reader1,Chair1),2).
happens_at(sitOn(reader1,chair1),2).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',84).
% Happens(BookOpenTo(Reader1,Book1,1),3).
happens_at(bookOpenTo(reader1,book1,1),3).


% Happens(LookAt(Reader1,Book1),4).
happens_at(lookAt(reader1,book1),4).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',86).
% Happens(Read(Reader1,Book1,Content1),5).
happens_at(read(reader1,book1,content1),5).


% Happens(ThinkAbout(Reader1,Content1),6).
happens_at(thinkAbout(reader1,content1),6).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',88).
% Happens(Understand(Reader1,Content1),7).
happens_at(understand(reader1,content1),7).


% Happens(BookTurnPageTo(Reader1,Book1,2),8).
happens_at(bookTurnPageTo(reader1,book1,2),8).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',90).
% Happens(BookTurnPageTo(Reader1,Book1,3),9).
happens_at(bookTurnPageTo(reader1,book1,3),9).


% Happens(BookClose(Reader1,Book1),10).
happens_at(bookClose(reader1,book1),10).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',92).
% Happens(RiseFrom(Reader1,Chair1),11).
happens_at(riseFrom(reader1,chair1),11).


% Happens(PlaceOn(Reader1,Book1,BookSupport1),12).
happens_at(placeOn(reader1,book1,bookSupport1),12).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',94).
% Happens(WalkThroughDoor21(Reader1,Door1),13).
happens_at(walkThroughDoor21(reader1,door1),13).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',96).
% range time 0 14
:- call_pel_directive(range(time, 0, 14)).

% range page 1 3
:- call_pel_directive(range(page, 1, 3)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',98).
% range offset 0 0
:- call_pel_directive(range(offset, 0, 0)).

% range diameter 0 0
:- call_pel_directive(range(diameter, 0, 0)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',101).
% completion Happens
:- call_pel_directive(completion(happens_at)).
%; End of file.
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.pel')).
