:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Rain.e',41).
% translate: unskipped  File: /pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e.lps 
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
% translate: begining  File: /pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e.lps 
% Thu, 08 Oct 2020 21:36:37 GMT File: <stream>(0x55894c216900)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Mueller:2004c,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "Understanding script-based stories using commonsense reasoning",
%;   journal = "Cognitive Systems Research",
%;   volume = "5",
%;   number = "4",
%;   pages = "307--340",
%; }
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',22).
% option modeldiff on
:- if(is_e_toplevel).
:- set_ec_option(modeldiff, on).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',24).
% ignore Love, ThreatenedBy
% ignore(love).
ignore(love).
% ignore(threatenedBy).
ignore(threatenedBy).

% ignore LookOutOnto, Floor, BuildingOf, SkyOf, GroundOf
% ignore(lookOutOnto).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',24).
ignore(lookOutOnto).
% ignore(floor).
ignore(floor).
% ignore(buildingOf).
ignore(buildingOf).
% ignore(skyOf).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',24).
ignore(skyOf).
% ignore(groundOf).
ignore(groundOf).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',26).
% ignore Inside
% ignore(inside).
ignore(inside).

% ignore Near, WalkFrom, WalkFromTo, RunFromTo
% ignore(near).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',26).
ignore(near).
% ignore(walkFrom).
ignore(walkFrom).
% ignore(walkFromTo).
ignore(walkFromTo).
% ignore(runFromTo).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',26).
ignore(runFromTo).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',29).
% option renaming off
:- if(is_e_toplevel).
:- set_ec_option(renaming, off).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',31).
% load foundations/Root.e
:- if(is_e_toplevel).
:- load_e_cond('foundations/Root.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/foundations/Root.e',changed).
:- endif.

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',31).
:- if(is_e_toplevel).
:- load_e_cond('foundations/EC.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/foundations/EC.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',33).
% load answers/Mueller2003/Ontology.e
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2003/Ontology.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e',changed).
:- endif.

% load answers/Mueller2004c/RTSpaceM.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',33).
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2004c/RTSpaceM.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/RTSpace.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',35).
% load answers/Mueller2004c/OTSpaceM.e
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2004c/OTSpaceM.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e',changed).
:- endif.

% load answers/Mueller2004c/Book.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',35).
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2004c/Book.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/Book.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',37).
% load answers/Mueller2004c/Cognition.e
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2004c/Cognition.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/Cognition.e',changed).
:- endif.

% load answers/Mueller2003/Sleep.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',37).
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2003/Sleep.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',39).
% load answers/Mueller2003/Vision.e
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2003/Vision.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',41).
% door Door1
% t(door,door1).
door(door1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',43).
% room Room0
% t(room,room0).
room(room0).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',45).
% room Room1
% t(room,room1).
room(room1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',47).
% Side1(Door1)=Room0.
% side1Pred(door1,room0).
side1Pred(door1,room0).


% Side2(Door1)=Room1.
% side2Pred(door1,room1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',47).
side2Pred(door1,room1).

% agent Reader1
% t(agent,reader1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',49).
agent(reader1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',52).
% book Book1
% t(book,book1).
book(book1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',54).
% chair Chair1
% t(chair,chair1).
chair(chair1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',56).
% physobj BookSupport1
% t(physobj,bookSupport1).
physobj(bookSupport1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',58).
% content Content1
% t(content,content1).
content(content1).
%; initial state
% [agent,object]
 % !HoldsAt(Holding(agent,object),0).
% initially(
%    neg(
%       holding(Agent,Object))).
initially not holding(Agent, Object).
 %  initial_state([not(holding(Agent,Object))]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',62).
% [agent,physobj]
 % !HoldsAt(SittingOn(agent,physobj),0).
% initially(
%    neg(
%       sittingOn(Agent,Physobj))).
initially not sittingOn(Agent, Physobj).
 %  initial_state([not(sittingOn(Agent,Physobj))]).
 %  "% =================================".


% [agent,physobj]
 % !HoldsAt(LyingOn(agent,physobj),0).
% initially(
%    neg(
%       lyingOn(Agent,Physobj))).
initially not lyingOn(Agent, Physobj).
 %  initial_state([not(lyingOn(Agent,Physobj))]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',64).
% !{page}% HoldsAt(BookIsOpenTo(Book1,page),0).
% initially(
%    neg(
%       bookIsOpenTo(book1,Page))).
initially not bookIsOpenTo(book1, Page).
 %  initial_state([not(bookIsOpenTo(book1,Page))]).
 %  "% =================================".


% [physobj1,physobj2]
% !(physobj1=Book1 & physobj2=BookSupport1) ->
% !HoldsAt(On(physobj1, physobj2),0).
% '->'(
%    ';'(
%       not(
%          equals(Physobj1,book1)), 
%       not(
%          equals(Physobj2,bookSupport1))), 
%    initially(
%       neg(
%          on(Physobj1,Physobj2)))).
if not equals(book1, Physobj1);not equals(bookSupport1, Physobj2)then initially not on(Physobj1, Physobj2).

 /*   reactive_rule([  (not(equals(book1, Physobj1));not(equals(bookSupport1, Physobj2)))
                    ],
                    [initially(not(on(Physobj1, Physobj2)))]).
 */
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',68).
% HoldsAt(Dressed(Reader1),0).
% initially(
%    dressed(reader1)).
initially dressed(reader1).
 %  initial_state([dressed(reader1)]).
 %  "% =================================".


% HoldsAt(Awake(Reader1),0).
% initially(
%    awake(reader1)).
initially awake(reader1).
 %  initial_state([awake(reader1)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',70).
% HoldsAt(Sleep3(Reader1),0).
% initially(
%    sleep3(reader1)).
initially sleep3(reader1).
 %  initial_state([sleep3(reader1)]).
 %  "% =================================".


% HoldsAt(Standing(Reader1),0).
% initially(
%    standing(reader1)).
initially standing(reader1).
 %  initial_state([standing(reader1)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',72).
% HoldsAt(DoorUnlocked(Door1),0).
% initially(
%    doorUnlocked(door1)).
initially doorUnlocked(door1).
 %  initial_state([doorUnlocked(door1)]).
 %  "% =================================".


% HoldsAt(DoorIsOpen(Door1),0).
% initially(
%    doorIsOpen(door1)).
initially doorIsOpen(door1).
 %  initial_state([doorIsOpen(door1)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',74).
% HoldsAt(At(Reader1,Room0),0).
% initially(
%    at(reader1,room0)).
initially loc_at(reader1, room0).
 %  initial_state([loc_at(reader1,room0)]).
 %  "% =================================".


% HoldsAt(At(Chair1,Room1),0).
% initially(
%    at(chair1,room1)).
initially loc_at(chair1, room1).
 %  initial_state([loc_at(chair1,room1)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',76).
% HoldsAt(At(Book1,Room1),0).
% initially(
%    at(book1,room1)).
initially loc_at(book1, room1).
 %  initial_state([loc_at(book1,room1)]).
 %  "% =================================".


% HoldsAt(On(Book1,BookSupport1),0).
% initially(
%    on(book1,bookSupport1)).
initially on(book1, bookSupport1).
 %  initial_state([on(book1,bookSupport1)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',78).
% [object]
 % !HoldsAt(See(Reader1,object),0).
% initially(
%    neg(
%       see(reader1,Object))).
initially not see(reader1, Object).
 %  initial_state([not(see(reader1,Object))]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',80).
%; narrative


% Happens(WalkThroughDoor12(Reader1,Door1),0).
% happens(
%    walkThroughDoor12(reader1,door1), 
%    start).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',80).
observe(at(walkThroughDoor12(reader1,door1),start)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',82).
% Happens(TakeOffOf(Reader1,Book1,BookSupport1),1).
% happens(
%    takeOffOf(reader1,book1,bookSupport1), 
%    start+1).
observe takeOffOf(reader1, book1, bookSupport1)at start+1.
 %  observe([takeOffOf(reader1,book1,bookSupport1)],start+1).
 %  "% =================================".


% Happens(SitOn(Reader1,Chair1),2).
% happens(
%    sitOn(reader1,chair1), 
%    start+2).
observe sitOn(reader1, chair1)at start+2.
 %  observe([sitOn(reader1,chair1)],start+2).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',84).
% Happens(BookOpenTo(Reader1,Book1,1),3).
% happens(
%    bookOpenTo(reader1,book1,1), 
%    start+3).
observe bookOpenTo(reader1, book1, 1)at start+3.
 %  observe([bookOpenTo(reader1,book1,1)],start+3).
 %  "% =================================".


% Happens(LookAt(Reader1,Book1),4).
% happens(
%    lookAt(reader1,book1), 
%    start+4).
observe lookAt(reader1, book1)at start+4.
 %  observe([lookAt(reader1,book1)],start+4).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',86).
% Happens(Read(Reader1,Book1,Content1),5).
% happens(
%    read(reader1,book1,content1), 
%    start+5).
observe read(reader1, book1, content1)at start+5.
 %  observe([read(reader1,book1,content1)],start+5).
 %  "% =================================".


% Happens(ThinkAbout(Reader1,Content1),6).
% happens(
%    thinkAbout(reader1,content1), 
%    start+6).
observe thinkAbout(reader1, content1)at start+6.
 %  observe([thinkAbout(reader1,content1)],start+6).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',88).
% Happens(Understand(Reader1,Content1),7).
% happens(
%    understand(reader1,content1), 
%    start+7).
observe understand(reader1, content1)at start+7.
 %  observe([understand(reader1,content1)],start+7).
 %  "% =================================".


% Happens(BookTurnPageTo(Reader1,Book1,2),8).
% happens(
%    bookTurnPageTo(reader1,book1,2), 
%    start+8).
observe bookTurnPageTo(reader1, book1, 2)at start+8.
 %  observe([bookTurnPageTo(reader1,book1,2)],start+8).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',90).
% Happens(BookTurnPageTo(Reader1,Book1,3),9).
% happens(
%    bookTurnPageTo(reader1,book1,3), 
%    start+9).
observe bookTurnPageTo(reader1, book1, 3)at start+9.
 %  observe([bookTurnPageTo(reader1,book1,3)],start+9).
 %  "% =================================".


% Happens(BookClose(Reader1,Book1),10).
% happens(
%    bookClose(reader1,book1), 
%    start+10).
observe bookClose(reader1, book1)at start+10.
 %  observe([bookClose(reader1,book1)],start+10).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',92).
% Happens(RiseFrom(Reader1,Chair1),11).
% happens(
%    riseFrom(reader1,chair1), 
%    start+11).
observe riseFrom(reader1, chair1)at start+11.
 %  observe([riseFrom(reader1,chair1)],start+11).
 %  "% =================================".


% Happens(PlaceOn(Reader1,Book1,BookSupport1),12).
% happens(
%    placeOn(reader1,book1,bookSupport1), 
%    start+12).
observe placeOn(reader1, book1, bookSupport1)at start+12.
 %  observe([placeOn(reader1,book1,bookSupport1)],start+12).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',94).
% Happens(WalkThroughDoor21(Reader1,Door1),13).
% happens(
%    walkThroughDoor21(reader1,door1), 
%    start+13).
observe walkThroughDoor21(reader1, door1)at start+13.
 %  observe([walkThroughDoor21(reader1,door1)],start+13).
 %  "% =================================".

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',96).
% range time 0 14
% range(time,0,14).
range(time,0,14).

% range page 1 3
% range(page,1,3).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',96).
range(page,1,3).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',98).
% range offset 0 0
% range(offset,0,0).
range(offset,0,0).

% range diameter 0 0
% range(diameter,0,0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',98).
range(diameter,0,0).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e',101).
% completion Happens
% completion(happens).
completion(happens).
%; End of file.
% translate: ending  File: /pack/logicmoo_ec/ext/ec_sources/ecnet/ReadingABook.e.lps 
