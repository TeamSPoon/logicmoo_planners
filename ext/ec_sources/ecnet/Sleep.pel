:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(pfc).
% Tue, 06 Oct 2020 05:02:08 GMT
 %  loading(load_e_pl,'/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e').
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; The Sleep representation deals with the activity of sleeping and
%; body posture.
%; It is similar to the finite automaton representation of sleep
%; used in ThoughtTreasure \fullcite[chap. 7]{Mueller:1998}.
%;
%; @book{Mueller:1998,
%;   author = "Erik T. Mueller",
%;   year = "1998",
%;   title = "Natural Language Processing with \uppercase{T}hought\uppercase{T}reasure",
%;   address = "New York",
%;   publisher = "Signiform",
%; }
%;
%; sleep
%; agent wakes up.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:27
% event WakeUp(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
event(wakeUp(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
actions([wakeUp/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
actions([wakeUp/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
meta_argtypes(wakeUp(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
meta_argtypes(wakeUp(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
mpred_prop(wakeUp(agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
mpred_prop(wakeUp(agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
meta_argtypes(wakeUp(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
meta_argtypes(wakeUp(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:29
%; agent gets tired.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:30
% event GetTired(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
event(getTired(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
actions([getTired/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
actions([getTired/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
meta_argtypes(getTired(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
meta_argtypes(getTired(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
mpred_prop(getTired(agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
mpred_prop(getTired(agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
meta_argtypes(getTired(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
meta_argtypes(getTired(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:32
%; agent falls asleep.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:33
% event FallAsleep(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
event(fallAsleep(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
actions([fallAsleep/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
actions([fallAsleep/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
meta_argtypes(fallAsleep(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
meta_argtypes(fallAsleep(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
mpred_prop(fallAsleep(agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
mpred_prop(fallAsleep(agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
meta_argtypes(fallAsleep(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
meta_argtypes(fallAsleep(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:35
%; agent is asleep.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:36
% fluent Sleep0(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
fluent(sleep0(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
fluents([sleep0/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
fluents([sleep0/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
meta_argtypes(sleep0(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
meta_argtypes(sleep0(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
mpred_prop(sleep0(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
mpred_prop(sleep0(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
meta_argtypes(sleep0(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
meta_argtypes(sleep0(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
%; agent is awake and in bed.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:38
% fluent Sleep1(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
fluent(sleep1(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
fluents([sleep1/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
fluents([sleep1/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
meta_argtypes(sleep1(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
meta_argtypes(sleep1(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
mpred_prop(sleep1(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
mpred_prop(sleep1(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
meta_argtypes(sleep1(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
meta_argtypes(sleep1(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
%; agent is awake, out of bed, and undressed.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:40
% fluent Sleep2(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
fluent(sleep2(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
fluents([sleep2/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
fluents([sleep2/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
meta_argtypes(sleep2(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
meta_argtypes(sleep2(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
mpred_prop(sleep2(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
mpred_prop(sleep2(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
meta_argtypes(sleep2(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
meta_argtypes(sleep2(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
%; agent is awake and dressed.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:42
% fluent Sleep3(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
fluent(sleep3(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
fluents([sleep3/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
fluents([sleep3/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
meta_argtypes(sleep3(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
meta_argtypes(sleep3(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
mpred_prop(sleep3(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
mpred_prop(sleep3(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
meta_argtypes(sleep3(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
meta_argtypes(sleep3(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
%; agent is tired and dressed.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:44
% fluent Sleep4(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
fluent(sleep4(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
fluents([sleep4/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
fluents([sleep4/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
meta_argtypes(sleep4(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
meta_argtypes(sleep4(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
mpred_prop(sleep4(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
mpred_prop(sleep4(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
meta_argtypes(sleep4(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
meta_argtypes(sleep4(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
%; agent is tired and undressed.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:46
% fluent Sleep5(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
fluent(sleep5(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
fluents([sleep5/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
fluents([sleep5/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
meta_argtypes(sleep5(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
meta_argtypes(sleep5(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
mpred_prop(sleep5(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
mpred_prop(sleep5(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
meta_argtypes(sleep5(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
meta_argtypes(sleep5(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
%; agent is in bed, waiting to fall asleep.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:48
% fluent Sleep6(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
fluent(sleep6(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
fluents([sleep6/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
fluents([sleep6/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
meta_argtypes(sleep6(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
meta_argtypes(sleep6(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
mpred_prop(sleep6(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
mpred_prop(sleep6(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
meta_argtypes(sleep6(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
meta_argtypes(sleep6(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:50
%; At any time, an agent is in one of seven sleep states:

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:51
% xor Sleep0, Sleep1, Sleep2, Sleep3, Sleep4, Sleep5, Sleep6
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:52

 /*  fix_axiom_head(Time) ->
       [  (==>)xor[sleep0, sleep1, sleep2, sleep3, sleep4, sleep5, sleep6],
          (->),
         holds_at((==>)xor[sleep0, sleep1, sleep2, sleep3, sleep4, sleep5, sleep6],
                  Time)
       ].
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:52
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:52
holds_at(==>xor[sleep0,sleep1,sleep2,sleep3,sleep4,sleep5,sleep6],
	 Time1).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:52
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:52
l_int(holds(==>xor[sleep0,sleep1,sleep2,sleep3,sleep4,sleep5,sleep6],
	    Time1),
      []).
%; constraints
%; agent is asleep.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:56
% fluent Asleep(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
fluent(asleep(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
fluents([asleep/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
fluents([asleep/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
meta_argtypes(asleep(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
meta_argtypes(asleep(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
mpred_prop(asleep(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
mpred_prop(asleep(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
meta_argtypes(asleep(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
meta_argtypes(asleep(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
%; agent is awake.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:58
% fluent Awake(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
fluent(awake(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
fluents([awake/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
fluents([awake/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
meta_argtypes(awake(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
meta_argtypes(awake(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
mpred_prop(awake(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
mpred_prop(awake(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
meta_argtypes(awake(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
meta_argtypes(awake(agent)).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
% noninertial Asleep
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:60
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:60
noninertial(asleep).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:60
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:60
noninertial(asleep).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:60
% noninertial Awake
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:61
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:61
noninertial(awake).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:61
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:61
noninertial(awake).
%; Sleep0 indicates that the agent is asleep:
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:63
% HoldsAt(Asleep(agent),time) <-> HoldsAt(Sleep0(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:63

 /*  holds_at(asleep(Agent), Time) <->
       holds_at(sleep0(Agent), Time).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:63

 /*  [holds_at, asleep] <->
       [holds_at, sleep0].
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:63
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:63
holds_at(asleep(Agent), Time) ->
    holds_at(sleep0(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:63
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:63
reactive_rule([holds(asleep(Agent),Time)],
	      [holds(sleep0(Agent),Time)]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:63
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:63
holds_at(sleep0(Agent), Time) ->
    holds_at(asleep(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:63
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:63
reactive_rule([holds(sleep0(Agent),Time)],
	      [holds(asleep(Agent),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:65
%; In all other sleep states, the agent is awake:
% [agent,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:67
% HoldsAt(Awake(agent),time) <->
% HoldsAt(Sleep1(agent),time) |
% HoldsAt(Sleep2(agent),time) |
% HoldsAt(Sleep3(agent),time) |
% HoldsAt(Sleep4(agent),time) |
% HoldsAt(Sleep5(agent),time) |
% HoldsAt(Sleep6(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:73

 /*  holds_at(awake(Agent), Time) <->
       (   holds_at(sleep1(Agent), Time)
       ;   holds_at(sleep2(Agent), Time)
       ;   holds_at(sleep3(Agent), Time)
       ;   holds_at(sleep4(Agent), Time)
       ;   holds_at(sleep5(Agent), Time)
       ;   holds_at(sleep6(Agent), Time)
       ).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:73

 /*  [holds_at, awake] <->
       [  (;),
         holds_at,
         sleep1,
          (;),
         holds_at,
         sleep2,
          (;),
         holds_at,
         sleep3,
          (;),
         holds_at,
         sleep4,
          (;),
         holds_at,
         sleep5,
         holds_at,
         sleep6
       ].
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:73
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:73
holds_at(awake(Agent), Time) ->
    (   holds_at(sleep1(Agent), Time)
    ;   holds_at(sleep2(Agent), Time)
    ;   holds_at(sleep3(Agent), Time)
    ;   holds_at(sleep4(Agent), Time)
    ;   holds_at(sleep5(Agent), Time)
    ;   holds_at(sleep6(Agent), Time)
    ).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:73
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:73
 reactive_rule([holds(awake(Agent), Time)],
                 [  (at(sleep1(Agent), Time);at(sleep2(Agent), Time);at(sleep3(Agent), Time);at(sleep4(Agent), Time);at(sleep5(Agent), Time);at(sleep6(Agent), Time))
                 ]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:73
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:73
holds_at(sleep1(Agent), Time);holds_at(sleep2(Agent), Time);holds_at(sleep3(Agent), Time);holds_at(sleep4(Agent), Time);holds_at(sleep5(Agent), Time);holds_at(sleep6(Agent), Time) ->
    holds_at(awake(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:73
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:73
 reactive_rule([  (at(sleep1(Agent), Time);at(sleep2(Agent), Time);at(sleep3(Agent), Time);at(sleep4(Agent), Time);at(sleep5(Agent), Time);at(sleep6(Agent), Time))
                 ],
                 [holds(awake(Agent), Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:75
%; A number of axioms are used to specify the transitions of
%; a finite automaton.
%;--
%; Waking up causes a transition from Sleep0
%; to Sleep1:
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:81
% Terminates(WakeUp(agent),Sleep0(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:81

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(wakeUp(Agent), sleep0(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:81
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:81
terminates(wakeUp(Wakeup),sleep0(Wakeup),Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:81
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:81
terminated(happens(wakeUp(Wakeup),Maptime,Happens),
	   sleep0(Wakeup),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:83
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:83
% Initiates(WakeUp(agent),Sleep1(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:83

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(wakeUp(Agent), sleep1(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:83
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:83
initiates(wakeUp(Wakeup),sleep1(Wakeup),Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:83
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:83
initiated(happens(wakeUp(Wakeup),Maptime,Happens),
	  sleep1(Wakeup),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:85
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:85
% Happens(WakeUp(agent),time) -> HoldsAt(Sleep0(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:85
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:85
happens(wakeUp(Agent), Time) ->
    holds_at(sleep0(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:85
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:85
reactive_rule([happens(wakeUp(Agent),Time)],
	      [holds(sleep0(Agent),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:87
%;--
%; Getting out of bed causes a transition from Sleep1
%; to Sleep2:
% [agent,bed,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:91
% Terminates(RiseFrom(agent,bed),Sleep1(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:91

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(riseFrom(Agent, Bed),
                     sleep1(Agent),
                     Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:91
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:91
terminates(riseFrom(Sleep1,Risefrom),
	   sleep1(Sleep1),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:91
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:91
terminated(happens(riseFrom(Sleep1,Risefrom),
		   Maptime,
		   Happens),
	   sleep1(Sleep1),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:93
% [agent,bed,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:93
% Initiates(RiseFrom(agent,bed),Sleep2(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:93

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(riseFrom(Agent, Bed),
                    sleep2(Agent),
                    Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:93
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:93
initiates(riseFrom(Sleep2,Risefrom),
	  sleep2(Sleep2),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:93
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:93
initiated(happens(riseFrom(Sleep2,Risefrom),
		  Maptime,
		  Happens),
	  sleep2(Sleep2),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:95
% [agent,bed,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:96
% Happens(RiseFrom(agent,bed),time) -> HoldsAt(Sleep1(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:96
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:96
happens(riseFrom(Agent, Bed), Time) ->
    holds_at(sleep1(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:96
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:96
reactive_rule([happens(riseFrom(Agent,Bed),Time)],
	      [holds(sleep1(Agent),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:98
%;--
%; Getting dressed causes a transition from Sleep2
%; to Sleep3, the normal state of awakeness:
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:102
% Terminates(GetDressed(agent),Sleep2(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:102

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(getDressed(Agent), sleep2(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:102
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:102
terminates(getDressed(Getdressed),
	   sleep2(Getdressed),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:102
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:102
terminated(happens(getDressed(Getdressed),
		   Maptime,
		   Happens),
	   sleep2(Getdressed),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:104
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:104
% Initiates(GetDressed(agent),Sleep3(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:104

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(getDressed(Agent), sleep3(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:104
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:104
initiates(getDressed(Getdressed),
	  sleep3(Getdressed),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:104
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:104
initiated(happens(getDressed(Getdressed),
		  Maptime,
		  Happens),
	  sleep3(Getdressed),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:106
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:106
% Happens(GetDressed(agent),time) -> HoldsAt(Sleep2(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:106
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:106
happens(getDressed(Agent), Time) ->
    holds_at(sleep2(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:106
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:106
reactive_rule([happens(getDressed(Agent),Time)],
	      [holds(sleep2(Agent),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:108
%;--
%; Getting tired causes a transition from Sleep3
%; to Sleep4:
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:112
% Terminates(GetTired(agent),Sleep3(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:112

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(getTired(Agent), sleep3(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:112
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:112
terminates(getTired(Gettired),
	   sleep3(Gettired),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:112
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:112
terminated(happens(getTired(Gettired),
		   Maptime,
		   Happens),
	   sleep3(Gettired),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:114
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:114
% Initiates(GetTired(agent),Sleep4(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:114

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(getTired(Agent), sleep4(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:114
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:114
initiates(getTired(Gettired),
	  sleep4(Gettired),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:114
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:114
initiated(happens(getTired(Gettired),Maptime,Happens),
	  sleep4(Gettired),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:116
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:116
% Happens(GetTired(agent),time) -> HoldsAt(Sleep3(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:116
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:116
happens(getTired(Agent), Time) ->
    holds_at(sleep3(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:116
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:116
reactive_rule([happens(getTired(Agent),Time)],
	      [holds(sleep3(Agent),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:118
%;--
%; Getting undressed causes a transition from Sleep4
%; to Sleep5:
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:122
% Terminates(GetUndressed(agent),Sleep4(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:122

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(getUndressed(Agent), sleep4(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:122
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:122
terminates(getUndressed(Getundressed),
	   sleep4(Getundressed),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:122
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:122
terminated(happens(getUndressed(Getundressed),
		   Maptime,
		   Happens),
	   sleep4(Getundressed),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:124
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:124
% Initiates(GetUndressed(agent),Sleep5(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:124

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(getUndressed(Agent), sleep5(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:124
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:124
initiates(getUndressed(Getundressed),
	  sleep5(Getundressed),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:124
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:124
initiated(happens(getUndressed(Getundressed),
		  Maptime,
		  Happens),
	  sleep5(Getundressed),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:126
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:126
% Happens(GetUndressed(agent),time) -> HoldsAt(Sleep4(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:126
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:126
happens(getUndressed(Agent), Time) ->
    holds_at(sleep4(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:126
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:126
reactive_rule([happens(getUndressed(Agent),Time)],
	      [holds(sleep4(Agent),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:128
%;--
%; Lying on a bed causes a transition from Sleep5
%; to Sleep6:
% [agent,bed,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:132
% Terminates(LieOn(agent,bed),Sleep5(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:132

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(lieOn(Agent, Bed), sleep5(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:132
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:132
terminates(lieOn(Sleep5,Lieon),
	   sleep5(Sleep5),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:132
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:132
terminated(happens(lieOn(Sleep5,Lieon),
		   Maptime,
		   Happens),
	   sleep5(Sleep5),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:134
% [agent,bed,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:134
% Initiates(LieOn(agent,bed),Sleep6(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:134

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(lieOn(Agent, Bed), sleep6(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:134
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:134
initiates(lieOn(Sleep6,Lieon),
	  sleep6(Sleep6),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:134
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:134
initiated(happens(lieOn(Sleep6,Lieon),
		  Maptime,
		  Happens),
	  sleep6(Sleep6),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:136
% [agent,bed,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:136
% Happens(LieOn(agent,bed),time) -> HoldsAt(Sleep5(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:136
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:136
happens(lieOn(Agent, Bed), Time) ->
    holds_at(sleep5(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:136
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:136
reactive_rule([happens(lieOn(Agent,Bed),Time)],
	      [holds(sleep5(Agent),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:138
%;--
%; Falling asleep causes a transition from Sleep6
%; to Sleep0:
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:142
% Terminates(FallAsleep(agent),Sleep6(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:142

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(fallAsleep(Agent), sleep6(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:142
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:142
terminates(fallAsleep(Fallasleep),
	   sleep6(Fallasleep),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:142
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:142
terminated(happens(fallAsleep(Fallasleep),
		   Maptime,
		   Happens),
	   sleep6(Fallasleep),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:144
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:144
% Initiates(FallAsleep(agent),Sleep0(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:144

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(fallAsleep(Agent), sleep0(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:144
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:144
initiates(fallAsleep(Fallasleep),
	  sleep0(Fallasleep),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:144
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:144
initiated(happens(fallAsleep(Fallasleep),
		  Maptime,
		  Happens),
	  sleep0(Fallasleep),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:146
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:146
% Happens(FallAsleep(agent),time) -> HoldsAt(Sleep6(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:146
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:146
happens(fallAsleep(Agent), Time) ->
    holds_at(sleep6(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:146
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:146
reactive_rule([happens(fallAsleep(Agent),Time)],
	      [holds(sleep6(Agent),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:148
%;--
%; agent acts on being in state Sleep5.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:151
% fluent ActOnSleep5(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
fluent(actOnSleep5(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
fluents([actOnSleep5/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
fluents([actOnSleep5/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
meta_argtypes(actOnSleep5(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
meta_argtypes(actOnSleep5(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
mpred_prop(actOnSleep5(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
mpred_prop(actOnSleep5(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
meta_argtypes(actOnSleep5(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
meta_argtypes(actOnSleep5(agent)).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
% noninertial ActOnSleep5
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:153
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:153
noninertial(actOnSleep5).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:153
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:153
noninertial(actOnSleep5).
%; We reduce the number of models by asserting that
%; an agent only acts on being in state Sleep5 while in
%; that state:
% [agent,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:158
% !HoldsAt(Sleep5(agent),time) ->
% !HoldsAt(ActOnSleep5(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:159
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:159
holds_at(neg(sleep5(Agent)), Time) ->
    holds_at(neg(actOnSleep5(Agent)), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:159
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:159
reactive_rule([holds(not(sleep5(Agent)),Time)],
	      [holds(not(actOnSleep5(Agent)),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:161
%; Undressed is like IntentionToPlay
%; ActOnSleep5 is like ActOnIntentionToPlay
%; A trigger axiom states that if an agent is in state Sleep5,
%; the agent acts on this state, the agent is in a room, and
%; a bed is at the room, the agent lies on the bed:
% [agent,room,bed,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:168
% HoldsAt(Sleep5(agent),time) &
% HoldsAt(ActOnSleep5(agent),time) &
% HoldsAt(At(agent,room),time) &
% HoldsAt(At(bed,room),time) ->
% Happens(LieOn(agent,bed),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:172
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:172
holds_at(sleep5(Agent), Time), holds_at(actOnSleep5(Agent), Time), holds_at(at(Agent, Room), Time), holds_at(at(Bed, Room), Time) ->
    happens(lieOn(Agent, Bed), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:172
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:172
reactive_rule([ holds(sleep5(Agent),Time),
		holds(actOnSleep5(Agent),Time),
		holds(loc_at(Agent,Room),Time),
		holds(loc_at(Bed,Room),Time)
	      ],
	      [happens(lieOn(Agent,Bed),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:174
%; A precondition axiom states that for
%; an agent to lie on a bed,
%; the agent must be in state Sleep5,
%; the agent must act on this state, and
%; there must be a room such that
%; the agent is in the room and the bed is in the room:
% [agent,bed,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:181
% Happens(LieOn(agent,bed),time) ->
% HoldsAt(Sleep5(agent),time) &
% HoldsAt(ActOnSleep5(agent),time) &
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:184
% {room}% 
%  HoldsAt(At(agent,room),time) &
%  HoldsAt(At(bed,room),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186

 /*  exists([Room],
    happens(lieOn(Agent, Bed), Time) ->
       holds_at(sleep5(Agent), Time),
       holds_at(actOnSleep5(Agent), Time),
       holds_at(at(Agent, Room), Time),
       holds_at(at(Bed, Room), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186

 /*  not(happens(lieOn(Agent, Bed), Time)) :-
       (   not(holds_at(sleep5(Agent), Time))
       ;   not(holds_at(actOnSleep5(Agent), Time))
       ;   not(holds_at(at(Agent, Exists_Room), Time))
       ;   not(holds_at(at(Bed, Exists_Room), Time))
       ),
       some(Exists_Room, '$kolem_Fn_103'(Agent, Bed, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186

 /*  [(holds_at(neg(sleep5(Agent)), Time);holds_at(neg(actOnSleep5(Agent)), Time);holds_at(neg(at(Agent, Exists_Room)), Time);holds_at(neg(at(Bed, Exists_Room)), Time)), some(Exists_Room, '$kolem_Fn_103'(Agent, Bed, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(lieOn(Agent, Bed), Time))).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
(holds_at(neg(sleep5(Sleep5)), Time5);holds_at(neg(actOnSleep5(Sleep5)), Time5);holds_at(neg(at(Sleep5, Location)), Time5);holds_at(neg(at(Lieon, Location)), Time5)), some(Location, '$kolem_Fn_103'(Sleep5, Lieon, Time5)) ->
    not(happens(lieOn(Sleep5, Lieon), Time5)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
 reactive_rule([  (at(not(sleep5(Sleep5)), Time5);at(not(actOnSleep5(Sleep5)), Time5);at(not(loc_at(Sleep5, Location)), Time5);at(not(loc_at(Lieon, Location)), Time5)),
                   some(Location,
                        '$kolem_Fn_103'(Sleep5, Lieon, Time5))
                 ],
                 [not(happens(lieOn(Sleep5, Lieon), Time5))]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186

 /*  holds_at(sleep5(Agent), Time) :-
       happens(lieOn(Agent, Bed), Time),
       some(Exists_Room, '$kolem_Fn_103'(Agent, Bed, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186

 /*  [happens(lieOn(Agent, Bed), Time), some(Exists_Room, '$kolem_Fn_103'(Agent, Bed, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(sleep5(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
happens(lieOn(Kolem_Fn_103P_Num3_V, Lieon10), Maptime), some(_, '$kolem_Fn_103'(Kolem_Fn_103P_Num3_V, Lieon10, Maptime)) ->
    holds_at(sleep5(Kolem_Fn_103P_Num3_V), Maptime).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
reactive_rule([ happens(lieOn(Kolem_Fn_103P_Num3_V,Lieon10),
			Maptime),
		some(_,
		     '$kolem_Fn_103'(Kolem_Fn_103P_Num3_V,
				     Lieon10,
				     Maptime))
	      ],
	      [holds(sleep5(Kolem_Fn_103P_Num3_V),Maptime)]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186

 /*  holds_at(actOnSleep5(Agent), Time) :-
       happens(lieOn(Agent, Bed), Time),
       some(Exists_Room, '$kolem_Fn_103'(Agent, Bed, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186

 /*  [happens(lieOn(Agent, Bed), Time), some(Exists_Room, '$kolem_Fn_103'(Agent, Bed, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(actOnSleep5(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
happens(lieOn(Kolem_Fn_103P_Num3_V14, Lieon13), Maptime12), some(_, '$kolem_Fn_103'(Kolem_Fn_103P_Num3_V14, Lieon13, Maptime12)) ->
    holds_at(actOnSleep5(Kolem_Fn_103P_Num3_V14), Maptime12).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
reactive_rule([ happens(lieOn(Kolem_Fn_103P_Num3_V14,
			      Lieon13),
			Maptime12),
		some(_,
		     '$kolem_Fn_103'(Kolem_Fn_103P_Num3_V14,
				     Lieon13,
				     Maptime12))
	      ],
	      [ holds(actOnSleep5(Kolem_Fn_103P_Num3_V14),
		      Maptime12)
	      ]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186

 /*  holds_at(at(Agent, Exists_Room), Time) :-
       happens(lieOn(Agent, Bed), Time),
       some(Exists_Room, '$kolem_Fn_103'(Agent, Bed, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186

 /*  [happens(lieOn(Agent, Bed), Time), some(Exists_Room, '$kolem_Fn_103'(Agent, Bed, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Agent, Exists_Room), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
happens(lieOn(Kolem_Fn_103P_Num3_V18, Lieon17), Maptime15), some(Location16, '$kolem_Fn_103'(Kolem_Fn_103P_Num3_V18, Lieon17, Maptime15)) ->
    holds_at(at(Kolem_Fn_103P_Num3_V18, Location16),
             Maptime15).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
reactive_rule([ happens(lieOn(Kolem_Fn_103P_Num3_V18,
			      Lieon17),
			Maptime15),
		some(Location16,
		     '$kolem_Fn_103'(Kolem_Fn_103P_Num3_V18,
				     Lieon17,
				     Maptime15))
	      ],
	      [ holds(loc_at(Kolem_Fn_103P_Num3_V18,
			     Location16),
		      Maptime15)
	      ]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186

 /*  holds_at(at(Bed, Exists_Room), Time) :-
       happens(lieOn(Agent, Bed), Time),
       some(Exists_Room, '$kolem_Fn_103'(Agent, Bed, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186

 /*  [happens(lieOn(Agent, Bed), Time), some(Exists_Room, '$kolem_Fn_103'(Agent, Bed, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Bed, Exists_Room), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
happens(lieOn(Kolem_Fn_103P_Num3_V22, Lieon21), Maptime19), some(Location20, '$kolem_Fn_103'(Kolem_Fn_103P_Num3_V22, Lieon21, Maptime19)) ->
    holds_at(at(Lieon21, Location20), Maptime19).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
reactive_rule([ happens(lieOn(Kolem_Fn_103P_Num3_V22,
			      Lieon21),
			Maptime19),
		some(Location20,
		     '$kolem_Fn_103'(Kolem_Fn_103P_Num3_V22,
				     Lieon21,
				     Maptime19))
	      ],
	      [ holds(loc_at(Lieon21,Location20),
		      Maptime19)
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:188
%; (body) posture
%; agent lies on physobj.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:191
% event LieOn(agent,physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
event(lieOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
actions([lieOn/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
actions([lieOn/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
meta_argtypes(lieOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
meta_argtypes(lieOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
mpred_prop(lieOn(agent,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
mpred_prop(lieOn(agent,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
meta_argtypes(lieOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
meta_argtypes(lieOn(agent,physobj)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:193
%; agent sits on physobj.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:194
% event SitOn(agent,physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
event(sitOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
actions([sitOn/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
actions([sitOn/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
meta_argtypes(sitOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
meta_argtypes(sitOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
mpred_prop(sitOn(agent,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
mpred_prop(sitOn(agent,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
meta_argtypes(sitOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
meta_argtypes(sitOn(agent,physobj)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:196
% [agent,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:197
% Happens(SitOn(agent,physobj),time) ->
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:198
% {location}% 
%  HoldsAt(At(agent,location),time) &
%  HoldsAt(At(physobj,location),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200

 /*  exists([Location],
    happens(sitOn(Agent, Physobj), Time) ->
       holds_at(at(Agent, Location), Time),
       holds_at(at(Physobj, Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200

 /*  not(happens(sitOn(Agent, Physobj), Time)) :-
       (   not(holds_at(at(Agent, Exists_Location), Time))
       ;   not(holds_at(at(Physobj, Exists_Location), Time))
       ),
       some(Exists_Location,
            '$kolem_Fn_104'(Agent, Physobj, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200

 /*  [(holds_at(neg(at(Agent, Exists_Location)), Time);holds_at(neg(at(Physobj, Exists_Location)), Time)), some(Exists_Location, '$kolem_Fn_104'(Agent, Physobj, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(sitOn(Agent, Physobj), Time))).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200
(holds_at(neg(at(Kolem_Fn_104P_Num3_V, Location5)), Time6);holds_at(neg(at(Siton, Location5)), Time6)), some(Location5, '$kolem_Fn_104'(Kolem_Fn_104P_Num3_V, Siton, Time6)) ->
    not(happens(sitOn(Kolem_Fn_104P_Num3_V, Siton), Time6)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200
 reactive_rule([  (at(not(loc_at(Kolem_Fn_104P_Num3_V, Location5)), Time6);at(not(loc_at(Siton, Location5)), Time6)),
                   some(Location5,
                        '$kolem_Fn_104'(Kolem_Fn_104P_Num3_V,
                                        Siton,
                                        Time6))
                 ],
                 [ not(happens(sitOn(Kolem_Fn_104P_Num3_V, Siton),
                               Time6))
                 ]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200

 /*  holds_at(at(Agent, Exists_Location), Time) :-
       happens(sitOn(Agent, Physobj), Time),
       some(Exists_Location,
            '$kolem_Fn_104'(Agent, Physobj, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200

 /*  [happens(sitOn(Agent, Physobj), Time), some(Exists_Location, '$kolem_Fn_104'(Agent, Physobj, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Agent, Exists_Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200
happens(sitOn(Kolem_Fn_104P_Num3_V12, Siton11), Maptime), some(Location10, '$kolem_Fn_104'(Kolem_Fn_104P_Num3_V12, Siton11, Maptime)) ->
    holds_at(at(Kolem_Fn_104P_Num3_V12, Location10), Maptime).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200
reactive_rule([ happens(sitOn(Kolem_Fn_104P_Num3_V12,
			      Siton11),
			Maptime),
		some(Location10,
		     '$kolem_Fn_104'(Kolem_Fn_104P_Num3_V12,
				     Siton11,
				     Maptime))
	      ],
	      [ holds(loc_at(Kolem_Fn_104P_Num3_V12,
			     Location10),
		      Maptime)
	      ]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200

 /*  holds_at(at(Physobj, Exists_Location), Time) :-
       happens(sitOn(Agent, Physobj), Time),
       some(Exists_Location,
            '$kolem_Fn_104'(Agent, Physobj, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200

 /*  [happens(sitOn(Agent, Physobj), Time), some(Exists_Location, '$kolem_Fn_104'(Agent, Physobj, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Physobj, Exists_Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200
happens(sitOn(Kolem_Fn_104P_Num3_V16, Siton15), Maptime13), some(Location14, '$kolem_Fn_104'(Kolem_Fn_104P_Num3_V16, Siton15, Maptime13)) ->
    holds_at(at(Siton15, Location14), Maptime13).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200
reactive_rule([ happens(sitOn(Kolem_Fn_104P_Num3_V16,
			      Siton15),
			Maptime13),
		some(Location14,
		     '$kolem_Fn_104'(Kolem_Fn_104P_Num3_V16,
				     Siton15,
				     Maptime13))
	      ],
	      [ holds(loc_at(Siton15,Location14),
		      Maptime13)
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:202
%; agent rises from physobj.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:203
% event RiseFrom(agent,physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
event(riseFrom(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
actions([riseFrom/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
actions([riseFrom/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
meta_argtypes(riseFrom(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
meta_argtypes(riseFrom(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
mpred_prop(riseFrom(agent,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
mpred_prop(riseFrom(agent,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
meta_argtypes(riseFrom(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
meta_argtypes(riseFrom(agent,physobj)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:205
%; agent is lying on physobj.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:206
% fluent LyingOn(agent,physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
fluent(lyingOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
fluents([lyingOn/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
fluents([lyingOn/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
meta_argtypes(lyingOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
meta_argtypes(lyingOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
mpred_prop(lyingOn(agent,physobj),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
mpred_prop(lyingOn(agent,physobj),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
meta_argtypes(lyingOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
meta_argtypes(lyingOn(agent,physobj)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
%; agent is sitting on physobj.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:208
% fluent SittingOn(agent,physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
fluent(sittingOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
fluents([sittingOn/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
fluents([sittingOn/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
meta_argtypes(sittingOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
meta_argtypes(sittingOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
mpred_prop(sittingOn(agent,physobj),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
mpred_prop(sittingOn(agent,physobj),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
meta_argtypes(sittingOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
meta_argtypes(sittingOn(agent,physobj)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
%; agent is standing.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:210
% fluent Standing(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
fluent(standing(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
fluents([standing/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
fluents([standing/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
meta_argtypes(standing(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
meta_argtypes(standing(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
mpred_prop(standing(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
mpred_prop(standing(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
meta_argtypes(standing(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
meta_argtypes(standing(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:212
%; agent is lying down.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:213
% fluent Lying(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
fluent(lying(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
fluents([lying/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
fluents([lying/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
meta_argtypes(lying(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
meta_argtypes(lying(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
mpred_prop(lying(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
mpred_prop(lying(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
meta_argtypes(lying(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
meta_argtypes(lying(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
%; agent is sitting.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:215
% fluent Sitting(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
fluent(sitting(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
fluents([sitting/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
fluents([sitting/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
meta_argtypes(sitting(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
meta_argtypes(sitting(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
mpred_prop(sitting(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
mpred_prop(sitting(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
meta_argtypes(sitting(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
meta_argtypes(sitting(agent)).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
% noninertial Lying
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:217
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:217
noninertial(lying).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:217
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:217
noninertial(lying).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:217
% noninertial Sitting
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:218
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:218
noninertial(sitting).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:218
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:218
noninertial(sitting).
%; At any time, an agent is either lying, sitting, or standing:

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:220
% xor Lying, Sitting, Standing
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:221

 /*  fix_axiom_head(Time) ->
       [  (==>)xor[lying, sitting, standing],
          (->),
         holds_at((==>)xor[lying, sitting, standing], Time)
       ].
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:221
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:221
holds_at((==>)xor[lying,sitting,standing],Time1).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:221
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:221
l_int(holds((==>)xor[lying,sitting,standing],Time1),[]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:222
% [agent,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:223
% HoldsAt(LyingOn(agent,physobj),time) ->
% HoldsAt(Lying(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:224
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:224
holds_at(lyingOn(Agent, Physobj), Time) ->
    holds_at(lying(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:224
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:224
reactive_rule([holds(lyingOn(Agent,Physobj),Time)],
	      [holds(lying(Agent),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:226
% [agent,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:227
% HoldsAt(SittingOn(agent,physobj),time) ->
% HoldsAt(Sitting(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:228
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:228
holds_at(sittingOn(Agent, Physobj), Time) ->
    holds_at(sitting(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:228
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:228
reactive_rule([holds(sittingOn(Agent,Physobj),Time)],
	      [holds(sitting(Agent),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:230
%; State constraints represent that an agent can lie or sit
%; on at most one object at a time:
% [agent,physobj1,physobj2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:233
% HoldsAt(LyingOn(agent,physobj1),time) &
% HoldsAt(LyingOn(agent,physobj2),time) ->
% physobj1=physobj2.
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:235
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:235
holds_at(lyingOn(Agent, Physobj1), Time), holds_at(lyingOn(Agent, Physobj2), Time) ->
    equals(Physobj1, Physobj2).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:235
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:235
reactive_rule([ holds(lyingOn(Agent,Physobj1),Time),
		holds(lyingOn(Agent,Physobj2),Time)
	      ],
	      [equals(Physobj1,Physobj2)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:237
% [agent,physobj1,physobj2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:238
% HoldsAt(SittingOn(agent,physobj1),time) &
% HoldsAt(SittingOn(agent,physobj2),time) ->
% physobj1=physobj2.
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:240
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:240
holds_at(sittingOn(Agent, Physobj1), Time), holds_at(sittingOn(Agent, Physobj2), Time) ->
    equals(Physobj1, Physobj2).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:240
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:240
reactive_rule([ holds(sittingOn(Agent,Physobj1),Time),
		holds(sittingOn(Agent,Physobj2),Time)
	      ],
	      [equals(Physobj1,Physobj2)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:242
%; An effect axiom states that if an agent is standing and
%; lies on a physical object, the agent will be lying on
%; the physical object:
% [agent,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:246
% HoldsAt(Standing(agent),time) ->
% Initiates(LieOn(agent,physobj),
%           LyingOn(agent,physobj),
%           time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:249
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:249
holds_at(standing(Agent), Time) ->
    initiates(lieOn(Agent, Physobj),
              lyingOn(Agent, Physobj),
              Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:249
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:249
reactive_rule([holds(standing(Agent),Time)],
	      [ initiates(lieOn(Agent,Physobj),
			  at(lyingOn(Agent,Physobj),
			     Time))
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:251
%; An effect axiom states that if an agent
%; lies on a physical object, the agent will no longer
%; be standing:
% [agent,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:255
% Terminates(LieOn(agent,physobj),
%            Standing(agent),
%            time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:257

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(lieOn(Agent, Physobj),
                     standing(Agent),
                     Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:257
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:257
terminates(lieOn(Standing,Lieon),
	   standing(Standing),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:257
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:257
terminated(happens(lieOn(Standing,Lieon),
		   Maptime,
		   Happens),
	   standing(Standing),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:259
%; An effect axiom states that if an agent is standing and
%; sits on a physical object, the agent will be sitting on
%; the physical object:
% [agent,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:263
% HoldsAt(Standing(agent),time) ->
% Initiates(SitOn(agent,physobj),
%           SittingOn(agent,physobj),
%           time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:266
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:266
holds_at(standing(Agent), Time) ->
    initiates(sitOn(Agent, Physobj),
              sittingOn(Agent, Physobj),
              Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:266
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:266
reactive_rule([holds(standing(Agent),Time)],
	      [ initiates(sitOn(Agent,Physobj),
			  at(sittingOn(Agent,Physobj),
			     Time))
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:268
%; An effect axiom states that if an agent
%; sits on a physical object, the agent will no longer
%; be standing:
% [agent,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:272
% Terminates(SitOn(agent,physobj),
%            Standing(agent),
%            time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:274

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(sitOn(Agent, Physobj),
                     standing(Agent),
                     Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:274
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:274
terminates(sitOn(Standing,Siton),
	   standing(Standing),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:274
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:274
terminated(happens(sitOn(Standing,Siton),
		   Maptime,
		   Happens),
	   standing(Standing),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:276
%; An effect axiom states that if an agent
%; is sitting or lying on a physical object and
%; the agent rises from the physical object,
%; the agent will be standing:
% [agent,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:281
% (HoldsAt(SittingOn(agent,physobj),time) |
%  HoldsAt(LyingOn(agent,physobj),time)) ->
% Initiates(RiseFrom(agent,physobj),
%           Standing(agent),
%           time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:285
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:285
holds_at(sittingOn(Agent, Physobj), Time);holds_at(lyingOn(Agent, Physobj), Time) ->
    initiates(riseFrom(Agent, Physobj),
              standing(Agent),
              Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:285
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:285
 reactive_rule([  (at(sittingOn(Agent, Physobj), Time);at(lyingOn(Agent, Physobj), Time))
                 ],
                 [ initiates(riseFrom(Agent, Physobj),
                             at(standing(Agent), Time))
                 ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:287
%; An effect axiom states that if an agent is sitting on
%; a physical object and the agent rises from the physical
%; object, the agent will no longer be sitting on the
%; physical object:
% [agent,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:292
% HoldsAt(SittingOn(agent,physobj),time) ->
% Terminates(RiseFrom(agent,physobj),
%            SittingOn(agent,physobj),
%            time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:295
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:295
holds_at(sittingOn(Agent, Physobj), Time) ->
    terminates(riseFrom(Agent, Physobj),
               sittingOn(Agent, Physobj),
               Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:295
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:295
reactive_rule([holds(sittingOn(Agent,Physobj),Time)],
	      [ terminates(riseFrom(Agent,Physobj),
			   at(sittingOn(Agent,Physobj),
			      Time))
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:297
%; An effect axiom states that if an agent is lying on
%; a physical object and the agent rises from the physical
%; object, the agent will no longer be lying on the
%; physical object:
% [agent,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:302
% HoldsAt(LyingOn(agent,physobj),time) ->
% Terminates(RiseFrom(agent,physobj),
%            LyingOn(agent,physobj),
%            time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:305
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:305
holds_at(lyingOn(Agent, Physobj), Time) ->
    terminates(riseFrom(Agent, Physobj),
               lyingOn(Agent, Physobj),
               Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:305
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:305
reactive_rule([holds(lyingOn(Agent,Physobj),Time)],
	      [ terminates(riseFrom(Agent,Physobj),
			   at(lyingOn(Agent,Physobj),
			      Time))
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:307
%; dressing
%; agent gets undressed.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:310
% event GetDressed(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
event(getDressed(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
actions([getDressed/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
actions([getDressed/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
meta_argtypes(getDressed(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
meta_argtypes(getDressed(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
mpred_prop(getDressed(agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
mpred_prop(getDressed(agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
meta_argtypes(getDressed(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
meta_argtypes(getDressed(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
%; agent gets dressed.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:312
% event GetUndressed(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
event(getUndressed(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
actions([getUndressed/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
actions([getUndressed/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
meta_argtypes(getUndressed(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
meta_argtypes(getUndressed(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
mpred_prop(getUndressed(agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
mpred_prop(getUndressed(agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
meta_argtypes(getUndressed(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
meta_argtypes(getUndressed(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
%; agent is dressed.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:314
% fluent Dressed(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
fluent(dressed(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
fluents([dressed/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
fluents([dressed/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
meta_argtypes(dressed(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
meta_argtypes(dressed(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
mpred_prop(dressed(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
mpred_prop(dressed(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
meta_argtypes(dressed(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
meta_argtypes(dressed(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:316
%; Effect axioms deal with getting dressed and undressed:
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:317
% Initiates(GetDressed(agent),Dressed(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:317

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(getDressed(Agent), dressed(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:317
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:317
initiates(getDressed(Getdressed),
	  dressed(Getdressed),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:317
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:317
initiated(happens(getDressed(Getdressed),
		  Maptime,
		  Happens),
	  dressed(Getdressed),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:318
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:318
% Terminates(GetUndressed(agent),Dressed(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:318

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(getUndressed(Agent), dressed(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:318
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:318
terminates(getUndressed(Getundressed),
	   dressed(Getundressed),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:318
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:318
terminated(happens(getUndressed(Getundressed),
		   Maptime,
		   Happens),
	   dressed(Getundressed),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:320
%; End of file.
