:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(pfc).
% Tue, 06 Oct 2020 05:00:27 GMT
 %  loading(load_e_pl,'/pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e').
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; DEV-MUC3-0060
%; Arson
%;
%; @article{Mueller:2004c,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "Understanding script-based stories using commonsense reasoning",
%;   journal = "Cognitive Systems Research",
%;   volume = "5",
%;   number = "4",
%;   pages = "307--340",
%; }
%;

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:24
% ignore SkyOf, GroundOf, Near, Inside, WalkFromTo, RunFromTo
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25

 /*  [] ->
       ta(TaP_Num4_V, tvs1=[], tvs2=[], ignore(skyOf)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
ignore(skyOf).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
ignore(skyOf).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25

 /*  [] ->
       ta(TaP_Num4_V1, tvs1=[], tvs2=[], ignore(groundOf)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
ignore(groundOf).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
ignore(groundOf).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25

 /*  [] ->
       ta(TaP_Num4_V2, tvs1=[], tvs2=[], ignore(near)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
ignore(near).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
ignore(near).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25

 /*  [] ->
       ta(TaP_Num4_V3, tvs1=[], tvs2=[], ignore(inside)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
ignore(inside).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
ignore(inside).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25

 /*  [] ->
       ta(TaP_Num4_V4, tvs1=[], tvs2=[], ignore(walkFromTo)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
ignore(walkFromTo).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
ignore(walkFromTo).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25

 /*  [] ->
       ta(TaP_Num4_V5, tvs1=[], tvs2=[], ignore(runFromTo)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
ignore(runFromTo).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
ignore(runFromTo).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:25
% ignore RollAlong, Diameter, Move, HoldSome, PutInside
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26

 /*  [] ->
       ta(TaP_Num4_V, tvs1=[], tvs2=[], ignore(rollAlong)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26
ignore(rollAlong).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26
ignore(rollAlong).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26

 /*  [] ->
       ta(TaP_Num4_V1, tvs1=[], tvs2=[], ignore(diameter)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26
ignore(diameter).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26
ignore(diameter).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26

 /*  [] ->
       ta(TaP_Num4_V2, tvs1=[], tvs2=[], ignore(move)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26
ignore(move).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26
ignore(move).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26

 /*  [] ->
       ta(TaP_Num4_V3, tvs1=[], tvs2=[], ignore(holdSome)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26
ignore(holdSome).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26
ignore(holdSome).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26

 /*  [] ->
       ta(TaP_Num4_V4, tvs1=[], tvs2=[], ignore(putInside)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26
ignore(putInside).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26
ignore(putInside).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:26
% ignore TakeOutOf, On, DoorUnlock, DoorLock, WalkThroughDoor12
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27

 /*  [] ->
       ta(TaP_Num4_V, tvs1=[], tvs2=[], ignore(takeOutOf)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27
ignore(takeOutOf).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27
ignore(takeOutOf).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27

 /*  [] ->
       ta(TaP_Num4_V1, tvs1=[], tvs2=[], ignore(on)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27
ignore(on).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27
ignore(on).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27

 /*  [] ->
       ta(TaP_Num4_V2, tvs1=[], tvs2=[], ignore(doorUnlock)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27
ignore(doorUnlock).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27
ignore(doorUnlock).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27

 /*  [] ->
       ta(TaP_Num4_V3, tvs1=[], tvs2=[], ignore(doorLock)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27
ignore(doorLock).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27
ignore(doorLock).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27

 /*  [] ->
       ta(TaP_Num4_V4, tvs1=[], tvs2=[], ignore(walkThroughDoor12)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27
ignore(walkThroughDoor12).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27
ignore(walkThroughDoor12).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:27
% ignore WalkThroughDoor21, WalkDownStaircase, WalkUpStaircase
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:28

 /*  [] ->
       ta(TaP_Num4_V, tvs1=[], tvs2=[], ignore(walkThroughDoor21)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:28
ignore(walkThroughDoor21).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:28
ignore(walkThroughDoor21).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:28

 /*  [] ->
       ta(TaP_Num4_V1, tvs1=[], tvs2=[], ignore(walkDownStaircase)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:28
ignore(walkDownStaircase).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:28
ignore(walkDownStaircase).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:28

 /*  [] ->
       ta(TaP_Num4_V2, tvs1=[], tvs2=[], ignore(walkUpStaircase)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:28
ignore(walkUpStaircase).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:28
ignore(walkUpStaircase).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:29
% ignore ThreatenedBy
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:30

 /*  [] ->
       ta(TaP_Num4_V, tvs1=[], tvs2=[], ignore(threatenedBy)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:30
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:30
ignore(threatenedBy).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:30
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:30
ignore(threatenedBy).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:31
% load foundations/Root.e

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:32
% load foundations/EC.e

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:33
% load answers/Mueller2003/Ontology.e
 %  loading(changed,'/pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e').
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; integer
%;

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:13
% sort diameter: integer
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:14
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:14
subsort(diameter,integer).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:14
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:14
subsort(diameter,integer).
%; object

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:17
% sort object
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:18
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:18
sort(object).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:18
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:18
sort(object).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:19
% sort agent: object
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:20
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:20
subsort(agent,object).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:20
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:20
subsort(agent,object).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:21
% sort physobj: object
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:22
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:22
subsort(physobj,object).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:22
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:22
subsort(physobj,object).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:22
% sort bed: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:23
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:23
subsort(bed,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:23
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:23
subsort(bed,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:23
% sort snowflake: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:24
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:24
subsort(snowflake,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:24
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:24
subsort(snowflake,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:24
% sort sky: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:25
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:25
subsort(sky,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:25
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:25
subsort(sky,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:26
% sort stuff: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:27
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:27
subsort(stuff,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:27
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:27
subsort(stuff,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:28
% sort surface: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:29
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:29
subsort(surface,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:29
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:29
subsort(surface,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:29
% sort ground: surface
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:30
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:30
subsort(ground,surface).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:30
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:30
subsort(ground,surface).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:31
% sort snow: stuff
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:32
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:32
subsort(snow,stuff).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:32
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:32
subsort(snow,stuff).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:32
% sort ball
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:33
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:33
sort(ball).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:33
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:33
sort(ball).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:34
% sort food: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:35
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:35
subsort(food,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:35
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:35
subsort(food,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:35
% sort fruit: food
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:36
subsort(fruit,food).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:36
subsort(fruit,food).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:36
% sort orange: fruit
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:37
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:37
subsort(orange,fruit).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:37
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:37
subsort(orange,fruit).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:37
% sort salad: food
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:38
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:38
subsort(salad,food).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:38
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:38
subsort(salad,food).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:39
% sort clothing: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:40
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:40
subsort(clothing,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:40
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:40
subsort(clothing,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:40
% sort scarf: clothing
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:41
subsort(scarf,clothing).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:41
subsort(scarf,clothing).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:41
% sort hat: clothing
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:42
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:42
subsort(hat,clothing).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:42
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:42
subsort(hat,clothing).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:43
% sort vegetablematter: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:44
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:44
subsort(vegetablematter,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:44
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:44
subsort(vegetablematter,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:44
% sort coal: vegetablematter
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:45
subsort(coal,vegetablematter).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:45
subsort(coal,vegetablematter).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:46
% sort bodypart: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:47
subsort(bodypart,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:47
subsort(bodypart,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:47
% sort hand: bodypart
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:48
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:48
subsort(hand,bodypart).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:48
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:48
subsort(hand,bodypart).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:49
% sort papertowels: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:50
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:50
subsort(papertowels,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:50
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:50
subsort(papertowels,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:50
% sort device: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:51
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:51
subsort(device,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:51
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:51
subsort(device,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:51
% sort electronicdevice: device
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:52
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:52
subsort(electronicdevice,device).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:52
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:52
subsort(electronicdevice,device).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:52
% sort lamp: electronicdevice
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:53
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:53
subsort(lamp,electronicdevice).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:53
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:53
subsort(lamp,electronicdevice).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:54
% sort cat: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:55
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:55
subsort(cat,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:55
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:55
subsort(cat,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:55
% sort horse: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:56
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:56
subsort(horse,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:56
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:56
subsort(horse,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:57
% sort weapon: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:58
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:58
subsort(weapon,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:58
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:58
subsort(weapon,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:58
% sort gun: weapon
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:59
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:59
subsort(gun,weapon).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:59
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:59
subsort(gun,weapon).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:59
% sort bomb: weapon
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:60
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:60
subsort(bomb,weapon).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:60
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:60
subsort(bomb,weapon).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:60
% sort bullet: weapon
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:61
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:61
subsort(bullet,weapon).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:61
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:61
subsort(bullet,weapon).
%; location

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:64
% sort location
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:65
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:65
sort(location).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:65
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:65
sort(location).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:65
% sort room: location, outside: location
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:66
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:66
subsort(room,location).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:66
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:66
subsort(room,location).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:66
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:66
subsort(outside,location).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:66
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:66
subsort(outside,location).
%; portal

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:69
% sort portal
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:70
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:70
sort(portal).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:70
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:70
sort(portal).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:70
% sort door: portal, staircase: portal
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:71
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:71
subsort(door,portal).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:71
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:71
subsort(door,portal).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:71
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:71
subsort(staircase,portal).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:71
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:71
subsort(staircase,portal).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:71
% sort street: portal
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:72
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:72
subsort(street,portal).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:72
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:72
subsort(street,portal).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:72
% sort track: portal
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:73
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:73
subsort(track,portal).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:73
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:73
subsort(track,portal).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:74
% sort building
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:75
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:75
sort(building).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:75
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:75
sort(building).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:76
% sort fire: object
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:77
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:77
subsort(fire,object).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:77
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:77
subsort(fire,object).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:77
% sort smoke: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:78
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:78
subsort(smoke,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:78
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:78
subsort(smoke,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:79
% sort furniture: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:80
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:80
subsort(furniture,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:80
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:80
subsort(furniture,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:80
% sort chair: furniture
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:81
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:81
subsort(chair,furniture).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:81
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:81
subsort(chair,furniture).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:81
% sort table: furniture
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:82
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:82
subsort(table,furniture).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:82
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:82
subsort(table,furniture).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:83
% sort bill: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:84
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:84
subsort(bill,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:84
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:84
subsort(bill,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:84
% sort ticket: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:85
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:85
subsort(ticket,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:85
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:85
subsort(ticket,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:85
% sort envelope: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:86
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:86
subsort(envelope,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:86
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:86
subsort(envelope,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:87
% sort text: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:88
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:88
subsort(text,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:88
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:88
subsort(text,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:88
% sort book: text
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:89
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:89
subsort(book,text).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:89
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:89
subsort(book,text).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:89
% sort letter: text
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:90
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:90
subsort(letter,text).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:90
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:90
subsort(letter,text).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:90
% sort menu: text
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:91
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:91
subsort(menu,text).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:91
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:91
subsort(menu,text).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:92
% sort paper: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:93
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:93
subsort(paper,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:93
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:93
subsort(paper,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:94
% sort content
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:95
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:95
sort(content).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:95
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:95
sort(content).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:95
% sort script
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:96
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:96
sort(script).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:96
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:96
sort(script).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:97
% sort container: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:98
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:98
subsort(container,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:98
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:98
subsort(container,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:98
% sort cigarette: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:99
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:99
subsort(cigarette,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:99
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:99
subsort(cigarette,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:99
% sort ashtray: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:100
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:100
subsort(ashtray,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:100
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:100
subsort(ashtray,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:100
% sort umbrella: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:101
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:101
subsort(umbrella,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:101
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:101
subsort(umbrella,physobj).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:102
% sort pen: physobj
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:103
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:103
subsort(pen,physobj).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:103
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e:103
subsort(pen,physobj).
%; End of file.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:34
% load answers/Mueller2004c/OTSpaceM.e
 %  load(changed,'answers/Mueller2004c/OTSpaceM.e').

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:35
% load answers/Mueller2004c/RTSpaceM.e
 %  load(changed,'answers/Mueller2004c/RTSpaceM.e').

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:36
% load answers/Mueller2004c/Fire.e
 %  loading(changed,'/pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e').
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; fire
%;
%; agent sets fire to physobj with burn time offset.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:14
% event SetFireTo(agent,physobj,fire,offset)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:15
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:15
event(setFireTo(agent,physobj,fire,offset)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:15
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:15
actions([setFireTo/4]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:15
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:15
actions([setFireTo/4]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:15
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:15
meta_argtypes(setFireTo(agent,physobj,fire,offset)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:15
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:15
meta_argtypes(setFireTo(agent,physobj,fire,offset)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:15
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:15
mpred_prop(setFireTo(agent,physobj,fire,offset),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:15
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:15
mpred_prop(setFireTo(agent,physobj,fire,offset),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:15
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:15
meta_argtypes(setFireTo(agent,physobj,fire,offset)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:15
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:15
meta_argtypes(setFireTo(agent,physobj,fire,offset)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:16
%; An effect axioms states that
%; if an agent sets a fire to a physical object with a burn time,
%; the physical object will be burning with the fire and burn time:
% [agent,physobj,fire,offset,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:20
% Initiates(SetFireTo(agent,physobj,fire,offset),
%           Burning(physobj,fire,offset),
%           time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:22

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(setFireTo(Agent, Physobj, Fire, Offset),
                    burning(Physobj, Fire, Offset),
                    Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:22
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:22
initiates(setFireTo(SetfiretoP_Num4_V,
		    BurningP_Num3_V,
		    A,
		    Setfireto),
	  burning(BurningP_Num3_V,A,Setfireto),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:22
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:22
initiated(happens(setFireTo(SetfiretoP_Num4_V,
			    BurningP_Num3_V,
			    A,
			    Setfireto),
		  Maptime,
		  Happens),
	  burning(BurningP_Num3_V,A,Setfireto),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:24
%; agent puts out fire on physobj.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:25
% event PutOutFire(agent,physobj,fire)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:26
event(putOutFire(agent,physobj,fire)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:26
actions([putOutFire/3]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:26
actions([putOutFire/3]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:26
meta_argtypes(putOutFire(agent,physobj,fire)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:26
meta_argtypes(putOutFire(agent,physobj,fire)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:26
mpred_prop(putOutFire(agent,physobj,fire),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:26
mpred_prop(putOutFire(agent,physobj,fire),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:26
meta_argtypes(putOutFire(agent,physobj,fire)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:26
meta_argtypes(putOutFire(agent,physobj,fire)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:27
%; An effect axiom states that
%; if an agent puts out a fire on a physical object,
%; the physical object will no longer be burning:
% [agent,physobj,fire,offset,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:31
% Terminates(PutOutFire(agent,physobj,fire),
%            Burning(physobj,fire,offset),
%            time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:33

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(putOutFire(Agent, Physobj, Fire),
                     burning(Physobj, Fire, Offset),
                     Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:33
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:33
terminates(putOutFire(PutoutfireP_Num3_V,
		      BurningP_Num3_V,
		      Putoutfire),
	   burning(BurningP_Num3_V,
		   Putoutfire,
		   Burning),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:33
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:33
terminated(happens(putOutFire(PutoutfireP_Num3_V,
			      BurningP_Num3_V,
			      Putoutfire),
		   Maptime,
		   Happens),
	   burning(BurningP_Num3_V,
		   Putoutfire,
		   Burning),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:35
%; A precondition axiom states that
%; for an agent to set fire to a physical object,
%; there must be a location such that
%; the agent is at the location and
%; the physical object is at the location:
% [agent,fire,physobj,offset,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:41
% Happens(SetFireTo(agent,physobj,fire,offset),time) ->
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:42
% {location}%  HoldsAt(At(agent,location),time) &
%            HoldsAt(At(physobj,location),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:43

 /*  exists([Location],
    happens(setFireTo(Agent, Physobj, Fire, Offset), Time) ->
       holds_at(at(Agent, Location), Time),
       holds_at(at(Physobj, Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:43

 /*  not(happens(setFireTo(Agent, Physobj, Fire, Offset), Time)) :-
       (   not(holds_at(at(Agent, Exists_Location), Time))
       ;   not(holds_at(at(Physobj, Exists_Location), Time))
       ),
       some(Exists_Location,
            '$kolem_Fn_59'(Agent,
                           Physobj,
                           Fire,
                           Offset,
                           Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:43

 /*  [(holds_at(neg(at(Agent, Exists_Location)), Time);holds_at(neg(at(Physobj, Exists_Location)), Time)), some(Exists_Location, '$kolem_Fn_59'(Agent, Physobj, Fire, Offset, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(setFireTo(Agent,
                                Physobj,
                                Fire,
                                Offset),
                      Time))).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:43
(holds_at(neg(at(Kolem_Fn_59P_Num5_V, Location7)), Time8);holds_at(neg(at(A, Location7)), Time8)), some(Location7, '$kolem_Fn_59'(Kolem_Fn_59P_Num5_V, A, B, Setfireto, Time8)) ->
    not(happens(setFireTo(Kolem_Fn_59P_Num5_V,
                          A,
                          B,
                          Setfireto),
                Time8)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:43
 reactive_rule([  (at(not(loc_at(Kolem_Fn_59P_Num5_V, Location7)), Time8);at(not(loc_at(A, Location7)), Time8)),
                   some(Location7,
                        '$kolem_Fn_59'(Kolem_Fn_59P_Num5_V,
                                       A,
                                       B,
                                       Setfireto,
                                       Time8))
                 ],
                 [ not(happens(setFireTo(Kolem_Fn_59P_Num5_V,
                                         A,
                                         B,
                                         Setfireto),
                               Time8))
                 ]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:43

 /*  holds_at(at(Agent, Exists_Location), Time) :-
       happens(setFireTo(Agent, Physobj, Fire, Offset),
               Time),
       some(Exists_Location,
            '$kolem_Fn_59'(Agent,
                           Physobj,
                           Fire,
                           Offset,
                           Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:43

 /*  [happens(setFireTo(Agent, Physobj, Fire, Offset), Time), some(Exists_Location, '$kolem_Fn_59'(Agent, Physobj, Fire, Offset, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Agent, Exists_Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:43
happens(setFireTo(SetfiretoP_Num4_V, A, B, Setfireto13), Maptime), some(Location12, '$kolem_Fn_59'(SetfiretoP_Num4_V, A, B, Setfireto13, Maptime)) ->
    holds_at(at(SetfiretoP_Num4_V, Location12), Maptime).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:43
reactive_rule([ happens(setFireTo(SetfiretoP_Num4_V,
				  A,
				  B,
				  Setfireto13),
			Maptime),
		some(Location12,
		     '$kolem_Fn_59'(SetfiretoP_Num4_V,
				    A,
				    B,
				    Setfireto13,
				    Maptime))
	      ],
	      [ holds(loc_at(SetfiretoP_Num4_V,Location12),
		      Maptime)
	      ]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:43

 /*  holds_at(at(Physobj, Exists_Location), Time) :-
       happens(setFireTo(Agent, Physobj, Fire, Offset),
               Time),
       some(Exists_Location,
            '$kolem_Fn_59'(Agent,
                           Physobj,
                           Fire,
                           Offset,
                           Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:43

 /*  [happens(setFireTo(Agent, Physobj, Fire, Offset), Time), some(Exists_Location, '$kolem_Fn_59'(Agent, Physobj, Fire, Offset, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Physobj, Exists_Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:43
happens(setFireTo(SetfiretoP_Num4_V18, A, B, Setfireto17), Maptime15), some(Location16, '$kolem_Fn_59'(SetfiretoP_Num4_V18, A, B, Setfireto17, Maptime15)) ->
    holds_at(at(A, Location16), Maptime15).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:43
reactive_rule([ happens(setFireTo(SetfiretoP_Num4_V18,
				  A,
				  B,
				  Setfireto17),
			Maptime15),
		some(Location16,
		     '$kolem_Fn_59'(SetfiretoP_Num4_V18,
				    A,
				    B,
				    Setfireto17,
				    Maptime15))
	      ],
	      [holds(loc_at(A,Location16),Maptime15)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:45
%; A precondition axiom states that
%; for an agent to put out a fire on a physical object,
%; there must be a location such that
%; the agent is at the location and
%; the physical object is at the location:
% [agent,fire,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:51
% Happens(PutOutFire(agent,physobj,fire),time) ->
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:52
% {location}%  HoldsAt(At(agent,location),time) &
%            HoldsAt(At(physobj,location),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:53

 /*  exists([Location],
    happens(putOutFire(Agent, Physobj, Fire), Time) ->
       holds_at(at(Agent, Location), Time),
       holds_at(at(Physobj, Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:53

 /*  not(happens(putOutFire(Agent, Physobj, Fire), Time)) :-
       (   not(holds_at(at(Agent, Exists_Location), Time))
       ;   not(holds_at(at(Physobj, Exists_Location), Time))
       ),
       some(Exists_Location,
            '$kolem_Fn_60'(Agent, Physobj, Fire, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:53

 /*  [(holds_at(neg(at(Agent, Exists_Location)), Time);holds_at(neg(at(Physobj, Exists_Location)), Time)), some(Exists_Location, '$kolem_Fn_60'(Agent, Physobj, Fire, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(putOutFire(Agent, Physobj, Fire),
                      Time))).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:53
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:53
(holds_at(neg(at(Kolem_Fn_60P_Num4_V, Location6)), Time7);holds_at(neg(at(A, Location6)), Time7)), some(Location6, '$kolem_Fn_60'(Kolem_Fn_60P_Num4_V, A, Putoutfire, Time7)) ->
    not(happens(putOutFire(Kolem_Fn_60P_Num4_V, A, Putoutfire),
                Time7)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:53
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:53
 reactive_rule([  (at(not(loc_at(Kolem_Fn_60P_Num4_V, Location6)), Time7);at(not(loc_at(A, Location6)), Time7)),
                   some(Location6,
                        '$kolem_Fn_60'(Kolem_Fn_60P_Num4_V,
                                       A,
                                       Putoutfire,
                                       Time7))
                 ],
                 [ not(happens(putOutFire(Kolem_Fn_60P_Num4_V,
                                          A,
                                          Putoutfire),
                               Time7))
                 ]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:53

 /*  holds_at(at(Agent, Exists_Location), Time) :-
       happens(putOutFire(Agent, Physobj, Fire), Time),
       some(Exists_Location,
            '$kolem_Fn_60'(Agent, Physobj, Fire, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:53

 /*  [happens(putOutFire(Agent, Physobj, Fire), Time), some(Exists_Location, '$kolem_Fn_60'(Agent, Physobj, Fire, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Agent, Exists_Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:53
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:53
happens(putOutFire(PutoutfireP_Num3_V, A, Putoutfire12), Maptime), some(Location11, '$kolem_Fn_60'(PutoutfireP_Num3_V, A, Putoutfire12, Maptime)) ->
    holds_at(at(PutoutfireP_Num3_V, Location11), Maptime).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:53
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:53
reactive_rule([ happens(putOutFire(PutoutfireP_Num3_V,
				   A,
				   Putoutfire12),
			Maptime),
		some(Location11,
		     '$kolem_Fn_60'(PutoutfireP_Num3_V,
				    A,
				    Putoutfire12,
				    Maptime))
	      ],
	      [ holds(loc_at(PutoutfireP_Num3_V,Location11),
		      Maptime)
	      ]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:53

 /*  holds_at(at(Physobj, Exists_Location), Time) :-
       happens(putOutFire(Agent, Physobj, Fire), Time),
       some(Exists_Location,
            '$kolem_Fn_60'(Agent, Physobj, Fire, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:53

 /*  [happens(putOutFire(Agent, Physobj, Fire), Time), some(Exists_Location, '$kolem_Fn_60'(Agent, Physobj, Fire, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Physobj, Exists_Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:53
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:53
happens(putOutFire(PutoutfireP_Num3_V17, A, Putoutfire16), Maptime14), some(Location15, '$kolem_Fn_60'(PutoutfireP_Num3_V17, A, Putoutfire16, Maptime14)) ->
    holds_at(at(A, Location15), Maptime14).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:53
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:53
reactive_rule([ happens(putOutFire(PutoutfireP_Num3_V17,
				   A,
				   Putoutfire16),
			Maptime14),
		some(Location15,
		     '$kolem_Fn_60'(PutoutfireP_Num3_V17,
				    A,
				    Putoutfire16,
				    Maptime14))
	      ],
	      [holds(loc_at(A,Location15),Maptime14)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:55
%; physobj is burning with fire and burn time offset.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:56
% fluent Burning(physobj,fire,offset)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:57
fluent(burning(physobj,fire,offset)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:57
fluents([burning/3]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:57
fluents([burning/3]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:57
meta_argtypes(burning(physobj,fire,offset)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:57
meta_argtypes(burning(physobj,fire,offset)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:57
mpred_prop(burning(physobj,fire,offset),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:57
mpred_prop(burning(physobj,fire,offset),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:57
meta_argtypes(burning(physobj,fire,offset)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:57
meta_argtypes(burning(physobj,fire,offset)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:58
%; A state constraint says that a physical object burning with
%; a fire has at most one burn time at a time:
% [physobj,fire,offset1,offset2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:61
% HoldsAt(Burning(physobj,fire,offset1),time) &
% HoldsAt(Burning(physobj,fire,offset2),time) ->
% offset1=offset2.
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:63
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:63
holds_at(burning(Physobj, Fire, Offset1), Time), holds_at(burning(Physobj, Fire, Offset2), Time) ->
    equals(Offset1, Offset2).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:63
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:63
reactive_rule([ holds(burning(Physobj,Fire,Offset1),
		      Time),
		holds(burning(Physobj,Fire,Offset2),
		      Time)
	      ],
	      [equals(Offset1,Offset2)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:65
%; The burn time of physobj is decremented.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:66
% event DecrementBurning(physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:67
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:67
event(decrementBurning(physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:67
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:67
events([decrementBurning/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:67
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:67
events([decrementBurning/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:67
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:67
meta_argtypes(decrementBurning(physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:67
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:67
meta_argtypes(decrementBurning(physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:67
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:67
mpred_prop(decrementBurning(physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:67
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:67
mpred_prop(decrementBurning(physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:67
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:67
meta_argtypes(decrementBurning(physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:67
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:67
meta_argtypes(decrementBurning(physobj)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:68
%; A trigger axiom states that
%; if a physical object is burning with a fire and a burn time and
%; the burn time is greater than zero,
%; the burn time of the physical object is decremented:
% [physobj,fire,offset,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:73
% HoldsAt(Burning(physobj,fire,offset),time) &
% (offset > 0) ->
% Happens(DecrementBurning(physobj),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:75
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:75
holds_at(burning(Physobj, Fire, Offset), Time), Offset>0 ->
    happens(decrementBurning(Physobj), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:75
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:75
reactive_rule([ holds(burning(Physobj,Fire,Offset),
		      Time),
		Offset>0
	      ],
	      [happens(decrementBurning(Physobj),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:77
%; An effect axiom states that if a physical object is
%; burning with a fire and a burn time, and the burn time of a physical
%; object is decremented, the burn time of the physical
%; object will be the burn time minus one:
% [physobj,fire,offset1,offset2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:82
% HoldsAt(Burning(physobj,fire,offset1),time) &
% offset2 = offset1-1 ->
% Initiates(DecrementBurning(physobj),
%           Burning(physobj,fire,offset2),
%           time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:86
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:86
holds_at(burning(Physobj, Fire, Offset1), Time), equals(Offset2, Offset1-1) ->
    initiates(decrementBurning(Physobj),
              burning(Physobj, Fire, Offset2),
              Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:86
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:86
reactive_rule([ holds(burning(Physobj,Fire,Offset1),
		      Time),
		equals(Offset2,Offset1-1)
	      ],
	      [ initiates(decrementBurning(Physobj),
			  at(burning(Physobj,
				     Fire,
				     Offset2),
			     Time))
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:88
%; An effect axiom states that if a physical object is
%; burning with a fire and a burn time, and the burn time of a physical
%; object is decremented, the burn time of the physical
%; object will no longer be the burn time:
% [physobj,fire,offset,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:93
% HoldsAt(Burning(physobj,fire,offset),time) ->
% Terminates(DecrementBurning(physobj),
%            Burning(physobj,fire,offset),
%            time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:96
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:96
holds_at(burning(Physobj, Fire, Offset), Time) ->
    terminates(decrementBurning(Physobj),
               burning(Physobj, Fire, Offset),
               Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:96
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:96
reactive_rule([ holds(burning(Physobj,Fire,Offset),
		      Time)
	      ],
	      [ terminates(decrementBurning(Physobj),
			   at(burning(Physobj,
				      Fire,
				      Offset),
			      Time))
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:98
%; A trigger axiom states that
%; if a physical object is burning with a fire and a burn time
%; that is not equal to zero, the fire will damage the
%; physical object:
% [physobj,fire,offset,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:103
% offset!=% 0 &
% HoldsAt(Burning(physobj,fire,offset),time) &
% HoldsAt(Intact(physobj),time) ->
% Happens(Damage(fire,physobj),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:106
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:106
diff(Offset, 0), holds_at(burning(Physobj, Fire, Offset), Time), holds_at(intact(Physobj), Time) ->
    happens(damage(Fire, Physobj), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:106
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:106
reactive_rule([ diff(Offset,0),
		holds(burning(Physobj,Fire,Offset),
		      Time),
		holds(intact(Physobj),Time)
	      ],
	      [happens(damage(Fire,Physobj),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:108
%; A trigger axiom states that
%; if a physical object is burning with a fire and a burn time
%; that is equal to zero, the fire will destroy the
%; physical object:
% [physobj,fire,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:113
% HoldsAt(Burning(physobj,fire,0),time) &
% !HoldsAt(Destroyed(physobj),time) ->
% Happens(Destroy(fire,physobj),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:115
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:115
holds_at(burning(Physobj, Fire, 0), Time), holds_at(neg(destroyed(Physobj)), Time) ->
    happens(destroy(Fire, Physobj), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:115
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:115
reactive_rule([ holds(burning(Physobj,Fire,0),Time),
		holds(not(destroyed(Physobj)),Time)
	      ],
	      [happens(destroy(Fire,Physobj),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:117
%; An effect axiom states that if a fire destroys a physical
%; object, the physical object will no longer be burning:
% [physobj,fire,offset,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:120
% Terminates(Destroy(fire,physobj),
%            Burning(physobj,fire,offset),
%            time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:122

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(destroy(Fire, Physobj),
                     burning(Physobj, Fire, Offset),
                     Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:122
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:122
terminates(destroy(A,Destroy),
	   burning(Destroy,A,Burning),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:122
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:122
terminated(happens(destroy(A,Destroy),
		   Maptime,
		   Happens),
	   burning(Destroy,A,Burning),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Fire.e:124
%; End of file.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:37
% load answers/Mueller2004c/Condition.e
 %  loading(changed,'/pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e').
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; human health

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:12
% fluent Alive(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:13
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:13
fluent(alive(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:13
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:13
fluents([alive/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:13
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:13
fluents([alive/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:13
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:13
meta_argtypes(alive(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:13
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:13
meta_argtypes(alive(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:13
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:13
mpred_prop(alive(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:13
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:13
mpred_prop(alive(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:13
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:13
meta_argtypes(alive(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:13
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:13
meta_argtypes(alive(agent)).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:14
% fluent Dead(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:15
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:15
fluent(dead(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:15
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:15
fluents([dead/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:15
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:15
fluents([dead/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:15
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:15
meta_argtypes(dead(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:15
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:15
meta_argtypes(dead(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:15
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:15
mpred_prop(dead(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:15
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:15
mpred_prop(dead(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:15
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:15
meta_argtypes(dead(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:15
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:15
meta_argtypes(dead(agent)).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:15
% noninertial Dead
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:16
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:16
noninertial(dead).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:16
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:16
noninertial(dead).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:17
% fluent Injured(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:18
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:18
fluent(injured(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:18
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:18
fluents([injured/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:18
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:18
fluents([injured/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:18
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:18
meta_argtypes(injured(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:18
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:18
meta_argtypes(injured(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:18
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:18
mpred_prop(injured(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:18
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:18
mpred_prop(injured(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:18
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:18
meta_argtypes(injured(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:18
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:18
meta_argtypes(injured(agent)).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:19
% event Kill(object,agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:20
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:20
event(kill(object,agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:20
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:20
events([kill/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:20
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:20
events([kill/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:20
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:20
meta_argtypes(kill(object,agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:20
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:20
meta_argtypes(kill(object,agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:20
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:20
mpred_prop(kill(object,agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:20
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:20
mpred_prop(kill(object,agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:20
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:20
meta_argtypes(kill(object,agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:20
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:20
meta_argtypes(kill(object,agent)).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:20
% event Injure(object,agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:21
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:21
event(injure(object,agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:21
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:21
events([injure/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:21
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:21
events([injure/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:21
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:21
meta_argtypes(injure(object,agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:21
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:21
meta_argtypes(injure(object,agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:21
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:21
mpred_prop(injure(object,agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:21
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:21
mpred_prop(injure(object,agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:21
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:21
meta_argtypes(injure(object,agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:21
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:21
meta_argtypes(injure(object,agent)).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:21
% event HealInjured(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:22
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:22
event(healInjured(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:22
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:22
actions([healInjured/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:22
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:22
actions([healInjured/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:22
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:22
meta_argtypes(healInjured(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:22
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:22
meta_argtypes(healInjured(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:22
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:22
mpred_prop(healInjured(agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:22
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:22
mpred_prop(healInjured(agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:22
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:22
meta_argtypes(healInjured(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:22
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:22
meta_argtypes(healInjured(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:23
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:23
% HoldsAt(Alive(agent),time) <-> !HoldsAt(Dead(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:23

 /*  holds_at(alive(Agent), Time) <->
       holds_at(neg(dead(Agent)), Time).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:23

 /*  [holds_at, alive] <->
       [holds_at, neg, dead].
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:23
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:23
holds_at(alive(Agent), Time) ->
    holds_at(neg(dead(Agent)), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:23
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:23
reactive_rule([holds(alive(Agent),Time)],
	      [holds(not(dead(Agent)),Time)]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:23
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:23
holds_at(neg(dead(Agent)), Time) ->
    holds_at(alive(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:23
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:23
reactive_rule([holds(not(dead(Agent)),Time)],
	      [holds(alive(Agent),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:24
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:24
% HoldsAt(Injured(agent),time) -> HoldsAt(Alive(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:24
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:24
holds_at(injured(Agent), Time) ->
    holds_at(alive(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:24
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:24
reactive_rule([holds(injured(Agent),Time)],
	      [holds(alive(Agent),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:26
% [object,agent,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:27
% Terminates(Kill(object,agent),Alive(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:27

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(kill(Object, Agent),
                     alive(Agent),
                     Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:27
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:27
terminates(kill(_,Kill),alive(Kill),Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:27
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:27
terminated(happens(kill(_,Kill),
		   Maptime,
		   Happens),
	   alive(Kill),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:29
% [object,agent,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:30
% Initiates(Injure(object,agent),Injured(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:30

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(injure(Object, Agent),
                    injured(Agent),
                    Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:30
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:30
initiates(injure(_,Injure),
	  injured(Injure),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:30
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:30
initiated(happens(injure(_,Injure),
		  Maptime,
		  Happens),
	  injured(Injure),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:32
% [agent,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:33
% Terminates(HealInjured(agent),Injured(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:33

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(healInjured(Agent), injured(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:33
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:33
terminates(healInjured(Healinjured),
	   injured(Healinjured),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:33
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:33
terminated(happens(healInjured(Healinjured),
		   Maptime,
		   Happens),
	   injured(Healinjured),
	   []).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:35
% fluent Intact(physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:36
fluent(intact(physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:36
fluents([intact/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:36
fluents([intact/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:36
meta_argtypes(intact(physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:36
meta_argtypes(intact(physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:36
mpred_prop(intact(physobj),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:36
mpred_prop(intact(physobj),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:36
meta_argtypes(intact(physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:36
meta_argtypes(intact(physobj)).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:37
% fluent Damaged(physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:38
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:38
fluent(damaged(physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:38
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:38
fluents([damaged/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:38
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:38
fluents([damaged/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:38
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:38
meta_argtypes(damaged(physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:38
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:38
meta_argtypes(damaged(physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:38
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:38
mpred_prop(damaged(physobj),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:38
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:38
mpred_prop(damaged(physobj),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:38
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:38
meta_argtypes(damaged(physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:38
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:38
meta_argtypes(damaged(physobj)).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:39
% fluent Destroyed(physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:40
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:40
fluent(destroyed(physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:40
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:40
fluents([destroyed/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:40
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:40
fluents([destroyed/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:40
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:40
meta_argtypes(destroyed(physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:40
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:40
meta_argtypes(destroyed(physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:40
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:40
mpred_prop(destroyed(physobj),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:40
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:40
mpred_prop(destroyed(physobj),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:40
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:40
meta_argtypes(destroyed(physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:40
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:40
meta_argtypes(destroyed(physobj)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:41
%; At any time, a physical object is either intact, damaged, or destroyed:

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:42
% xor Intact, Damaged, Destroyed
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:43

 /*  fix_axiom_head(Time) ->
       [  (==>)xor[intact, damaged, destroyed],
          (->),
         holds_at((==>)xor[intact, damaged, destroyed], Time)
       ].
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:43
holds_at((==>)xor[intact,damaged,destroyed],Time1).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:43
l_int(holds((==>)xor[intact,damaged,destroyed],Time1),[]).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:44
% event Damage(object,physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:45
event(damage(object,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:45
events([damage/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:45
events([damage/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:45
meta_argtypes(damage(object,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:45
meta_argtypes(damage(object,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:45
mpred_prop(damage(object,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:45
mpred_prop(damage(object,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:45
meta_argtypes(damage(object,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:45
meta_argtypes(damage(object,physobj)).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:46
% event Destroy(object,physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:47
event(destroy(object,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:47
events([destroy/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:47
events([destroy/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:47
meta_argtypes(destroy(object,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:47
meta_argtypes(destroy(object,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:47
mpred_prop(destroy(object,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:47
mpred_prop(destroy(object,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:47
meta_argtypes(destroy(object,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:47
meta_argtypes(destroy(object,physobj)).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:48
% event Repair(object,physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:49
event(repair(object,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:49
events([repair/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:49
events([repair/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:49
meta_argtypes(repair(object,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:49
meta_argtypes(repair(object,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:49
mpred_prop(repair(object,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:49
mpred_prop(repair(object,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:49
meta_argtypes(repair(object,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:49
meta_argtypes(repair(object,physobj)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:50
% [object,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:51
% Happens(Damage(object,physobj),time) ->
% HoldsAt(Intact(physobj),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:52
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:52
happens(damage(Object, Physobj), Time) ->
    holds_at(intact(Physobj), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:52
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:52
reactive_rule([happens(damage(Object,Physobj),Time)],
	      [holds(intact(Physobj),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:54
% [object,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:55
% Initiates(Damage(object,physobj),Damaged(physobj),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:55

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(damage(Object, Physobj),
                    damaged(Physobj),
                    Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:55
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:55
initiates(damage(_,Damage),
	  damaged(Damage),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:55
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:55
initiated(happens(damage(_,Damage),
		  Maptime,
		  Happens),
	  damaged(Damage),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:57
% [object,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:58
% Terminates(Damage(object,physobj),Intact(physobj),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:58

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(damage(Object, Physobj),
                     intact(Physobj),
                     Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:58
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:58
terminates(damage(_,Damage),
	   intact(Damage),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:58
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:58
terminated(happens(damage(_,Damage),
		   Maptime,
		   Happens),
	   intact(Damage),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:60
% [object,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:61
% Happens(Destroy(object,physobj),time) ->
% (HoldsAt(Intact(physobj),time)|
%  HoldsAt(Damaged(physobj),time)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:63
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:63
happens(destroy(Object, Physobj), Time) ->
    (   holds_at(intact(Physobj), Time)
    ;   holds_at(damaged(Physobj), Time)
    ).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:63
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:63
 reactive_rule([happens(destroy(Object, Physobj), Time)],
                 [  (at(intact(Physobj), Time);at(damaged(Physobj), Time))
                 ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:65
% [object,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:66
% Initiates(Destroy(object,physobj),Destroyed(physobj),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:66

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(destroy(Object, Physobj),
                    destroyed(Physobj),
                    Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:66
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:66
initiates(destroy(_,Destroy),
	  destroyed(Destroy),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:66
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:66
initiated(happens(destroy(_,Destroy),
		  Maptime,
		  Happens),
	  destroyed(Destroy),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:68
% [object,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:69
% Terminates(Destroy(object,physobj),Intact(physobj),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:69

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(destroy(Object, Physobj),
                     intact(Physobj),
                     Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:69
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:69
terminates(destroy(_,Destroy),
	   intact(Destroy),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:69
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:69
terminated(happens(destroy(_,Destroy),
		   Maptime,
		   Happens),
	   intact(Destroy),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:71
% [object,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:72
% Terminates(Destroy(object,physobj),Damaged(physobj),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:72

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(destroy(Object, Physobj),
                     damaged(Physobj),
                     Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:72
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:72
terminates(destroy(_,Destroy),
	   damaged(Destroy),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:72
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:72
terminated(happens(destroy(_,Destroy),
		   Maptime,
		   Happens),
	   damaged(Destroy),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:74
% [object,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:75
% Initiates(Repair(object,physobj),Intact(physobj),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:75

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(repair(Object, Physobj),
                    intact(Physobj),
                    Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:75
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:75
initiates(repair(_,Repair),
	  intact(Repair),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:75
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:75
initiated(happens(repair(_,Repair),
		  Maptime,
		  Happens),
	  intact(Repair),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e:77
%; end of file.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:38
% load answers/Mueller2003/Sleep.e
 %  loading(changed,'/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e').
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; The Sleep representation deals with the activity of sleeping and
%; body posture.
%; It is similar to the finite automaton representation of sleep
%; used in ThoughtTreasure \fullcite[chap. 7]{Mueller:1998}.
%;
%; @book{Mueller:1998,
%;   author = "Erik T. Mueller",
%;   year = "1998",
%;   title = "Natural Language Processing with \uppercase{T}hought\uppercase{T}reasure",
%;   address = "New York",
%;   publisher = "Signiform",
%; }
%;
%; sleep
%; agent wakes up.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:27
% event WakeUp(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
event(wakeUp(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
actions([wakeUp/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
actions([wakeUp/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
meta_argtypes(wakeUp(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
meta_argtypes(wakeUp(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
mpred_prop(wakeUp(agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
mpred_prop(wakeUp(agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
meta_argtypes(wakeUp(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:28
meta_argtypes(wakeUp(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:29
%; agent gets tired.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:30
% event GetTired(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
event(getTired(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
actions([getTired/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
actions([getTired/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
meta_argtypes(getTired(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
meta_argtypes(getTired(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
mpred_prop(getTired(agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
mpred_prop(getTired(agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
meta_argtypes(getTired(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:31
meta_argtypes(getTired(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:32
%; agent falls asleep.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:33
% event FallAsleep(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
event(fallAsleep(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
actions([fallAsleep/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
actions([fallAsleep/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
meta_argtypes(fallAsleep(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
meta_argtypes(fallAsleep(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
mpred_prop(fallAsleep(agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
mpred_prop(fallAsleep(agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
meta_argtypes(fallAsleep(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:34
meta_argtypes(fallAsleep(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:35
%; agent is asleep.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:36
% fluent Sleep0(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
fluent(sleep0(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
fluents([sleep0/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
fluents([sleep0/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
meta_argtypes(sleep0(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
meta_argtypes(sleep0(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
mpred_prop(sleep0(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
mpred_prop(sleep0(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
meta_argtypes(sleep0(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
meta_argtypes(sleep0(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:37
%; agent is awake and in bed.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:38
% fluent Sleep1(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
fluent(sleep1(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
fluents([sleep1/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
fluents([sleep1/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
meta_argtypes(sleep1(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
meta_argtypes(sleep1(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
mpred_prop(sleep1(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
mpred_prop(sleep1(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
meta_argtypes(sleep1(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
meta_argtypes(sleep1(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:39
%; agent is awake, out of bed, and undressed.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:40
% fluent Sleep2(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
fluent(sleep2(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
fluents([sleep2/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
fluents([sleep2/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
meta_argtypes(sleep2(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
meta_argtypes(sleep2(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
mpred_prop(sleep2(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
mpred_prop(sleep2(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
meta_argtypes(sleep2(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
meta_argtypes(sleep2(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:41
%; agent is awake and dressed.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:42
% fluent Sleep3(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
fluent(sleep3(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
fluents([sleep3/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
fluents([sleep3/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
meta_argtypes(sleep3(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
meta_argtypes(sleep3(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
mpred_prop(sleep3(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
mpred_prop(sleep3(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
meta_argtypes(sleep3(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
meta_argtypes(sleep3(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:43
%; agent is tired and dressed.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:44
% fluent Sleep4(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
fluent(sleep4(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
fluents([sleep4/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
fluents([sleep4/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
meta_argtypes(sleep4(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
meta_argtypes(sleep4(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
mpred_prop(sleep4(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
mpred_prop(sleep4(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
meta_argtypes(sleep4(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
meta_argtypes(sleep4(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:45
%; agent is tired and undressed.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:46
% fluent Sleep5(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
fluent(sleep5(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
fluents([sleep5/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
fluents([sleep5/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
meta_argtypes(sleep5(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
meta_argtypes(sleep5(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
mpred_prop(sleep5(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
mpred_prop(sleep5(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
meta_argtypes(sleep5(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
meta_argtypes(sleep5(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:47
%; agent is in bed, waiting to fall asleep.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:48
% fluent Sleep6(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
fluent(sleep6(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
fluents([sleep6/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
fluents([sleep6/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
meta_argtypes(sleep6(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
meta_argtypes(sleep6(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
mpred_prop(sleep6(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
mpred_prop(sleep6(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
meta_argtypes(sleep6(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:49
meta_argtypes(sleep6(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:50
%; At any time, an agent is in one of seven sleep states:

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:51
% xor Sleep0, Sleep1, Sleep2, Sleep3, Sleep4, Sleep5, Sleep6
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:52

 /*  fix_axiom_head(Time) ->
       [  (==>)xor[sleep0, sleep1, sleep2, sleep3, sleep4, sleep5, sleep6],
          (->),
         holds_at((==>)xor[sleep0, sleep1, sleep2, sleep3, sleep4, sleep5, sleep6],
                  Time)
       ].
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:52
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:52
holds_at(==>xor[sleep0,sleep1,sleep2,sleep3,sleep4,sleep5,sleep6],
	 Time1).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:52
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:52
l_int(holds(==>xor[sleep0,sleep1,sleep2,sleep3,sleep4,sleep5,sleep6],
	    Time1),
      []).
%; constraints
%; agent is asleep.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:56
% fluent Asleep(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
fluent(asleep(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
fluents([asleep/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
fluents([asleep/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
meta_argtypes(asleep(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
meta_argtypes(asleep(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
mpred_prop(asleep(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
mpred_prop(asleep(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
meta_argtypes(asleep(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
meta_argtypes(asleep(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:57
%; agent is awake.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:58
% fluent Awake(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
fluent(awake(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
fluents([awake/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
fluents([awake/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
meta_argtypes(awake(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
meta_argtypes(awake(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
mpred_prop(awake(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
mpred_prop(awake(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
meta_argtypes(awake(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
meta_argtypes(awake(agent)).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:59
% noninertial Asleep
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:60
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:60
noninertial(asleep).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:60
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:60
noninertial(asleep).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:60
% noninertial Awake
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:61
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:61
noninertial(awake).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:61
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:61
noninertial(awake).
%; Sleep0 indicates that the agent is asleep:
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:63
% HoldsAt(Asleep(agent),time) <-> HoldsAt(Sleep0(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:63

 /*  holds_at(asleep(Agent), Time) <->
       holds_at(sleep0(Agent), Time).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:63

 /*  [holds_at, asleep] <->
       [holds_at, sleep0].
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:63
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:63
holds_at(asleep(Agent), Time) ->
    holds_at(sleep0(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:63
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:63
reactive_rule([holds(asleep(Agent),Time)],
	      [holds(sleep0(Agent),Time)]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:63
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:63
holds_at(sleep0(Agent), Time) ->
    holds_at(asleep(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:63
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:63
reactive_rule([holds(sleep0(Agent),Time)],
	      [holds(asleep(Agent),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:65
%; In all other sleep states, the agent is awake:
% [agent,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:67
% HoldsAt(Awake(agent),time) <->
% HoldsAt(Sleep1(agent),time) |
% HoldsAt(Sleep2(agent),time) |
% HoldsAt(Sleep3(agent),time) |
% HoldsAt(Sleep4(agent),time) |
% HoldsAt(Sleep5(agent),time) |
% HoldsAt(Sleep6(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:73

 /*  holds_at(awake(Agent), Time) <->
       (   holds_at(sleep1(Agent), Time)
       ;   holds_at(sleep2(Agent), Time)
       ;   holds_at(sleep3(Agent), Time)
       ;   holds_at(sleep4(Agent), Time)
       ;   holds_at(sleep5(Agent), Time)
       ;   holds_at(sleep6(Agent), Time)
       ).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:73

 /*  [holds_at, awake] <->
       [  (;),
         holds_at,
         sleep1,
          (;),
         holds_at,
         sleep2,
          (;),
         holds_at,
         sleep3,
          (;),
         holds_at,
         sleep4,
          (;),
         holds_at,
         sleep5,
         holds_at,
         sleep6
       ].
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:73
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:73
holds_at(awake(Agent), Time) ->
    (   holds_at(sleep1(Agent), Time)
    ;   holds_at(sleep2(Agent), Time)
    ;   holds_at(sleep3(Agent), Time)
    ;   holds_at(sleep4(Agent), Time)
    ;   holds_at(sleep5(Agent), Time)
    ;   holds_at(sleep6(Agent), Time)
    ).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:73
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:73
 reactive_rule([holds(awake(Agent), Time)],
                 [  (at(sleep1(Agent), Time);at(sleep2(Agent), Time);at(sleep3(Agent), Time);at(sleep4(Agent), Time);at(sleep5(Agent), Time);at(sleep6(Agent), Time))
                 ]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:73
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:73
holds_at(sleep1(Agent), Time);holds_at(sleep2(Agent), Time);holds_at(sleep3(Agent), Time);holds_at(sleep4(Agent), Time);holds_at(sleep5(Agent), Time);holds_at(sleep6(Agent), Time) ->
    holds_at(awake(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:73
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:73
 reactive_rule([  (at(sleep1(Agent), Time);at(sleep2(Agent), Time);at(sleep3(Agent), Time);at(sleep4(Agent), Time);at(sleep5(Agent), Time);at(sleep6(Agent), Time))
                 ],
                 [holds(awake(Agent), Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:75
%; A number of axioms are used to specify the transitions of
%; a finite automaton.
%;--
%; Waking up causes a transition from Sleep0
%; to Sleep1:
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:81
% Terminates(WakeUp(agent),Sleep0(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:81

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(wakeUp(Agent), sleep0(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:81
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:81
terminates(wakeUp(Wakeup),sleep0(Wakeup),Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:81
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:81
terminated(happens(wakeUp(Wakeup),Maptime,Happens),
	   sleep0(Wakeup),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:83
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:83
% Initiates(WakeUp(agent),Sleep1(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:83

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(wakeUp(Agent), sleep1(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:83
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:83
initiates(wakeUp(Wakeup),sleep1(Wakeup),Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:83
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:83
initiated(happens(wakeUp(Wakeup),Maptime,Happens),
	  sleep1(Wakeup),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:85
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:85
% Happens(WakeUp(agent),time) -> HoldsAt(Sleep0(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:85
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:85
happens(wakeUp(Agent), Time) ->
    holds_at(sleep0(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:85
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:85
reactive_rule([happens(wakeUp(Agent),Time)],
	      [holds(sleep0(Agent),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:87
%;--
%; Getting out of bed causes a transition from Sleep1
%; to Sleep2:
% [agent,bed,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:91
% Terminates(RiseFrom(agent,bed),Sleep1(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:91

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(riseFrom(Agent, Bed),
                     sleep1(Agent),
                     Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:91
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:91
terminates(riseFrom(Sleep1,Risefrom),
	   sleep1(Sleep1),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:91
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:91
terminated(happens(riseFrom(Sleep1,Risefrom),
		   Maptime,
		   Happens),
	   sleep1(Sleep1),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:93
% [agent,bed,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:93
% Initiates(RiseFrom(agent,bed),Sleep2(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:93

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(riseFrom(Agent, Bed),
                    sleep2(Agent),
                    Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:93
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:93
initiates(riseFrom(Sleep2,Risefrom),
	  sleep2(Sleep2),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:93
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:93
initiated(happens(riseFrom(Sleep2,Risefrom),
		  Maptime,
		  Happens),
	  sleep2(Sleep2),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:95
% [agent,bed,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:96
% Happens(RiseFrom(agent,bed),time) -> HoldsAt(Sleep1(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:96
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:96
happens(riseFrom(Agent, Bed), Time) ->
    holds_at(sleep1(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:96
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:96
reactive_rule([happens(riseFrom(Agent,Bed),Time)],
	      [holds(sleep1(Agent),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:98
%;--
%; Getting dressed causes a transition from Sleep2
%; to Sleep3, the normal state of awakeness:
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:102
% Terminates(GetDressed(agent),Sleep2(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:102

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(getDressed(Agent), sleep2(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:102
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:102
terminates(getDressed(Getdressed),
	   sleep2(Getdressed),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:102
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:102
terminated(happens(getDressed(Getdressed),
		   Maptime,
		   Happens),
	   sleep2(Getdressed),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:104
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:104
% Initiates(GetDressed(agent),Sleep3(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:104

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(getDressed(Agent), sleep3(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:104
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:104
initiates(getDressed(Getdressed),
	  sleep3(Getdressed),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:104
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:104
initiated(happens(getDressed(Getdressed),
		  Maptime,
		  Happens),
	  sleep3(Getdressed),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:106
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:106
% Happens(GetDressed(agent),time) -> HoldsAt(Sleep2(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:106
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:106
happens(getDressed(Agent), Time) ->
    holds_at(sleep2(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:106
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:106
reactive_rule([happens(getDressed(Agent),Time)],
	      [holds(sleep2(Agent),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:108
%;--
%; Getting tired causes a transition from Sleep3
%; to Sleep4:
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:112
% Terminates(GetTired(agent),Sleep3(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:112

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(getTired(Agent), sleep3(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:112
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:112
terminates(getTired(Gettired),
	   sleep3(Gettired),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:112
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:112
terminated(happens(getTired(Gettired),
		   Maptime,
		   Happens),
	   sleep3(Gettired),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:114
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:114
% Initiates(GetTired(agent),Sleep4(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:114

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(getTired(Agent), sleep4(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:114
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:114
initiates(getTired(Gettired),
	  sleep4(Gettired),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:114
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:114
initiated(happens(getTired(Gettired),Maptime,Happens),
	  sleep4(Gettired),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:116
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:116
% Happens(GetTired(agent),time) -> HoldsAt(Sleep3(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:116
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:116
happens(getTired(Agent), Time) ->
    holds_at(sleep3(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:116
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:116
reactive_rule([happens(getTired(Agent),Time)],
	      [holds(sleep3(Agent),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:118
%;--
%; Getting undressed causes a transition from Sleep4
%; to Sleep5:
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:122
% Terminates(GetUndressed(agent),Sleep4(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:122

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(getUndressed(Agent), sleep4(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:122
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:122
terminates(getUndressed(Getundressed),
	   sleep4(Getundressed),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:122
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:122
terminated(happens(getUndressed(Getundressed),
		   Maptime,
		   Happens),
	   sleep4(Getundressed),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:124
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:124
% Initiates(GetUndressed(agent),Sleep5(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:124

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(getUndressed(Agent), sleep5(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:124
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:124
initiates(getUndressed(Getundressed),
	  sleep5(Getundressed),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:124
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:124
initiated(happens(getUndressed(Getundressed),
		  Maptime,
		  Happens),
	  sleep5(Getundressed),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:126
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:126
% Happens(GetUndressed(agent),time) -> HoldsAt(Sleep4(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:126
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:126
happens(getUndressed(Agent), Time) ->
    holds_at(sleep4(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:126
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:126
reactive_rule([happens(getUndressed(Agent),Time)],
	      [holds(sleep4(Agent),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:128
%;--
%; Lying on a bed causes a transition from Sleep5
%; to Sleep6:
% [agent,bed,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:132
% Terminates(LieOn(agent,bed),Sleep5(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:132

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(lieOn(Agent, Bed), sleep5(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:132
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:132
terminates(lieOn(Sleep5,Lieon),
	   sleep5(Sleep5),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:132
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:132
terminated(happens(lieOn(Sleep5,Lieon),
		   Maptime,
		   Happens),
	   sleep5(Sleep5),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:134
% [agent,bed,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:134
% Initiates(LieOn(agent,bed),Sleep6(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:134

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(lieOn(Agent, Bed), sleep6(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:134
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:134
initiates(lieOn(Sleep6,Lieon),
	  sleep6(Sleep6),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:134
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:134
initiated(happens(lieOn(Sleep6,Lieon),
		  Maptime,
		  Happens),
	  sleep6(Sleep6),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:136
% [agent,bed,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:136
% Happens(LieOn(agent,bed),time) -> HoldsAt(Sleep5(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:136
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:136
happens(lieOn(Agent, Bed), Time) ->
    holds_at(sleep5(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:136
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:136
reactive_rule([happens(lieOn(Agent,Bed),Time)],
	      [holds(sleep5(Agent),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:138
%;--
%; Falling asleep causes a transition from Sleep6
%; to Sleep0:
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:142
% Terminates(FallAsleep(agent),Sleep6(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:142

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(fallAsleep(Agent), sleep6(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:142
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:142
terminates(fallAsleep(Fallasleep),
	   sleep6(Fallasleep),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:142
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:142
terminated(happens(fallAsleep(Fallasleep),
		   Maptime,
		   Happens),
	   sleep6(Fallasleep),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:144
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:144
% Initiates(FallAsleep(agent),Sleep0(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:144

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(fallAsleep(Agent), sleep0(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:144
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:144
initiates(fallAsleep(Fallasleep),
	  sleep0(Fallasleep),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:144
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:144
initiated(happens(fallAsleep(Fallasleep),
		  Maptime,
		  Happens),
	  sleep0(Fallasleep),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:146
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:146
% Happens(FallAsleep(agent),time) -> HoldsAt(Sleep6(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:146
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:146
happens(fallAsleep(Agent), Time) ->
    holds_at(sleep6(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:146
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:146
reactive_rule([happens(fallAsleep(Agent),Time)],
	      [holds(sleep6(Agent),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:148
%;--
%; agent acts on being in state Sleep5.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:151
% fluent ActOnSleep5(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
fluent(actOnSleep5(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
fluents([actOnSleep5/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
fluents([actOnSleep5/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
meta_argtypes(actOnSleep5(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
meta_argtypes(actOnSleep5(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
mpred_prop(actOnSleep5(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
mpred_prop(actOnSleep5(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
meta_argtypes(actOnSleep5(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
meta_argtypes(actOnSleep5(agent)).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:152
% noninertial ActOnSleep5
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:153
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:153
noninertial(actOnSleep5).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:153
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:153
noninertial(actOnSleep5).
%; We reduce the number of models by asserting that
%; an agent only acts on being in state Sleep5 while in
%; that state:
% [agent,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:158
% !HoldsAt(Sleep5(agent),time) ->
% !HoldsAt(ActOnSleep5(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:159
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:159
holds_at(neg(sleep5(Agent)), Time) ->
    holds_at(neg(actOnSleep5(Agent)), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:159
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:159
reactive_rule([holds(not(sleep5(Agent)),Time)],
	      [holds(not(actOnSleep5(Agent)),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:161
%; Undressed is like IntentionToPlay
%; ActOnSleep5 is like ActOnIntentionToPlay
%; A trigger axiom states that if an agent is in state Sleep5,
%; the agent acts on this state, the agent is in a room, and
%; a bed is at the room, the agent lies on the bed:
% [agent,room,bed,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:168
% HoldsAt(Sleep5(agent),time) &
% HoldsAt(ActOnSleep5(agent),time) &
% HoldsAt(At(agent,room),time) &
% HoldsAt(At(bed,room),time) ->
% Happens(LieOn(agent,bed),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:172
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:172
holds_at(sleep5(Agent), Time), holds_at(actOnSleep5(Agent), Time), holds_at(at(Agent, Room), Time), holds_at(at(Bed, Room), Time) ->
    happens(lieOn(Agent, Bed), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:172
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:172
reactive_rule([ holds(sleep5(Agent),Time),
		holds(actOnSleep5(Agent),Time),
		holds(loc_at(Agent,Room),Time),
		holds(loc_at(Bed,Room),Time)
	      ],
	      [happens(lieOn(Agent,Bed),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:174
%; A precondition axiom states that for
%; an agent to lie on a bed,
%; the agent must be in state Sleep5,
%; the agent must act on this state, and
%; there must be a room such that
%; the agent is in the room and the bed is in the room:
% [agent,bed,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:181
% Happens(LieOn(agent,bed),time) ->
% HoldsAt(Sleep5(agent),time) &
% HoldsAt(ActOnSleep5(agent),time) &
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:184
% {room}% 
%  HoldsAt(At(agent,room),time) &
%  HoldsAt(At(bed,room),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186

 /*  exists([Room],
    happens(lieOn(Agent, Bed), Time) ->
       holds_at(sleep5(Agent), Time),
       holds_at(actOnSleep5(Agent), Time),
       holds_at(at(Agent, Room), Time),
       holds_at(at(Bed, Room), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186

 /*  not(happens(lieOn(Agent, Bed), Time)) :-
       (   not(holds_at(sleep5(Agent), Time))
       ;   not(holds_at(actOnSleep5(Agent), Time))
       ;   not(holds_at(at(Agent, Exists_Room), Time))
       ;   not(holds_at(at(Bed, Exists_Room), Time))
       ),
       some(Exists_Room, '$kolem_Fn_61'(Agent, Bed, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186

 /*  [(holds_at(neg(sleep5(Agent)), Time);holds_at(neg(actOnSleep5(Agent)), Time);holds_at(neg(at(Agent, Exists_Room)), Time);holds_at(neg(at(Bed, Exists_Room)), Time)), some(Exists_Room, '$kolem_Fn_61'(Agent, Bed, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(lieOn(Agent, Bed), Time))).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
(holds_at(neg(sleep5(Sleep5)), Time5);holds_at(neg(actOnSleep5(Sleep5)), Time5);holds_at(neg(at(Sleep5, Location)), Time5);holds_at(neg(at(Lieon, Location)), Time5)), some(Location, '$kolem_Fn_61'(Sleep5, Lieon, Time5)) ->
    not(happens(lieOn(Sleep5, Lieon), Time5)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
 reactive_rule([  (at(not(sleep5(Sleep5)), Time5);at(not(actOnSleep5(Sleep5)), Time5);at(not(loc_at(Sleep5, Location)), Time5);at(not(loc_at(Lieon, Location)), Time5)),
                   some(Location,
                        '$kolem_Fn_61'(Sleep5, Lieon, Time5))
                 ],
                 [not(happens(lieOn(Sleep5, Lieon), Time5))]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186

 /*  holds_at(sleep5(Agent), Time) :-
       happens(lieOn(Agent, Bed), Time),
       some(Exists_Room, '$kolem_Fn_61'(Agent, Bed, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186

 /*  [happens(lieOn(Agent, Bed), Time), some(Exists_Room, '$kolem_Fn_61'(Agent, Bed, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(sleep5(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
happens(lieOn(Kolem_Fn_61P_Num3_V, Lieon10), Maptime), some(_, '$kolem_Fn_61'(Kolem_Fn_61P_Num3_V, Lieon10, Maptime)) ->
    holds_at(sleep5(Kolem_Fn_61P_Num3_V), Maptime).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
reactive_rule([ happens(lieOn(Kolem_Fn_61P_Num3_V,Lieon10),
			Maptime),
		some(_,
		     '$kolem_Fn_61'(Kolem_Fn_61P_Num3_V,
				    Lieon10,
				    Maptime))
	      ],
	      [holds(sleep5(Kolem_Fn_61P_Num3_V),Maptime)]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186

 /*  holds_at(actOnSleep5(Agent), Time) :-
       happens(lieOn(Agent, Bed), Time),
       some(Exists_Room, '$kolem_Fn_61'(Agent, Bed, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186

 /*  [happens(lieOn(Agent, Bed), Time), some(Exists_Room, '$kolem_Fn_61'(Agent, Bed, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(actOnSleep5(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
happens(lieOn(Kolem_Fn_61P_Num3_V14, Lieon13), Maptime12), some(_, '$kolem_Fn_61'(Kolem_Fn_61P_Num3_V14, Lieon13, Maptime12)) ->
    holds_at(actOnSleep5(Kolem_Fn_61P_Num3_V14), Maptime12).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
reactive_rule([ happens(lieOn(Kolem_Fn_61P_Num3_V14,
			      Lieon13),
			Maptime12),
		some(_,
		     '$kolem_Fn_61'(Kolem_Fn_61P_Num3_V14,
				    Lieon13,
				    Maptime12))
	      ],
	      [ holds(actOnSleep5(Kolem_Fn_61P_Num3_V14),
		      Maptime12)
	      ]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186

 /*  holds_at(at(Agent, Exists_Room), Time) :-
       happens(lieOn(Agent, Bed), Time),
       some(Exists_Room, '$kolem_Fn_61'(Agent, Bed, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186

 /*  [happens(lieOn(Agent, Bed), Time), some(Exists_Room, '$kolem_Fn_61'(Agent, Bed, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Agent, Exists_Room), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
happens(lieOn(Kolem_Fn_61P_Num3_V18, Lieon17), Maptime15), some(Location16, '$kolem_Fn_61'(Kolem_Fn_61P_Num3_V18, Lieon17, Maptime15)) ->
    holds_at(at(Kolem_Fn_61P_Num3_V18, Location16), Maptime15).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
reactive_rule([ happens(lieOn(Kolem_Fn_61P_Num3_V18,
			      Lieon17),
			Maptime15),
		some(Location16,
		     '$kolem_Fn_61'(Kolem_Fn_61P_Num3_V18,
				    Lieon17,
				    Maptime15))
	      ],
	      [ holds(loc_at(Kolem_Fn_61P_Num3_V18,
			     Location16),
		      Maptime15)
	      ]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186

 /*  holds_at(at(Bed, Exists_Room), Time) :-
       happens(lieOn(Agent, Bed), Time),
       some(Exists_Room, '$kolem_Fn_61'(Agent, Bed, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186

 /*  [happens(lieOn(Agent, Bed), Time), some(Exists_Room, '$kolem_Fn_61'(Agent, Bed, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Bed, Exists_Room), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
happens(lieOn(Kolem_Fn_61P_Num3_V22, Lieon21), Maptime19), some(Location20, '$kolem_Fn_61'(Kolem_Fn_61P_Num3_V22, Lieon21, Maptime19)) ->
    holds_at(at(Lieon21, Location20), Maptime19).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:186
reactive_rule([ happens(lieOn(Kolem_Fn_61P_Num3_V22,
			      Lieon21),
			Maptime19),
		some(Location20,
		     '$kolem_Fn_61'(Kolem_Fn_61P_Num3_V22,
				    Lieon21,
				    Maptime19))
	      ],
	      [ holds(loc_at(Lieon21,Location20),
		      Maptime19)
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:188
%; (body) posture
%; agent lies on physobj.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:191
% event LieOn(agent,physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
event(lieOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
actions([lieOn/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
actions([lieOn/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
meta_argtypes(lieOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
meta_argtypes(lieOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
mpred_prop(lieOn(agent,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
mpred_prop(lieOn(agent,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
meta_argtypes(lieOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:192
meta_argtypes(lieOn(agent,physobj)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:193
%; agent sits on physobj.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:194
% event SitOn(agent,physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
event(sitOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
actions([sitOn/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
actions([sitOn/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
meta_argtypes(sitOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
meta_argtypes(sitOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
mpred_prop(sitOn(agent,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
mpred_prop(sitOn(agent,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
meta_argtypes(sitOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:195
meta_argtypes(sitOn(agent,physobj)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:196
% [agent,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:197
% Happens(SitOn(agent,physobj),time) ->
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:198
% {location}% 
%  HoldsAt(At(agent,location),time) &
%  HoldsAt(At(physobj,location),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200

 /*  exists([Location],
    happens(sitOn(Agent, Physobj), Time) ->
       holds_at(at(Agent, Location), Time),
       holds_at(at(Physobj, Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200

 /*  not(happens(sitOn(Agent, Physobj), Time)) :-
       (   not(holds_at(at(Agent, Exists_Location), Time))
       ;   not(holds_at(at(Physobj, Exists_Location), Time))
       ),
       some(Exists_Location,
            '$kolem_Fn_62'(Agent, Physobj, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200

 /*  [(holds_at(neg(at(Agent, Exists_Location)), Time);holds_at(neg(at(Physobj, Exists_Location)), Time)), some(Exists_Location, '$kolem_Fn_62'(Agent, Physobj, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(sitOn(Agent, Physobj), Time))).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200
(holds_at(neg(at(Kolem_Fn_62P_Num3_V, Location5)), Time6);holds_at(neg(at(Siton, Location5)), Time6)), some(Location5, '$kolem_Fn_62'(Kolem_Fn_62P_Num3_V, Siton, Time6)) ->
    not(happens(sitOn(Kolem_Fn_62P_Num3_V, Siton), Time6)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200
 reactive_rule([  (at(not(loc_at(Kolem_Fn_62P_Num3_V, Location5)), Time6);at(not(loc_at(Siton, Location5)), Time6)),
                   some(Location5,
                        '$kolem_Fn_62'(Kolem_Fn_62P_Num3_V,
                                       Siton,
                                       Time6))
                 ],
                 [ not(happens(sitOn(Kolem_Fn_62P_Num3_V, Siton),
                               Time6))
                 ]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200

 /*  holds_at(at(Agent, Exists_Location), Time) :-
       happens(sitOn(Agent, Physobj), Time),
       some(Exists_Location,
            '$kolem_Fn_62'(Agent, Physobj, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200

 /*  [happens(sitOn(Agent, Physobj), Time), some(Exists_Location, '$kolem_Fn_62'(Agent, Physobj, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Agent, Exists_Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200
happens(sitOn(Kolem_Fn_62P_Num3_V12, Siton11), Maptime), some(Location10, '$kolem_Fn_62'(Kolem_Fn_62P_Num3_V12, Siton11, Maptime)) ->
    holds_at(at(Kolem_Fn_62P_Num3_V12, Location10), Maptime).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200
reactive_rule([ happens(sitOn(Kolem_Fn_62P_Num3_V12,
			      Siton11),
			Maptime),
		some(Location10,
		     '$kolem_Fn_62'(Kolem_Fn_62P_Num3_V12,
				    Siton11,
				    Maptime))
	      ],
	      [ holds(loc_at(Kolem_Fn_62P_Num3_V12,
			     Location10),
		      Maptime)
	      ]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200

 /*  holds_at(at(Physobj, Exists_Location), Time) :-
       happens(sitOn(Agent, Physobj), Time),
       some(Exists_Location,
            '$kolem_Fn_62'(Agent, Physobj, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200

 /*  [happens(sitOn(Agent, Physobj), Time), some(Exists_Location, '$kolem_Fn_62'(Agent, Physobj, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Physobj, Exists_Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200
happens(sitOn(Kolem_Fn_62P_Num3_V16, Siton15), Maptime13), some(Location14, '$kolem_Fn_62'(Kolem_Fn_62P_Num3_V16, Siton15, Maptime13)) ->
    holds_at(at(Siton15, Location14), Maptime13).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:200
reactive_rule([ happens(sitOn(Kolem_Fn_62P_Num3_V16,
			      Siton15),
			Maptime13),
		some(Location14,
		     '$kolem_Fn_62'(Kolem_Fn_62P_Num3_V16,
				    Siton15,
				    Maptime13))
	      ],
	      [ holds(loc_at(Siton15,Location14),
		      Maptime13)
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:202
%; agent rises from physobj.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:203
% event RiseFrom(agent,physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
event(riseFrom(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
actions([riseFrom/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
actions([riseFrom/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
meta_argtypes(riseFrom(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
meta_argtypes(riseFrom(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
mpred_prop(riseFrom(agent,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
mpred_prop(riseFrom(agent,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
meta_argtypes(riseFrom(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:204
meta_argtypes(riseFrom(agent,physobj)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:205
%; agent is lying on physobj.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:206
% fluent LyingOn(agent,physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
fluent(lyingOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
fluents([lyingOn/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
fluents([lyingOn/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
meta_argtypes(lyingOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
meta_argtypes(lyingOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
mpred_prop(lyingOn(agent,physobj),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
mpred_prop(lyingOn(agent,physobj),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
meta_argtypes(lyingOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
meta_argtypes(lyingOn(agent,physobj)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:207
%; agent is sitting on physobj.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:208
% fluent SittingOn(agent,physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
fluent(sittingOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
fluents([sittingOn/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
fluents([sittingOn/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
meta_argtypes(sittingOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
meta_argtypes(sittingOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
mpred_prop(sittingOn(agent,physobj),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
mpred_prop(sittingOn(agent,physobj),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
meta_argtypes(sittingOn(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
meta_argtypes(sittingOn(agent,physobj)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:209
%; agent is standing.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:210
% fluent Standing(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
fluent(standing(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
fluents([standing/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
fluents([standing/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
meta_argtypes(standing(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
meta_argtypes(standing(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
mpred_prop(standing(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
mpred_prop(standing(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
meta_argtypes(standing(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:211
meta_argtypes(standing(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:212
%; agent is lying down.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:213
% fluent Lying(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
fluent(lying(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
fluents([lying/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
fluents([lying/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
meta_argtypes(lying(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
meta_argtypes(lying(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
mpred_prop(lying(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
mpred_prop(lying(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
meta_argtypes(lying(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
meta_argtypes(lying(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:214
%; agent is sitting.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:215
% fluent Sitting(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
fluent(sitting(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
fluents([sitting/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
fluents([sitting/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
meta_argtypes(sitting(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
meta_argtypes(sitting(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
mpred_prop(sitting(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
mpred_prop(sitting(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
meta_argtypes(sitting(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
meta_argtypes(sitting(agent)).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:216
% noninertial Lying
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:217
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:217
noninertial(lying).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:217
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:217
noninertial(lying).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:217
% noninertial Sitting
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:218
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:218
noninertial(sitting).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:218
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:218
noninertial(sitting).
%; At any time, an agent is either lying, sitting, or standing:

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:220
% xor Lying, Sitting, Standing
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:221

 /*  fix_axiom_head(Time) ->
       [  (==>)xor[lying, sitting, standing],
          (->),
         holds_at((==>)xor[lying, sitting, standing], Time)
       ].
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:221
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:221
holds_at((==>)xor[lying,sitting,standing],Time1).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:221
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:221
l_int(holds((==>)xor[lying,sitting,standing],Time1),[]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:222
% [agent,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:223
% HoldsAt(LyingOn(agent,physobj),time) ->
% HoldsAt(Lying(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:224
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:224
holds_at(lyingOn(Agent, Physobj), Time) ->
    holds_at(lying(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:224
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:224
reactive_rule([holds(lyingOn(Agent,Physobj),Time)],
	      [holds(lying(Agent),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:226
% [agent,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:227
% HoldsAt(SittingOn(agent,physobj),time) ->
% HoldsAt(Sitting(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:228
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:228
holds_at(sittingOn(Agent, Physobj), Time) ->
    holds_at(sitting(Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:228
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:228
reactive_rule([holds(sittingOn(Agent,Physobj),Time)],
	      [holds(sitting(Agent),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:230
%; State constraints represent that an agent can lie or sit
%; on at most one object at a time:
% [agent,physobj1,physobj2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:233
% HoldsAt(LyingOn(agent,physobj1),time) &
% HoldsAt(LyingOn(agent,physobj2),time) ->
% physobj1=physobj2.
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:235
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:235
holds_at(lyingOn(Agent, Physobj1), Time), holds_at(lyingOn(Agent, Physobj2), Time) ->
    equals(Physobj1, Physobj2).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:235
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:235
reactive_rule([ holds(lyingOn(Agent,Physobj1),Time),
		holds(lyingOn(Agent,Physobj2),Time)
	      ],
	      [equals(Physobj1,Physobj2)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:237
% [agent,physobj1,physobj2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:238
% HoldsAt(SittingOn(agent,physobj1),time) &
% HoldsAt(SittingOn(agent,physobj2),time) ->
% physobj1=physobj2.
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:240
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:240
holds_at(sittingOn(Agent, Physobj1), Time), holds_at(sittingOn(Agent, Physobj2), Time) ->
    equals(Physobj1, Physobj2).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:240
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:240
reactive_rule([ holds(sittingOn(Agent,Physobj1),Time),
		holds(sittingOn(Agent,Physobj2),Time)
	      ],
	      [equals(Physobj1,Physobj2)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:242
%; An effect axiom states that if an agent is standing and
%; lies on a physical object, the agent will be lying on
%; the physical object:
% [agent,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:246
% HoldsAt(Standing(agent),time) ->
% Initiates(LieOn(agent,physobj),
%           LyingOn(agent,physobj),
%           time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:249
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:249
holds_at(standing(Agent), Time) ->
    initiates(lieOn(Agent, Physobj),
              lyingOn(Agent, Physobj),
              Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:249
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:249
reactive_rule([holds(standing(Agent),Time)],
	      [ initiates(lieOn(Agent,Physobj),
			  at(lyingOn(Agent,Physobj),
			     Time))
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:251
%; An effect axiom states that if an agent
%; lies on a physical object, the agent will no longer
%; be standing:
% [agent,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:255
% Terminates(LieOn(agent,physobj),
%            Standing(agent),
%            time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:257

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(lieOn(Agent, Physobj),
                     standing(Agent),
                     Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:257
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:257
terminates(lieOn(Standing,Lieon),
	   standing(Standing),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:257
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:257
terminated(happens(lieOn(Standing,Lieon),
		   Maptime,
		   Happens),
	   standing(Standing),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:259
%; An effect axiom states that if an agent is standing and
%; sits on a physical object, the agent will be sitting on
%; the physical object:
% [agent,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:263
% HoldsAt(Standing(agent),time) ->
% Initiates(SitOn(agent,physobj),
%           SittingOn(agent,physobj),
%           time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:266
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:266
holds_at(standing(Agent), Time) ->
    initiates(sitOn(Agent, Physobj),
              sittingOn(Agent, Physobj),
              Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:266
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:266
reactive_rule([holds(standing(Agent),Time)],
	      [ initiates(sitOn(Agent,Physobj),
			  at(sittingOn(Agent,Physobj),
			     Time))
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:268
%; An effect axiom states that if an agent
%; sits on a physical object, the agent will no longer
%; be standing:
% [agent,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:272
% Terminates(SitOn(agent,physobj),
%            Standing(agent),
%            time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:274

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(sitOn(Agent, Physobj),
                     standing(Agent),
                     Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:274
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:274
terminates(sitOn(Standing,Siton),
	   standing(Standing),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:274
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:274
terminated(happens(sitOn(Standing,Siton),
		   Maptime,
		   Happens),
	   standing(Standing),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:276
%; An effect axiom states that if an agent
%; is sitting or lying on a physical object and
%; the agent rises from the physical object,
%; the agent will be standing:
% [agent,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:281
% (HoldsAt(SittingOn(agent,physobj),time) |
%  HoldsAt(LyingOn(agent,physobj),time)) ->
% Initiates(RiseFrom(agent,physobj),
%           Standing(agent),
%           time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:285
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:285
holds_at(sittingOn(Agent, Physobj), Time);holds_at(lyingOn(Agent, Physobj), Time) ->
    initiates(riseFrom(Agent, Physobj),
              standing(Agent),
              Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:285
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:285
 reactive_rule([  (at(sittingOn(Agent, Physobj), Time);at(lyingOn(Agent, Physobj), Time))
                 ],
                 [ initiates(riseFrom(Agent, Physobj),
                             at(standing(Agent), Time))
                 ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:287
%; An effect axiom states that if an agent is sitting on
%; a physical object and the agent rises from the physical
%; object, the agent will no longer be sitting on the
%; physical object:
% [agent,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:292
% HoldsAt(SittingOn(agent,physobj),time) ->
% Terminates(RiseFrom(agent,physobj),
%            SittingOn(agent,physobj),
%            time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:295
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:295
holds_at(sittingOn(Agent, Physobj), Time) ->
    terminates(riseFrom(Agent, Physobj),
               sittingOn(Agent, Physobj),
               Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:295
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:295
reactive_rule([holds(sittingOn(Agent,Physobj),Time)],
	      [ terminates(riseFrom(Agent,Physobj),
			   at(sittingOn(Agent,Physobj),
			      Time))
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:297
%; An effect axiom states that if an agent is lying on
%; a physical object and the agent rises from the physical
%; object, the agent will no longer be lying on the
%; physical object:
% [agent,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:302
% HoldsAt(LyingOn(agent,physobj),time) ->
% Terminates(RiseFrom(agent,physobj),
%            LyingOn(agent,physobj),
%            time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:305
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:305
holds_at(lyingOn(Agent, Physobj), Time) ->
    terminates(riseFrom(Agent, Physobj),
               lyingOn(Agent, Physobj),
               Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:305
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:305
reactive_rule([holds(lyingOn(Agent,Physobj),Time)],
	      [ terminates(riseFrom(Agent,Physobj),
			   at(lyingOn(Agent,Physobj),
			      Time))
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:307
%; dressing
%; agent gets undressed.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:310
% event GetDressed(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
event(getDressed(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
actions([getDressed/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
actions([getDressed/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
meta_argtypes(getDressed(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
meta_argtypes(getDressed(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
mpred_prop(getDressed(agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
mpred_prop(getDressed(agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
meta_argtypes(getDressed(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
meta_argtypes(getDressed(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:311
%; agent gets dressed.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:312
% event GetUndressed(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
event(getUndressed(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
actions([getUndressed/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
actions([getUndressed/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
meta_argtypes(getUndressed(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
meta_argtypes(getUndressed(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
mpred_prop(getUndressed(agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
mpred_prop(getUndressed(agent),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
meta_argtypes(getUndressed(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
meta_argtypes(getUndressed(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:313
%; agent is dressed.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:314
% fluent Dressed(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
fluent(dressed(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
fluents([dressed/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
fluents([dressed/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
meta_argtypes(dressed(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
meta_argtypes(dressed(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
mpred_prop(dressed(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
mpred_prop(dressed(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
meta_argtypes(dressed(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:315
meta_argtypes(dressed(agent)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:316
%; Effect axioms deal with getting dressed and undressed:
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:317
% Initiates(GetDressed(agent),Dressed(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:317

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(getDressed(Agent), dressed(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:317
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:317
initiates(getDressed(Getdressed),
	  dressed(Getdressed),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:317
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:317
initiated(happens(getDressed(Getdressed),
		  Maptime,
		  Happens),
	  dressed(Getdressed),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:318
% [agent,time]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:318
% Terminates(GetUndressed(agent),Dressed(agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:318

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(getUndressed(Agent), dressed(Agent), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:318
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:318
terminates(getUndressed(Getundressed),
	   dressed(Getundressed),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:318
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:318
terminated(happens(getUndressed(Getundressed),
		   Maptime,
		   Happens),
	   dressed(Getundressed),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e:320
%; End of file.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:40
% fire Fire1
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:41
t(fire,fire1).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:41
fire(fire1).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:41
% HoldsAt(At(Fire1,Outside1),0).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:41

 /*  [] ->
       ta(TaP_Num4_V, tvs1=[], tvs2=[], initially(at(fire1, outside1))).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:41
initially(at(fire1,outside1)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:41
initial_state([loc_at(fire1,outside1)]).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:43
% agent Perp1
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:44
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:44
t(agent,perp1).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:44
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:44
agent(perp1).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:45
% physobj PhysTarget1
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:46
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:46
t(physobj,physTarget1).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:46
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:46
physobj(physTarget1).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:46
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:46
% HoldsAt(Intact(PhysTarget1),0).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:46

 /*  [] ->
       ta(TaP_Num4_V, tvs1=[], tvs2=[], initially(intact(physTarget1))).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:46
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:46
initially(intact(physTarget1)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:46
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:46
initial_state([intact(physTarget1)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:47
% HoldsAt(At(PhysTarget1,Outside1),0).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:47

 /*  [] ->
       ta(TaP_Num4_V, tvs1=[], tvs2=[], initially(at(physTarget1, outside1))).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:47
initially(at(physTarget1,outside1)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:47
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:47
initial_state([loc_at(physTarget1,outside1)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:49
%; room-scale topological space

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:50
% outside Outside1
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:51
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:51
t(outside,outside1).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:51
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:51
l_int(holds(outside(outside1),Holds),[]).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:51
% outside Outside2
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:52
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:52
t(outside,outside2).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:52
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:52
l_int(holds(outside(outside2),Holds),[]).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:52
% room Inside1
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:53
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:53
t(room,inside1).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:53
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:53
room(inside1).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:53
% door Door1
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:54
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:54
t(door,door1).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:54
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:54
door(door1).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:54
% building Building1
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:55
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:55
t(building,building1).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:55
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:55
building(building1).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:55
% street Street1
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:56
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:56
t(street,street1).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:56
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:56
street(street1).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:56
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:56
% Side1(Door1)=Outside1.
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:56

 /*  [] ->
       ta(TaP_Num4_V, tvs1=[], tvs2=[], equals(side1(door1), outside1)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:56
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:56
equals(side1(door1),outside1).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:56
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:56
equals(side1(door1),outside1).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:57
% Side2(Door1)=Inside1.
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:57

 /*  [] ->
       ta(TaP_Num4_V, tvs1=[], tvs2=[], equals(side2(door1), inside1)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:57
equals(side2(door1),inside1).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:57
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:57
equals(side2(door1),inside1).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:58
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:58
% LookOutOnto(Inside1)=Outside1.
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:58

 /*  [] ->
       ta(TaP_Num4_V, tvs1=[], tvs2=[], equals(lookOutOnto(inside1), outside1)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:58
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:58
equals(lookOutOnto(inside1),outside1).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:58
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:58
equals(lookOutOnto(inside1),outside1).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:59
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:59
% Floor(Inside1)=1.
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:59

 /*  [] ->
       ta(TaP_Num4_V, tvs1=[], tvs2=[], equals(floor(inside1), 1)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:59
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:59
equals(floor(inside1),1).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:59
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:59
equals(floor(inside1),1).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:60
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:60
% BuildingOf(Inside1)=Building1.
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:60

 /*  [] ->
       ta(TaP_Num4_V, tvs1=[], tvs2=[], equals(buildingOf(inside1), building1)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:60
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:60
equals(buildingOf(inside1),building1).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:60
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:60
equals(buildingOf(inside1),building1).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:61
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:61
% Side1(Street1)=Outside1.
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:61

 /*  [] ->
       ta(TaP_Num4_V, tvs1=[], tvs2=[], equals(side1(street1), outside1)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:61
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:61
equals(side1(street1),outside1).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:61
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:61
equals(side1(street1),outside1).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:62
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:62
% Side2(Street1)=Outside2.
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:62

 /*  [] ->
       ta(TaP_Num4_V, tvs1=[], tvs2=[], equals(side2(street1), outside2)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:62
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:62
equals(side2(street1),outside2).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:62
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:62
equals(side2(street1),outside2).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:64
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:64
% HoldsAt(Alive(Perp1),0).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:64

 /*  [] ->
       ta(TaP_Num4_V, tvs1=[], tvs2=[], initially(alive(perp1))).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:64
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:64
initially(alive(perp1)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:64
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:64
initial_state([alive(perp1)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:65
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:65
% HoldsAt(Awake(Perp1),0).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:65

 /*  [] ->
       ta(TaP_Num4_V, tvs1=[], tvs2=[], initially(awake(perp1))).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:65
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:65
initially(awake(perp1)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:65
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:65
initial_state([awake(perp1)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:66
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:66
% HoldsAt(Standing(Perp1),0).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:66

 /*  [] ->
       ta(TaP_Num4_V, tvs1=[], tvs2=[], initially(standing(perp1))).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:66
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:66
initially(standing(perp1)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:66
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:66
initial_state([standing(perp1)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:67
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:67
% HoldsAt(Sleep2(Perp1),0).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:67

 /*  [] ->
       ta(TaP_Num4_V, tvs1=[], tvs2=[], initially(sleep2(perp1))).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:67
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:67
initially(sleep2(perp1)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:67
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:67
initial_state([sleep2(perp1)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:68
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:68
% !HoldsAt(Injured(Perp1),0).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:68

 /*  [] ->
       ta(TaP_Num4_V, tvs1=[], tvs2=[], initially(neg(injured(perp1)))).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:68
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:68
initially(neg(injured(perp1))).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:68
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:68
initial_state([not(injured(perp1))]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:69
% [object]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:69
% !HoldsAt(Holding(Perp1,object),0).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:69

 /*  [] ->
       ta(TaP_Num4_V,
          tvs1=[],
          tvs2=[],
          initially(neg(holding(perp1, Object)))).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:69
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:69
initially(neg(holding(perp1,Holding))).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:69
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:69
initial_state([not(holding(perp1,Holding))]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:70
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:70
% HoldsAt(At(Perp1,Outside2),0).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:70

 /*  [] ->
       ta(TaP_Num4_V, tvs1=[], tvs2=[], initially(at(perp1, outside2))).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:70
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:70
initially(at(perp1,outside2)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:70
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:70
initial_state([loc_at(perp1,outside2)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:71
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:71
% !HoldsAt(DoorIsOpen(Door1),0).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:71

 /*  [] ->
       ta(TaP_Num4_V, tvs1=[], tvs2=[], initially(neg(doorIsOpen(door1)))).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:71
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:71
initially(neg(doorIsOpen(door1))).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:71
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:71
initial_state([not(doorIsOpen(door1))]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:72
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:72
% HoldsAt(DoorUnlocked(Door1),0).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:72

 /*  [] ->
       ta(TaP_Num4_V, tvs1=[], tvs2=[], initially(doorUnlocked(door1))).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:72
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:72
initially(doorUnlocked(door1)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:72
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:72
initial_state([doorUnlocked(door1)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:73
% [physobj,fire,offset]
 
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:73
% !HoldsAt(Burning(physobj,fire,offset),0).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:73

 /*  [] ->
       ta(TaP_Num4_V,
          tvs1=[],
          tvs2=[],
          initially(neg(burning(Physobj, Fire, Offset)))).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:73
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:73
initially(neg(burning(BurningP_Num3_V,_,Burning))).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:73
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:73
initial_state([ not(burning(BurningP_Num3_V,
			    _,
			    Burning))
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:75
%; narrative


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:76
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:76
% Happens(WalkStreet21(Perp1,Street1),0).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:76

 /*  [] ->
       ta(TaP_Num4_V,
          tvs1=[start],
          tvs2=[start],
          happens(walkStreet21(perp1, street1), start)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:76
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:76
happens(walkStreet21(perp1,street1),start).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:76
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:76
observe(at(walkStreet21(perp1,street1),start)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:76
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:76
observe(at(walkStreet21(perp1,street1),start)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:77
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:77
% Happens(SetFireTo(Perp1,PhysTarget1,Fire1,3),1).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:77

 /*  [b(start, Maptime), ignore(start+1==Maptime)] ->
       ta(TaP_Num4_V,
          tvs1=[start+1],
          tvs2=[Maptime, start],
          happens(setFireTo(perp1, physTarget1, fire1, 3), Maptime)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:77
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:77
b(start, Maptime2) ->
    happens(setFireTo(perp1, physTarget1, fire1, 3), Maptime2).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:77
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:77
reactive_rule([b(start,Maptime2)],
	      [ happens(setFireTo(perp1,physTarget1,fire1,3),
			Maptime2)
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:78
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:78
% Happens(WalkStreet12(Perp1,Street1),2).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:78

 /*  [b(start, Start_Num2), toffset(start, 2, Start_Num2), ignore(start+2==Start_Num2)] ->
       ta(TaP_Num4_V,
          tvs1=[start+2],
          tvs2=[Start_Num2, start],
          happens(walkStreet12(perp1, street1), Start_Num2)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:78
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:78
b(start, Maptime), toffset(start, 2, Maptime) ->
    happens(walkStreet12(perp1, street1), Maptime).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:78
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:78
reactive_rule([b(start,Maptime),toffset(start,2,Maptime)],
	      [happens(walkStreet12(perp1,street1),Maptime)]).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:80
% range time 0 6
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:81
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:81
range(time,0,6).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:81
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:81
range(time,0,6).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:81
% range offset 0 3
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:82
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:82
range(offset,0,3).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:82
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:82
range(offset,0,3).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:82
% range diameter 0 0
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:83
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:83
range(diameter,0,0).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:83
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:83
range(diameter,0,0).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:84
% completion Happens
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:85
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:85
completion(happens).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:85
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Arson.e:85
completion(happens).
%; End of file.
