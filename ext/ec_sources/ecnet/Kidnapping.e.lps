:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',142).
% translate: unskipped  File: /pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e.lps 
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
% translate: begining  File: /pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e.lps 
% Thu, 08 Oct 2020 21:36:22 GMT File: <stream>(0x55894c217000)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; DEV-MUC3-0008
%; Kidnapping
%;
%; @article{Mueller:2004c,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "Understanding script-based stories using commonsense reasoning",
%;   journal = "Cognitive Systems Research",
%;   volume = "5",
%;   number = "4",
%;   pages = "307--340",
%; }
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',25).
% ignore SkyOf, GroundOf, Near, WalkFromTo, RunFromTo
% ignore(skyOf).
ignore(skyOf).
% ignore(groundOf).
ignore(groundOf).
% ignore(near).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',25).
ignore(near).
% ignore(walkFromTo).
ignore(walkFromTo).
% ignore(runFromTo).
ignore(runFromTo).

% ignore RollAlong, Diameter, Move, HoldSome
% ignore(rollAlong).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',25).
ignore(rollAlong).
% ignore(diameter).
ignore(diameter).
% ignore(move).
ignore(move).
% ignore(holdSome).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',25).
ignore(holdSome).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',27).
% ignore On, DoorUnlock, DoorLock
% ignore(on).
ignore(on).
% ignore(doorUnlock).
ignore(doorUnlock).
% ignore(doorLock).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',27).
ignore(doorLock).

% ignore WalkDownStaircase, WalkUpStaircase
% ignore(walkDownStaircase).
ignore(walkDownStaircase).
% ignore(walkUpStaircase).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',27).
ignore(walkUpStaircase).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',30).
% ignore Request, KnowRequest, Order, KnowOrder, SayGoodbye
% ignore(request).
ignore(request).
% ignore(knowRequest).
ignore(knowRequest).
% ignore(order).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',30).
ignore(order).
% ignore(knowOrder).
ignore(knowOrder).
% ignore(sayGoodbye).
ignore(sayGoodbye).

% ignore IntentionToWalkIn, InvitedIn
% ignore(intentionToWalkIn).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',30).
ignore(intentionToWalkIn).
% ignore(invitedIn).
ignore(invitedIn).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',32).
% ignore Snowing
% ignore(snowing).
ignore(snowing).

% ignore Like, Dislike, LikeSnow
% ignore(like).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',32).
ignore(like).
% ignore(dislike).
ignore(dislike).
% ignore(likeSnow).
ignore(likeSnow).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',35).
% load foundations/Root.e
:- if(is_e_toplevel).
:- load_e_cond('foundations/Root.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/foundations/Root.e',changed).
:- endif.

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',35).
:- if(is_e_toplevel).
:- load_e_cond('foundations/EC.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/foundations/EC.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',37).
% load answers/Mueller2003/Ontology.e
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2003/Ontology.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e',changed).
:- endif.

% load answers/Mueller2004c/OTSpaceM.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',37).
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2004c/OTSpaceM.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',39).
% load answers/Mueller2004c/RTSpaceM.e
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2004c/RTSpaceM.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/RTSpace.e',changed).
:- endif.

% load answers/Mueller2003/Feeling.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',39).
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2003/Feeling.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/Feeling.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',41).
% load answers/Mueller2004c/Condition.e
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2004c/Condition.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/Condition.e',changed).
:- endif.

% load answers/Mueller2004c/Gun.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',41).
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2004c/Gun.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/Gun.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',43).
% load answers/Mueller2003/Sleep.e
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2003/Sleep.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e',changed).
:- endif.

% load answers/Mueller2003/SpeechAct.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',43).
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2003/SpeechAct.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/SpeechAct.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',46).
% gun Gun1
% t(gun,gun1).
gun(gun1).

% bullet Bullet1
% t(bullet,bullet1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',46).
bullet(bullet1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',48).
% HoldsAt(Intact(Gun1),0).
% initially(
%    intact(gun1)).
initially intact(gun1).
 %  initial_state([intact(gun1)]).
 %  "% =================================".


% HoldsAt(Intact(Bullet1),0).
% initially(
%    intact(bullet1)).
initially intact(bullet1).
 %  initial_state([intact(bullet1)]).
 %  "% =================================".

% agent Perp1
% t(agent,perp1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',50).
agent(perp1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',53).
% agent HumanTarget1
% t(agent,humanTarget1).
agent(humanTarget1).


% HoldsAt(Calm(HumanTarget1),0).
% initially(
%    calm(humanTarget1)).
initially calm(humanTarget1).
 %  initial_state([calm(humanTarget1)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',55).
% HoldsAt(Alive(HumanTarget1),0).
% initially(
%    alive(humanTarget1)).
initially alive(humanTarget1).
 %  initial_state([alive(humanTarget1)]).
 %  "% =================================".


% HoldsAt(Awake(HumanTarget1),0).
% initially(
%    awake(humanTarget1)).
initially awake(humanTarget1).
 %  initial_state([awake(humanTarget1)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',57).
% HoldsAt(Standing(HumanTarget1),0).
% initially(
%    standing(humanTarget1)).
initially standing(humanTarget1).
 %  initial_state([standing(humanTarget1)]).
 %  "% =================================".


% HoldsAt(Sleep2(HumanTarget1),0).
% initially(
%    sleep2(humanTarget1)).
initially sleep2(humanTarget1).
 %  initial_state([sleep2(humanTarget1)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',59).
% !HoldsAt(Injured(HumanTarget1),0).
% initially(
%    neg(
%       injured(humanTarget1))).
initially not injured(humanTarget1).
 %  initial_state([not(injured(humanTarget1))]).
 %  "% =================================".


% [object]
 % !HoldsAt(Holding(HumanTarget1,object),0).
% initially(
%    neg(
%       holding(humanTarget1,Object))).
initially not holding(humanTarget1, Object).
 %  initial_state([not(holding(humanTarget1,Object))]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',61).
% HoldsAt(At(HumanTarget1,Outside1),0).
% initially(
%    at(humanTarget1,outside1)).
initially loc_at(humanTarget1, outside1).
 %  initial_state([loc_at(humanTarget1,outside1)]).
 %  "% =================================".


% [physobj1,physobj2]
 % !HoldsAt(Inside(physobj1,physobj2),0).
% initially(
%    neg(
%       inside(Physobj1,Physobj2))).
initially not inside(Physobj1, Physobj2).
 %  initial_state([not(inside(Physobj1,Physobj2))]).
 %  "% =================================".


%; prune

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',65).
% sort shoota, shootb, shooto, shooth, shootp
% sort(shoota).
sort(shoota).
% sort(shootb).
sort(shootb).
% sort(shooto).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',65).
sort(shooto).
% sort(shooth).
sort(shooth).
% sort(shootp).
sort(shootp).

% event! Shoot(shoota,shootb,shooto)
% event(
%    shoot(shoota,shootb,shooto)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',65).
events([shoot/3]).
% mpred_prop(
%    shoot(shoota,shootb,shooto), 
%    event).
mpred_prop(shoot(shoota,shootb,shooto),event).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',67).
% event! ShootInjure(shoota,shootb,shooth)
% event(
%    shootInjure(shoota,shootb,shooth)).
events([shootInjure/3]).
% mpred_prop(
%    shootInjure(shoota,shootb,shooth), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',67).
mpred_prop(shootInjure(shoota,shootb,shooth),event).

% event! ShootKill(shoota,shootb,shooth)
% event(
%    shootKill(shoota,shootb,shooth)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',67).
events([shootKill/3]).
% mpred_prop(
%    shootKill(shoota,shootb,shooth), 
%    event).
mpred_prop(shootKill(shoota,shootb,shooth),event).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',69).
% event! ShootDamage(shoota,shootb,shootp)
% event(
%    shootDamage(shoota,shootb,shootp)).
events([shootDamage/3]).
% mpred_prop(
%    shootDamage(shoota,shootb,shootp), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',69).
mpred_prop(shootDamage(shoota,shootb,shootp),event).

% event! ShootDestroy(shoota,shootb,shootp)
% event(
%    shootDestroy(shoota,shootb,shootp)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',69).
events([shootDestroy/3]).
% mpred_prop(
%    shootDestroy(shoota,shootb,shootp), 
%    event).
mpred_prop(shootDestroy(shoota,shootb,shootp),event).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',71).
% shoota! Perp1
% t(shoota,perp1).
shoota(perp1).

% shootb! Gun1
% t(shootb,gun1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',71).
shootb(gun1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',73).
% shooto! HumanTarget1
% t(shooto,humanTarget1).
shooto(humanTarget1).

% shooth! HumanTarget1
% t(shooth,humanTarget1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',73).
shooth(humanTarget1).
%; room-scale topological space

% outside Outside1
% t(outside,outside1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',76).
outside(outside1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',78).
% outside Outside2
% t(outside,outside2).
outside(outside2).

% room Inside1
% t(room,inside1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',78).
room(inside1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',80).
% door Door1
% t(door,door1).
door(door1).

% building Building1
% t(building,building1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',80).
building(building1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',82).
% street Street1
% t(street,street1).
street(street1).


% Side1(Door1)=Outside2.
% side1Pred(door1,outside2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',82).
side1Pred(door1,outside2).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',84).
% Side2(Door1)=Inside1.
% side2Pred(door1,inside1).
side2Pred(door1,inside1).


% LookOutOnto(Inside1)=Outside1.
% lookOutOntoPred(inside1,outside1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',84).
lookOutOntoPred(inside1,outside1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',86).
% Floor(Inside1)=1.
% floorPred(inside1,1).
floorPred(inside1,1).


% BuildingOf(Inside1)=Building1.
% building(inside1,building1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',86).
building(inside1,building1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',88).
% Side1(Street1)=Outside1.
% side1Pred(street1,outside1).
side1Pred(street1,outside1).


% Side2(Street1)=Outside2.
% side2Pred(street1,outside2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',88).
side2Pred(street1,outside2).


% HoldsAt(Calm(Perp1),0).
% initially(
%    calm(perp1)).
initially calm(perp1).
 %  initial_state([calm(perp1)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',92).
% HoldsAt(Alive(Perp1),0).
% initially(
%    alive(perp1)).
initially alive(perp1).
 %  initial_state([alive(perp1)]).
 %  "% =================================".


% HoldsAt(Awake(Perp1),0).
% initially(
%    awake(perp1)).
initially awake(perp1).
 %  initial_state([awake(perp1)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',94).
% HoldsAt(Standing(Perp1),0).
% initially(
%    standing(perp1)).
initially standing(perp1).
 %  initial_state([standing(perp1)]).
 %  "% =================================".


% HoldsAt(Sleep2(Perp1),0).
% initially(
%    sleep2(perp1)).
initially sleep2(perp1).
 %  initial_state([sleep2(perp1)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',96).
% !HoldsAt(Injured(Perp1),0).
% initially(
%    neg(
%       injured(perp1))).
initially not injured(perp1).
 %  initial_state([not(injured(perp1))]).
 %  "% =================================".


% [object]
 % !HoldsAt(Holding(Perp1,object),0).
% initially(
%    neg(
%       holding(perp1,Object))).
initially not holding(perp1, Object).
 %  initial_state([not(holding(perp1,Object))]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',98).
% HoldsAt(At(Gun1,Outside2),0).
% initially(
%    at(gun1,outside2)).
initially loc_at(gun1, outside2).
 %  initial_state([loc_at(gun1,outside2)]).
 %  "% =================================".


% HoldsAt(At(Perp1,Outside2),0).
% initially(
%    at(perp1,outside2)).
initially loc_at(perp1, outside2).
 %  initial_state([loc_at(perp1,outside2)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',100).
% HoldsAt(At(Bullet1,Outside2),0).
% initially(
%    at(bullet1,outside2)).
initially loc_at(bullet1, outside2).
 %  initial_state([loc_at(bullet1,outside2)]).
 %  "% =================================".


% HoldsAt(DoorIsOpen(Door1),0).
% initially(
%    doorIsOpen(door1)).
initially doorIsOpen(door1).
 %  initial_state([doorIsOpen(door1)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',102).
% HoldsAt(DoorUnlocked(Door1),0).
% initially(
%    doorUnlocked(door1)).
initially doorUnlocked(door1).
 %  initial_state([doorUnlocked(door1)]).
 %  "% =================================".


% [agent1,agent2]
 % !HoldsAt(ThreatenedBy(agent1,agent2),0).
% initially(
%    neg(
%       threatenedBy(Agent1,Agent2))).
initially not threatenedBy(Agent1, Agent2).
 %  initial_state([not(threatenedBy(Agent1,Agent2))]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',104).
% [agent1,agent2]
 % !HoldsAt(AngryAt(agent1,agent2),0).
% initially(
%    neg(
%       angryAt(Agent1,Agent2))).
initially not angryAt(Agent1, Agent2).
 %  initial_state([not(angryAt(Agent1,Agent2))]).
 %  "% =================================".


% [physobj1,physobj2]
 % !HoldsAt(Inside(physobj1,physobj2),0).
% initially(
%    neg(
%       inside(Physobj1,Physobj2))).
initially not inside(Physobj1, Physobj2).
 %  initial_state([not(inside(Physobj1,Physobj2))]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',106).
% [agent,object]
 % !HoldsAt(Love(agent,object),0).
% initially(
%    neg(
%       love(Agent,Object))).
initially not love(Agent, Object).
 %  initial_state([not(love(Agent,Object))]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',108).
%; narrative


% Happens(PickUp(Perp1,Gun1),0).
% happens(
%    pickUp(perp1,gun1), 
%    start).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',108).
observe(at(pickUp(perp1,gun1),start)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',110).
% Happens(PickUp(Perp1,Bullet1),1).
% happens(
%    pickUp(perp1,bullet1), 
%    start+1).
observe pickUp(perp1, bullet1)at start+1.
 %  observe([pickUp(perp1,bullet1)],start+1).
 %  "% =================================".


% Happens(PutInside(Perp1,Bullet1,Gun1),2).
% happens(
%    putInside(perp1,bullet1,gun1), 
%    start+2).
observe putInside(perp1, bullet1, gun1)at start+2.
 %  observe([putInside(perp1,bullet1,gun1)],start+2).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',112).
% Happens(WalkStreet21(Perp1,Street1),3).
% happens(
%    walkStreet21(perp1,street1), 
%    start+3).
observe walkStreet21(perp1, street1)at start+3.
 %  observe([walkStreet21(perp1,street1)],start+3).
 %  "% =================================".


% Happens(Threaten(Perp1,HumanTarget1,Gun1),4).
% happens(
%    threaten(perp1,humanTarget1,gun1), 
%    start+4).
observe threaten(perp1, humanTarget1, gun1)at start+4.
 %  observe([threaten(perp1,humanTarget1,gun1)],start+4).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',114).
% Happens(Grab(Perp1,HumanTarget1),5).
% happens(
%    grab(perp1,humanTarget1), 
%    start+5).
observe grab(perp1, humanTarget1)at start+5.
 %  observe([grab(perp1,humanTarget1)],start+5).
 %  "% =================================".


% Happens(WalkStreet12(Perp1,Street1),6).
% happens(
%    walkStreet12(perp1,street1), 
%    start+6).
observe walkStreet12(perp1, street1)at start+6.
 %  observe([walkStreet12(perp1,street1)],start+6).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',116).
% Happens(WalkThroughDoor12(Perp1,Door1),7).
% happens(
%    walkThroughDoor12(perp1,door1), 
%    start+7).
observe walkThroughDoor12(perp1, door1)at start+7.
 %  observe([walkThroughDoor12(perp1,door1)],start+7).
 %  "% =================================".


% Happens(LetGoOf(Perp1,HumanTarget1),8).
% happens(
%    letGoOf(perp1,humanTarget1), 
%    start+8).
observe letGoOf(perp1, humanTarget1)at start+8.
 %  observe([letGoOf(perp1,humanTarget1)],start+8).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',118).
% Happens(Shoot(Perp1,Gun1,HumanTarget1),9).
% happens(
%    shoot(perp1,gun1,humanTarget1), 
%    start+9).
observe shoot(perp1, gun1, humanTarget1)at start+9.
 %  observe([shoot(perp1,gun1,humanTarget1)],start+9).
 %  "% =================================".


% Happens(ShootKill(Perp1,Gun1,HumanTarget1),9).
% happens(
%    shootKill(perp1,gun1,humanTarget1), 
%    start+9).
observe shootKill(perp1, gun1, humanTarget1)at start+9.
 %  observe([shootKill(perp1,gun1,humanTarget1)],start+9).
 %  "% =================================".

% range time 0 10
% range(time,0,10).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',120).
range(time,0,10).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',122).
% range offset 0 3
% range(offset,0,3).
range(offset,0,3).

% range diameter 0 0
% range(diameter,0,0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',122).
range(diameter,0,0).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',125).
% completion Happens
% completion(happens).
completion(happens).
%; End of file.
% translate: ending  File: /pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e.lps 
