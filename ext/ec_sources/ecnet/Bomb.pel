:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(pfc).
% Tue, 06 Oct 2020 05:00:40 GMT
 %  loading(load_e_pl,'/pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e').
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; bomb
%; agent is nondeterministically killed.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:13
% fluent KilledDeterminingFluent(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:14
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:14
fluent(killedDeterminingFluent(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:14
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:14
fluents([killedDeterminingFluent/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:14
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:14
fluents([killedDeterminingFluent/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:14
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:14
meta_argtypes(killedDeterminingFluent(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:14
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:14
meta_argtypes(killedDeterminingFluent(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:14
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:14
mpred_prop(killedDeterminingFluent(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:14
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:14
mpred_prop(killedDeterminingFluent(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:14
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:14
meta_argtypes(killedDeterminingFluent(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:14
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:14
meta_argtypes(killedDeterminingFluent(agent)).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:14
% noninertial KilledDeterminingFluent
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:15
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:15
noninertial(killedDeterminingFluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:15
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:15
noninertial(killedDeterminingFluent).
%; agent is nondeterministically injured.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:17
% fluent InjuredDeterminingFluent(agent)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:18
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:18
fluent(injuredDeterminingFluent(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:18
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:18
fluents([injuredDeterminingFluent/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:18
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:18
fluents([injuredDeterminingFluent/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:18
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:18
meta_argtypes(injuredDeterminingFluent(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:18
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:18
meta_argtypes(injuredDeterminingFluent(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:18
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:18
mpred_prop(injuredDeterminingFluent(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:18
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:18
mpred_prop(injuredDeterminingFluent(agent),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:18
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:18
meta_argtypes(injuredDeterminingFluent(agent)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:18
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:18
meta_argtypes(injuredDeterminingFluent(agent)).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:18
% noninertial InjuredDeterminingFluent
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:19
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:19
noninertial(injuredDeterminingFluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:19
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:19
noninertial(injuredDeterminingFluent).
%; physobj is nondeterministically destroyed.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:21
% fluent DestroyedDeterminingFluent(physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:22
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:22
fluent(destroyedDeterminingFluent(physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:22
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:22
fluents([destroyedDeterminingFluent/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:22
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:22
fluents([destroyedDeterminingFluent/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:22
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:22
meta_argtypes(destroyedDeterminingFluent(physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:22
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:22
meta_argtypes(destroyedDeterminingFluent(physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:22
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:22
mpred_prop(destroyedDeterminingFluent(physobj),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:22
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:22
mpred_prop(destroyedDeterminingFluent(physobj),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:22
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:22
meta_argtypes(destroyedDeterminingFluent(physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:22
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:22
meta_argtypes(destroyedDeterminingFluent(physobj)).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:22
% noninertial DestroyedDeterminingFluent
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:23
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:23
noninertial(destroyedDeterminingFluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:23
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:23
noninertial(destroyedDeterminingFluent).
%; physobj is nondeterministically damaged.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:25
% fluent DamagedDeterminingFluent(physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:26
fluent(damagedDeterminingFluent(physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:26
fluents([damagedDeterminingFluent/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:26
fluents([damagedDeterminingFluent/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:26
meta_argtypes(damagedDeterminingFluent(physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:26
meta_argtypes(damagedDeterminingFluent(physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:26
mpred_prop(damagedDeterminingFluent(physobj),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:26
mpred_prop(damagedDeterminingFluent(physobj),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:26
meta_argtypes(damagedDeterminingFluent(physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:26
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:26
meta_argtypes(damagedDeterminingFluent(physobj)).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:26
% noninertial DamagedDeterminingFluent
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:27
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:27
noninertial(damagedDeterminingFluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:27
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:27
noninertial(damagedDeterminingFluent).
%; agent activates bomb.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:29
% event BombActivate(agent,bomb)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:30
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:30
event(bombActivate(agent,bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:30
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:30
actions([bombActivate/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:30
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:30
actions([bombActivate/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:30
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:30
meta_argtypes(bombActivate(agent,bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:30
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:30
meta_argtypes(bombActivate(agent,bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:30
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:30
mpred_prop(bombActivate(agent,bomb),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:30
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:30
mpred_prop(bombActivate(agent,bomb),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:30
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:30
meta_argtypes(bombActivate(agent,bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:30
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:30
meta_argtypes(bombActivate(agent,bomb)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:31
%; agent deactivates bomb.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:32
% event BombDeactivate(agent,bomb)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:33
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:33
event(bombDeactivate(agent,bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:33
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:33
actions([bombDeactivate/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:33
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:33
actions([bombDeactivate/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:33
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:33
meta_argtypes(bombDeactivate(agent,bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:33
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:33
meta_argtypes(bombDeactivate(agent,bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:33
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:33
mpred_prop(bombDeactivate(agent,bomb),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:33
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:33
mpred_prop(bombDeactivate(agent,bomb),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:33
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:33
meta_argtypes(bombDeactivate(agent,bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:33
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:33
meta_argtypes(bombDeactivate(agent,bomb)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:34
%; bomb explodes.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:35
% event BombExplode(bomb)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:36
event(bombExplode(bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:36
events([bombExplode/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:36
events([bombExplode/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:36
meta_argtypes(bombExplode(bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:36
meta_argtypes(bombExplode(bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:36
mpred_prop(bombExplode(bomb),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:36
mpred_prop(bombExplode(bomb),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:36
meta_argtypes(bombExplode(bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:36
meta_argtypes(bombExplode(bomb)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:37
%; bomb is activated.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:38
% fluent BombActivated(bomb)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:39
fluent(bombActivated(bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:39
fluents([bombActivated/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:39
fluents([bombActivated/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:39
meta_argtypes(bombActivated(bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:39
meta_argtypes(bombActivated(bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:39
mpred_prop(bombActivated(bomb),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:39
mpred_prop(bombActivated(bomb),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:39
meta_argtypes(bombActivated(bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:39
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:39
meta_argtypes(bombActivated(bomb)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:40
%; The timer value of bomb is offset.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:41
% fluent BombTimerValue(bomb,offset)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:42
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:42
fluent(bombTimerValue(bomb,offset)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:42
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:42
fluents([bombTimerValue/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:42
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:42
fluents([bombTimerValue/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:42
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:42
meta_argtypes(bombTimerValue(bomb,offset)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:42
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:42
meta_argtypes(bombTimerValue(bomb,offset)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:42
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:42
mpred_prop(bombTimerValue(bomb,offset),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:42
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:42
mpred_prop(bombTimerValue(bomb,offset),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:42
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:42
meta_argtypes(bombTimerValue(bomb,offset)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:42
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:42
meta_argtypes(bombTimerValue(bomb,offset)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:43
%; The timer value of bomb is decremented.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:44
% event BombDecrementTimer(bomb)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:45
event(bombDecrementTimer(bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:45
events([bombDecrementTimer/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:45
events([bombDecrementTimer/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:45
meta_argtypes(bombDecrementTimer(bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:45
meta_argtypes(bombDecrementTimer(bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:45
mpred_prop(bombDecrementTimer(bomb),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:45
mpred_prop(bombDecrementTimer(bomb),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:45
meta_argtypes(bombDecrementTimer(bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:45
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:45
meta_argtypes(bombDecrementTimer(bomb)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:46
%; The time delay of bomb is offset.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:47
% function BombTimeDelay(bomb): offset
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
function(bombTimeDelay(bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
functions([bombTimeDelay/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
functions([bombTimeDelay/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
meta_argtypes(bombTimeDelay(bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
meta_argtypes(bombTimeDelay(bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
mpred_prop(bombTimeDelay(bomb),function).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
mpred_prop(bombTimeDelay(bomb),function).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
meta_argtypes(bombTimeDelay(bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
meta_argtypes(bombTimeDelay(bomb)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
predicate(bombTimeDelayPred(bomb,offset)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
actions([bombTimeDelayPred/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
actions([bombTimeDelayPred/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
meta_argtypes(bombTimeDelayPred(bomb,offset)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
meta_argtypes(bombTimeDelayPred(bomb,offset)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
mpred_prop(bombTimeDelayPred(bomb,offset),predicate).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
mpred_prop(bombTimeDelayPred(bomb,offset),predicate).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
meta_argtypes(bombTimeDelayPred(bomb,offset)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
meta_argtypes(bombTimeDelayPred(bomb,offset)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48

 /*  fix_axiom_head(Time) ->
       [ functional_predicate(bombTimeDelay, bombTimeDelayPred),
          (->),
         holds_at(functional_predicate(bombTimeDelay, bombTimeDelayPred),
                  Time)
       ].
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(functional_predicate(bombTimeDelay, bombTimeDelayPred),
                   Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
holds_at(functional_predicate(bombTimeDelay,bombTimeDelayPred),
	 Time1).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
l_int(holds(functional_predicate(bombTimeDelay,bombTimeDelayPred),
	    Time1),
      []).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
resultIsa(bombTimeDelay,offset).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:48
resultIsa(bombTimeDelay,offset).
%; A state constraint says that a bomb has one timer
%; value at a time:
% [bomb,offset1,offset2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:52
% HoldsAt(BombTimerValue(bomb,offset1),time) &
% HoldsAt(BombTimerValue(bomb,offset2),time) ->
% offset1=offset2.
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:54
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:54
holds_at(bombTimerValue(Bomb, Offset1), Time), holds_at(bombTimerValue(Bomb, Offset2), Time) ->
    equals(Offset1, Offset2).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:54
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:54
reactive_rule([ holds(bombTimerValue(Bomb,Offset1),
		      Time),
		holds(bombTimerValue(Bomb,Offset2),
		      Time)
	      ],
	      [equals(Offset1,Offset2)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:56
%; An effect axiom states that if a bomb is intact and
%; an agent activates the bomb,
%; the bomb will be activated:
% [agent,bomb,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:60
% HoldsAt(Intact(bomb),time) ->
% Initiates(BombActivate(agent,bomb),
%           BombActivated(bomb),
%           time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:63
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:63
holds_at(intact(Bomb), Time) ->
    initiates(bombActivate(Agent, Bomb),
              bombActivated(Bomb),
              Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:63
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:63
reactive_rule([holds(intact(Bomb),Time)],
	      [ initiates(bombActivate(Agent,Bomb),
			  at(bombActivated(Bomb),Time))
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:65
%; A precondition axiom states that
%; for an agent to activate a bomb,
%; the agent must be holding the bomb:
% [agent,bomb,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:69
% Happens(BombActivate(agent,bomb),time) ->
% HoldsAt(Holding(agent,bomb),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:70
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:70
happens(bombActivate(Agent, Bomb), Time) ->
    holds_at(holding(Agent, Bomb), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:70
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:70
reactive_rule([ happens(bombActivate(Agent,Bomb),
			Time)
	      ],
	      [holds(holding(Agent,Bomb),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:72
%; An effect axiom states that if a bomb is intact and
%; an agent deactivates the bomb,
%; the bomb will no longer be activated:
% [agent,bomb,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:76
% HoldsAt(Intact(bomb),time) ->
% Terminates(BombDeactivate(agent,bomb),
%            BombActivated(bomb),
%            time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:79
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:79
holds_at(intact(Bomb), Time) ->
    terminates(bombDeactivate(Agent, Bomb),
               bombActivated(Bomb),
               Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:79
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:79
reactive_rule([holds(intact(Bomb),Time)],
	      [ terminates(bombDeactivate(Agent,Bomb),
			   at(bombActivated(Bomb),Time))
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:81
%; An axiom states that if a bomb explodes, the
%; bomb destroys the bomb:
% [bomb,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:84
% Happens(BombExplode(bomb),time) ->
% Happens(Destroy(bomb,bomb),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:85
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:85
happens(bombExplode(Bomb), Time) ->
    happens(destroy(Bomb, Bomb), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:85
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:85
reactive_rule([happens(bombExplode(Bomb),Time)],
	      [happens(destroy(Bomb,Bomb),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:87
%; An effect axiom states that if a bomb explodes,
%; the bomb is no longer activated:
% [bomb,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:90
% Terminates(BombExplode(bomb),BombActivated(bomb),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:90

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(bombExplode(Bomb),
                     bombActivated(Bomb),
                     Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:90
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:90
terminates(bombExplode(Bombexplode),
	   bombActivated(Bombexplode),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:90
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:90
terminated(happens(bombExplode(Bombexplode),
		   Maptime,
		   Happens),
	   bombActivated(Bombexplode),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:92
%; A trigger axiom states that
%; if a bomb is activated,
%; the timer value of the bomb is a timer value, and
%; the timer value is greater than zero,
%; the timer value of the bomb will be decremented:
% [bomb,offset,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:98
% HoldsAt(BombActivated(bomb),time) &
% HoldsAt(BombTimerValue(bomb,offset),time) &
% (offset > 0) ->
% Happens(BombDecrementTimer(bomb),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:101
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:101
holds_at(bombActivated(Bomb), Time), holds_at(bombTimerValue(Bomb, Offset), Time), Offset>0 ->
    happens(bombDecrementTimer(Bomb), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:101
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:101
reactive_rule([ holds(bombActivated(Bomb),Time),
		holds(bombTimerValue(Bomb,Offset),
		      Time),
		Offset>0
	      ],
	      [happens(bombDecrementTimer(Bomb),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:103
%; An effect axiom states that
%; if the timer value of the bomb is a timer value and
%; the timer value of the bomb is decremented,
%; the timer value of the bomb will be the timer value minus one:
% [bomb,offset1,offset2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:108
% HoldsAt(BombTimerValue(bomb,offset1),time) &
% offset2 = offset1-1 ->
% Initiates(BombDecrementTimer(bomb),
%           BombTimerValue(bomb,offset2),
%           time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:112
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:112
holds_at(bombTimerValue(Bomb, Offset1), Time), equals(Offset2, Offset1-1) ->
    initiates(bombDecrementTimer(Bomb),
              bombTimerValue(Bomb, Offset2),
              Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:112
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:112
reactive_rule([ holds(bombTimerValue(Bomb,Offset1),
		      Time),
		equals(Offset2,Offset1-1)
	      ],
	      [ initiates(bombDecrementTimer(Bomb),
			  at(bombTimerValue(Bomb,Offset2),
			     Time))
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:114
%; An effect axiom states that
%; if the timer value of the bomb is a timer value and
%; the timer value of the bomb is decremented,
%; the timer value of the bomb will no longer be the timer value:
% [bomb,offset,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:119
% HoldsAt(BombTimerValue(bomb,offset),time) ->
% Terminates(BombDecrementTimer(bomb),
%            BombTimerValue(bomb,offset),
%            time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:122
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:122
holds_at(bombTimerValue(Bomb, Offset), Time) ->
    terminates(bombDecrementTimer(Bomb),
               bombTimerValue(Bomb, Offset),
               Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:122
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:122
reactive_rule([ holds(bombTimerValue(Bomb,Offset),
		      Time)
	      ],
	      [ terminates(bombDecrementTimer(Bomb),
			   at(bombTimerValue(Bomb,Offset),
			      Time))
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:124
%; An effect axiom states that if a bomb explodes,
%; the bomb will no longer be activated:
% [bomb,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:127
% Terminates(BombExplode(bomb),BombActivated(bomb),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:127

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(bombExplode(Bomb),
                     bombActivated(Bomb),
                     Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:127
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:127
terminates(bombExplode(Bombexplode),
	   bombActivated(Bombexplode),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:127
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:127
terminated(happens(bombExplode(Bombexplode),
		   Maptime,
		   Happens),
	   bombActivated(Bombexplode),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:129
%; A trigger axiom states that if the timer value
%; of a bomb is zero, the bomb will explode:
% [bomb,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:132
% HoldsAt(BombTimerValue(bomb,0),time) ->
% Happens(BombExplode(bomb),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:133
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:133
holds_at(bombTimerValue(Bomb, 0), Time) ->
    happens(bombExplode(Bomb), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:133
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:133
reactive_rule([holds(bombTimerValue(Bomb,0),Time)],
	      [happens(bombExplode(Bomb),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:135
%; An axiom states that if an agent is at a location,
%; a bomb is at the location,
%; the agent is nondeterministically injured, and
%; the bomb explodes, then
%; the bomb will injure the agent:
% [agent,location,bomb,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:141
% HoldsAt(At(agent,location),time) &
% HoldsAt(At(bomb,location),time) &
% HoldsAt(InjuredDeterminingFluent(agent),time) &
% Happens(BombExplode(bomb),time) ->
% Happens(Injure(bomb,agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:145
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:145
holds_at(at(Agent, Location), Time), holds_at(at(Bomb, Location), Time), holds_at(injuredDeterminingFluent(Agent), Time), happens(bombExplode(Bomb), Time) ->
    happens(injure(Bomb, Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:145
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:145
reactive_rule([ holds(loc_at(Agent,Location),Time),
		holds(loc_at(Bomb,Location),Time),
		holds(injuredDeterminingFluent(Agent),Time),
		happens(bombExplode(Bomb),Time)
	      ],
	      [happens(injure(Bomb,Agent),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:147
%; An axiom states that if an agent is at a location,
%; a bomb is at the location,
%; the agent is nondeterministically killed, and
%; the bomb explodes, then
%; the bomb will kill the agent:
% [agent,location,bomb,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:153
% HoldsAt(At(agent,location),time) &
% HoldsAt(At(bomb,location),time) &
% HoldsAt(KilledDeterminingFluent(agent),time) &
% Happens(BombExplode(bomb),time) ->
% Happens(Kill(bomb,agent),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:157
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:157
holds_at(at(Agent, Location), Time), holds_at(at(Bomb, Location), Time), holds_at(killedDeterminingFluent(Agent), Time), happens(bombExplode(Bomb), Time) ->
    happens(kill(Bomb, Agent), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:157
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:157
reactive_rule([ holds(loc_at(Agent,Location),Time),
		holds(loc_at(Bomb,Location),Time),
		holds(killedDeterminingFluent(Agent),Time),
		happens(bombExplode(Bomb),Time)
	      ],
	      [happens(kill(Bomb,Agent),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:159
%; An axiom states that if an physical object is at a location,
%; a bomb is at the location,
%; the physical object is nondeterministically damaged, and
%; the bomb explodes, then
%; the bomb will damage the physical object:
% [physobj,location,bomb,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:165
% HoldsAt(At(physobj,location),time) &
% HoldsAt(At(bomb,location),time) &
% HoldsAt(DamagedDeterminingFluent(physobj),time) &
% Happens(BombExplode(bomb),time) ->
% Happens(Damage(bomb,physobj),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:169
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:169
holds_at(at(Physobj, Location), Time), holds_at(at(Bomb, Location), Time), holds_at(damagedDeterminingFluent(Physobj), Time), happens(bombExplode(Bomb), Time) ->
    happens(damage(Bomb, Physobj), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:169
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:169
reactive_rule([ holds(loc_at(Physobj,Location),Time),
		holds(loc_at(Bomb,Location),Time),
		holds(damagedDeterminingFluent(Physobj),
		      Time),
		happens(bombExplode(Bomb),Time)
	      ],
	      [happens(damage(Bomb,Physobj),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:171
%; An axiom states that if an physical object is at a location,
%; a bomb is at the location,
%; the physical object is nondeterministically destroyed, and
%; the bomb explodes, then
%; the bomb will destroy the physical object:
% [physobj,location,bomb,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:177
% HoldsAt(At(physobj,location),time) &
% HoldsAt(At(bomb,location),time) &
% HoldsAt(DestroyedDeterminingFluent(physobj),time) &
% Happens(BombExplode(bomb),time) ->
% Happens(Destroy(bomb,physobj),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:181
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:181
holds_at(at(Physobj, Location), Time), holds_at(at(Bomb, Location), Time), holds_at(destroyedDeterminingFluent(Physobj), Time), happens(bombExplode(Bomb), Time) ->
    happens(destroy(Bomb, Physobj), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:181
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:181
reactive_rule([ holds(loc_at(Physobj,Location),Time),
		holds(loc_at(Bomb,Location),Time),
		holds(destroyedDeterminingFluent(Physobj),
		      Time),
		happens(bombExplode(Bomb),Time)
	      ],
	      [happens(destroy(Bomb,Physobj),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/Bomb.e:183
%; End of file.
