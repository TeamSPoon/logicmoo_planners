:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',57).
% translate: unskipped  File: /pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e.lps 
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
% translate: begining  File: /pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e.lps 
% Thu, 08 Oct 2020 19:06:01 GMT File: <stream>(0x5600a3942a00)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Mueller:2004c,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "Understanding script-based stories using commonsense reasoning",
%;   journal = "Cognitive Systems Research",
%;   volume = "5",
%;   number = "4",
%;   pages = "307--340",
%; }
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',22).
% option modeldiff on
:- if(is_e_toplevel).
:- set_ec_option(modeldiff, on).
:- endif.

% option encoding 3
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',22).
:- if(is_e_toplevel).
:- set_ec_option(encoding, 3).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',24).
% option renaming off
:- if(is_e_toplevel).
:- set_ec_option(renaming, off).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',26).
% ignore Love, ThreatenedBy
 %  pl=axiom(ignore(love),[]).
ignore(love).
 %  ignore(love).
 %  pl=axiom(ignore(threatenedBy),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',26).
ignore(threatenedBy).
 %  ignore(threatenedBy).

% ignore LookOutOnto, Floor, BuildingOf, SkyOf, GroundOf
 %  pl=axiom(ignore(lookOutOnto),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',26).
ignore(lookOutOnto).
 %  ignore(lookOutOnto).
 %  pl=axiom(ignore(floor),[]).
ignore(floor).
 %  ignore(floor).
 %  pl=axiom(ignore(buildingOf),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',26).
ignore(buildingOf).
 %  ignore(buildingOf).
 %  pl=axiom(ignore(skyOf),[]).
ignore(skyOf).
 %  ignore(skyOf).
 %  pl=axiom(ignore(groundOf),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',26).
ignore(groundOf).
 %  ignore(groundOf).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',28).
% ignore Inside
 %  pl=axiom(ignore(inside),[]).
ignore(inside).
 %  ignore(inside).

% ignore Near, WalkFrom, WalkFromTo, RunFromTo
 %  pl=axiom(ignore(near),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',28).
ignore(near).
 %  ignore(near).
 %  pl=axiom(ignore(walkFrom),[]).
ignore(walkFrom).
 %  ignore(walkFrom).
 %  pl=axiom(ignore(walkFromTo),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',28).
ignore(walkFromTo).
 %  ignore(walkFromTo).
 %  pl=axiom(ignore(runFromTo),[]).
ignore(runFromTo).
 %  ignore(runFromTo).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',30).
% ignore BillOf, CookOf, TableOf, WaiterOf, KitchenDoorOf
 %  pl=axiom(ignore(billOf),[]).
ignore(billOf).
 %  ignore(billOf).
 %  pl=axiom(ignore(cookOf),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',30).
ignore(cookOf).
 %  ignore(cookOf).
 %  pl=axiom(ignore(tableOf),[]).
ignore(tableOf).
 %  ignore(tableOf).
 %  pl=axiom(ignore(waiterOf),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',30).
ignore(waiterOf).
 %  ignore(waiterOf).
 %  pl=axiom(ignore(kitchenDoorOf),[]).
ignore(kitchenDoorOf).
 %  ignore(kitchenDoorOf).

% ignore BeWaiter0, BeWaiter1, BeWaiter2, BeWaiter3, BeWaiter4
 %  pl=axiom(ignore(beWaiter0),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',30).
ignore(beWaiter0).
 %  ignore(beWaiter0).
 %  pl=axiom(ignore(beWaiter1),[]).
ignore(beWaiter1).
 %  ignore(beWaiter1).
 %  pl=axiom(ignore(beWaiter2),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',30).
ignore(beWaiter2).
 %  ignore(beWaiter2).
 %  pl=axiom(ignore(beWaiter3),[]).
ignore(beWaiter3).
 %  ignore(beWaiter3).
 %  pl=axiom(ignore(beWaiter4),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',30).
ignore(beWaiter4).
 %  ignore(beWaiter4).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',32).
% ignore BeWaiter5, BeWaiter6, BeWaiter7, BeWaiter8, BeWaiter9
 %  pl=axiom(ignore(beWaiter5),[]).
ignore(beWaiter5).
 %  ignore(beWaiter5).
 %  pl=axiom(ignore(beWaiter6),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',32).
ignore(beWaiter6).
 %  ignore(beWaiter6).
 %  pl=axiom(ignore(beWaiter7),[]).
ignore(beWaiter7).
 %  ignore(beWaiter7).
 %  pl=axiom(ignore(beWaiter8),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',32).
ignore(beWaiter8).
 %  ignore(beWaiter8).
 %  pl=axiom(ignore(beWaiter9),[]).
ignore(beWaiter9).
 %  ignore(beWaiter9).

% ignore BeCook0, BeCook1
 %  pl=axiom(ignore(beCook0),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',32).
ignore(beCook0).
 %  ignore(beCook0).
 %  pl=axiom(ignore(beCook1),[]).
ignore(beCook1).
 %  ignore(beCook1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',34).
% ignore InviteIn, InvitedIn, IntendToWalkIn, IntentionToWalkIn
 %  pl=axiom(ignore(inviteIn),[]).
ignore(inviteIn).
 %  ignore(inviteIn).
 %  pl=axiom(ignore(invitedIn),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',34).
ignore(invitedIn).
 %  ignore(invitedIn).
 %  pl=axiom(ignore(intendToWalkIn),[]).
ignore(intendToWalkIn).
 %  ignore(intendToWalkIn).
 %  pl=axiom(ignore(intentionToWalkIn),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',34).
ignore(intentionToWalkIn).
 %  ignore(intentionToWalkIn).

% ignore ActOnIntentionToWalkIn, Greet, SayGoodbye, CryForJoy
 %  pl=axiom(ignore(actOnIntentionToWalkIn),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',34).
ignore(actOnIntentionToWalkIn).
 %  ignore(actOnIntentionToWalkIn).
 %  pl=axiom(ignore(greet),[]).
ignore(greet).
 %  ignore(greet).
 %  pl=axiom(ignore(sayGoodbye),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',34).
ignore(sayGoodbye).
 %  ignore(sayGoodbye).
 %  pl=axiom(ignore(cryForJoy),[]).
ignore(cryForJoy).
 %  ignore(cryForJoy).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',36).
% ignore Threaten, ReleaseFromThreat, ThreatenedBy
 %  pl=axiom(ignore(threaten),[]).
ignore(threaten).
 %  ignore(threaten).
 %  pl=axiom(ignore(releaseFromThreat),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',36).
ignore(releaseFromThreat).
 %  ignore(releaseFromThreat).
 %  pl=axiom(ignore(threatenedBy),[]).
ignore(threatenedBy).
 %  ignore(threatenedBy).

% ignore Order, KnowOrder, Request, KnowRequest
 %  pl=axiom(ignore(order),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',36).
ignore(order).
 %  ignore(order).
 %  pl=axiom(ignore(knowOrder),[]).
ignore(knowOrder).
 %  ignore(knowOrder).
 %  pl=axiom(ignore(request),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',36).
ignore(request).
 %  ignore(request).
 %  pl=axiom(ignore(knowRequest),[]).
ignore(knowRequest).
 %  ignore(knowRequest).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',38).
% ignore PutInside, TakeOutOf
 %  pl=axiom(ignore(putInside),[]).
ignore(putInside).
 %  ignore(putInside).
 %  pl=axiom(ignore(takeOutOf),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',38).
ignore(takeOutOf).
 %  ignore(takeOutOf).

% ignore SayPleaseToMeet, Move
 %  pl=axiom(ignore(sayPleaseToMeet),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',38).
ignore(sayPleaseToMeet).
 %  ignore(sayPleaseToMeet).
 %  pl=axiom(ignore(move),[]).
ignore(move).
 %  ignore(move).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',41).
% load foundations/Root.e
:- if(is_e_toplevel).
:- load_e_cond('foundations/Root.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/foundations/Root.e',changed).
:- endif.

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',41).
:- if(is_e_toplevel).
:- load_e_cond('foundations/EC.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/foundations/EC.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',43).
% load answers/Mueller2003/Ontology.e
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2003/Ontology.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e',changed).
:- endif.

% load answers/Mueller2004c/RTSpaceM.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',43).
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2004c/RTSpaceM.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/RTSpace.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',45).
% load answers/Mueller2004c/OTSpaceM.e
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2004c/OTSpaceM.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e',changed).
:- endif.

% load answers/Mueller2004c/HungerNeed.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',45).
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2004c/HungerNeed.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/HungerNeed.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',47).
% load answers/Mueller2004c/Restaurant.e
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2004c/Restaurant.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/Restaurant.e',changed).
:- endif.

% load answers/Mueller2003/Sleep.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',47).
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2003/Sleep.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',49).
% load answers/Mueller2003/SpeechAct.e
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2003/SpeechAct.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/SpeechAct.e',changed).
:- endif.

% load answers/Mueller2004c/Dress.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',49).
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2004c/Dress.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/Dress.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',52).
% room Upstairs1
 %  t(room,upstairs1).
room(upstairs1).
 %  room(upstairs1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',54).
% staircase Staircase1
 %  t(staircase,staircase1).
staircase(staircase1).
 %  staircase(staircase1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',56).
% room Hallway1
 %  t(room,hallway1).
room(hallway1).
 %  room(hallway1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',58).
% Side1(Staircase1)=Hallway1.
 %  pl=axiom(side1Pred(staircase1,hallway1),[]).
side1Pred(staircase1,hallway1).
 %  side1Pred(staircase1,hallway1).


% Side2(Staircase1)=Upstairs1.
 %  pl=axiom(side2Pred(staircase1,upstairs1),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',58).
side2Pred(staircase1,upstairs1).
 %  side2Pred(staircase1,upstairs1).

% door DiningRoomDoor1
 %  t(door,diningRoomDoor1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',60).
door(diningRoomDoor1).
 %  door(diningRoomDoor1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',63).
% room DiningRoom1
 %  t(room,diningRoom1).
room(diningRoom1).
 %  room(diningRoom1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',65).
% Side1(DiningRoomDoor1)=Hallway1.
 %  pl=axiom(side1Pred(diningRoomDoor1,hallway1),[]).
side1Pred(diningRoomDoor1,hallway1).
 %  side1Pred(diningRoomDoor1,hallway1).


% Side2(DiningRoomDoor1)=DiningRoom1.
 %  pl=axiom(side2Pred(diningRoomDoor1,diningRoom1),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',65).
side2Pred(diningRoomDoor1,diningRoom1).
 %  side2Pred(diningRoomDoor1,diningRoom1).

% door KitchenDoor1
 %  t(door,kitchenDoor1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',67).
door(kitchenDoor1).
 %  door(kitchenDoor1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',70).
% room Kitchen1
 %  t(room,kitchen1).
room(kitchen1).
 %  room(kitchen1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',72).
% Side1(KitchenDoor1)=DiningRoom1.
 %  pl=axiom(side1Pred(kitchenDoor1,diningRoom1),[]).
side1Pred(kitchenDoor1,diningRoom1).
 %  side1Pred(kitchenDoor1,diningRoom1).


% Side2(KitchenDoor1)=Kitchen1.
 %  pl=axiom(side2Pred(kitchenDoor1,kitchen1),[]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',72).
side2Pred(kitchenDoor1,kitchen1).
 %  side2Pred(kitchenDoor1,kitchen1).

% agent Eater1
 %  t(agent,eater1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',74).
agent(eater1).
 %  agent(eater1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',77).
% agent Eater2
 %  t(agent,eater2).
agent(eater2).
 %  agent(eater2).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',79).
% clothing Clothing1
 %  t(clothing,clothing1).
clothing(clothing1).
 %  clothing(clothing1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',81).
% clothing Clothing2
 %  t(clothing,clothing2).
clothing(clothing2).
 %  clothing(clothing2).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',83).
% chair Chair1
 %  t(chair,chair1).
chair(chair1).
 %  chair(chair1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',85).
% chair Chair2
 %  t(chair,chair2).
chair(chair2).
 %  chair(chair2).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',87).
% food Food1
 %  t(food,food1).
food(food1).
 %  food(food1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',89).
% agent Cook1
 %  t(agent,cook1).
agent(cook1).
 %  agent(cook1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',91).
% table Table1
 %  t(table,table1).
table table1.
 %  table table1.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',93).
% content Content1
 %  t(content,content1).
content(content1).
 %  content(content1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',95).
% content Content2
 %  t(content,content2).
content(content2).
 %  content(content2).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',97).
% outside DummyOutside1
 %  t(outside,dummyOutside1).
outside(dummyOutside1).
 %  outside(dummyOutside1).
%; prune

% sort ona, onb
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',99).
sort(ona).
 %  sort(ona).
sort(onb).
 %  sort(onb).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',101).
% fluent! On(ona,onb)
 %  blue=fluent(on(ona,onb)).
 %  fluent(on(ona,onb)).
fluents([on/2]).
 %  fluents([on/2]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',101).
mpred_prop(on(ona,onb),fluent).
 %  mpred_prop(on(ona,onb),fluent).

% event! PlaceOn(agent,ona,onb)
 %  blue=event(placeOn(agent,ona,onb)).
 %  event(placeOn(agent,ona,onb)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',101).
actions([placeOn/3]).
 %  actions([placeOn/3]).
mpred_prop(placeOn(agent,ona,onb),event).
 %  mpred_prop(placeOn(agent,ona,onb),event).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',103).
% event! TakeOffOf(agent,ona,onb)
 %  blue=event(takeOffOf(agent,ona,onb)).
 %  event(takeOffOf(agent,ona,onb)).
actions([takeOffOf/3]).
 %  actions([takeOffOf/3]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',103).
mpred_prop(takeOffOf(agent,ona,onb),event).
 %  mpred_prop(takeOffOf(agent,ona,onb),event).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',105).
% sort ordera, orderb, orderc
sort(ordera).
 %  sort(ordera).
sort(orderb).
 %  sort(orderb).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',105).
sort(orderc).
 %  sort(orderc).

% event! Order(ordera,orderb,orderc)
 %  blue=event(order(ordera,orderb,orderc)).
 %  event(order(ordera,orderb,orderc)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',105).
events([order/3]).
 %  events([order/3]).
mpred_prop(order(ordera,orderb,orderc),event).
 %  mpred_prop(order(ordera,orderb,orderc),event).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',107).
% fluent! KnowOrder(orderb,ordera,orderc)
 %  blue=fluent(knowOrder(orderb,ordera,orderc)).
 %  fluent(knowOrder(orderb,ordera,orderc)).
fluents([knowOrder/3]).
 %  fluents([knowOrder/3]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',107).
mpred_prop(knowOrder(orderb,ordera,orderc),fluent).
 %  mpred_prop(knowOrder(orderb,ordera,orderc),fluent).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',109).
% sort requesta, requestb, requestc
sort(requesta).
 %  sort(requesta).
sort(requestb).
 %  sort(requestb).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',109).
sort(requestc).
 %  sort(requestc).

% event! Request(requesta,requestb,requestc)
 %  blue=event(request(requesta,requestb,requestc)).
 %  event(request(requesta,requestb,requestc)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',109).
events([request/3]).
 %  events([request/3]).
mpred_prop(request(requesta,requestb,requestc),event).
 %  mpred_prop(request(requesta,requestb,requestc),event).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',111).
% fluent! KnowRequest(requestb,requesta,requestc)
 %  blue=fluent(knowRequest(requestb,requesta,requestc)).
 %  fluent(knowRequest(requestb,requesta,requestc)).
fluents([knowRequest/3]).
 %  fluents([knowRequest/3]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',111).
mpred_prop(knowRequest(requestb,requesta,requestc),fluent).
 %  mpred_prop(knowRequest(requestb,requesta,requestc),fluent).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',113).
% sort holda, holdb, holdc
sort(holda).
 %  sort(holda).
sort(holdb).
 %  sort(holdb).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',113).
sort(holdc).
 %  sort(holdc).

% event! TakeOffOf(holda,holdb,holdc)
 %  blue=event(takeOffOf(holda,holdb,holdc)).
 %  event(takeOffOf(holda,holdb,holdc)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',113).
events([takeOffOf/3]).
 %  events([takeOffOf/3]).
mpred_prop(takeOffOf(holda,holdb,holdc),event).
 %  mpred_prop(takeOffOf(holda,holdb,holdc),event).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',115).
% event! PickUp(holda,holdb)
 %  blue=event(pickUp(holda,holdb)).
 %  event(pickUp(holda,holdb)).
events([pickUp/2]).
 %  events([pickUp/2]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',115).
mpred_prop(pickUp(holda,holdb),event).
 %  mpred_prop(pickUp(holda,holdb),event).

% event! LetGoOf(holda,holdb)
 %  blue=event(letGoOf(holda,holdb)).
 %  event(letGoOf(holda,holdb)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',115).
events([letGoOf/2]).
 %  events([letGoOf/2]).
mpred_prop(letGoOf(holda,holdb),event).
 %  mpred_prop(letGoOf(holda,holdb),event).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',117).
% event! Hold(holda,holdb)
 %  blue=event(hold(holda,holdb)).
 %  event(hold(holda,holdb)).
events([hold/2]).
 %  events([hold/2]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',117).
mpred_prop(hold(holda,holdb),event).
 %  mpred_prop(hold(holda,holdb),event).

% fluent! Holding(holda,holdb)
 %  blue=fluent(holding(holda,holdb)).
 %  fluent(holding(holda,holdb)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',117).
fluents([holding/2]).
 %  fluents([holding/2]).
mpred_prop(holding(holda,holdb),fluent).
 %  mpred_prop(holding(holda,holdb),fluent).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',120).
% sort sita, sitb
sort(sita).
 %  sort(sita).
sort(sitb).
 %  sort(sitb).

% event! LieOn(sita,sitb)
 %  blue=event(lieOn(sita,sitb)).
 %  event(lieOn(sita,sitb)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',120).
events([lieOn/2]).
 %  events([lieOn/2]).
mpred_prop(lieOn(sita,sitb),event).
 %  mpred_prop(lieOn(sita,sitb),event).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',122).
% event! SitOn(sita,sitb)
 %  blue=event(sitOn(sita,sitb)).
 %  event(sitOn(sita,sitb)).
events([sitOn/2]).
 %  events([sitOn/2]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',122).
mpred_prop(sitOn(sita,sitb),event).
 %  mpred_prop(sitOn(sita,sitb),event).

% event! RiseFrom(sita,sitb)
 %  blue=event(riseFrom(sita,sitb)).
 %  event(riseFrom(sita,sitb)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',122).
events([riseFrom/2]).
 %  events([riseFrom/2]).
mpred_prop(riseFrom(sita,sitb),event).
 %  mpred_prop(riseFrom(sita,sitb),event).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',124).
% fluent! LyingOn(sita,sitb)
 %  blue=fluent(lyingOn(sita,sitb)).
 %  fluent(lyingOn(sita,sitb)).
fluents([lyingOn/2]).
 %  fluents([lyingOn/2]).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',124).
mpred_prop(lyingOn(sita,sitb),fluent).
 %  mpred_prop(lyingOn(sita,sitb),fluent).

% fluent! SittingOn(sita,sitb)
 %  blue=fluent(sittingOn(sita,sitb)).
 %  fluent(sittingOn(sita,sitb)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',124).
fluents([sittingOn/2]).
 %  fluents([sittingOn/2]).
mpred_prop(sittingOn(sita,sitb),fluent).
 %  mpred_prop(sittingOn(sita,sitb),fluent).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',127).
% ona! Food1
 %  t(ona,food1).
ona(food1).
 %  ona(food1).

% onb! Table1
 %  t(onb,table1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',127).
onb(table1).
 %  onb(table1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',129).
% holda! Cook1
 %  t(holda,cook1).
holda(cook1).
 %  holda(cook1).

% holdb! Food1
 %  t(holdb,food1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',129).
holdb(food1).
 %  holdb(food1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',131).
% holdc! Table1
 %  t(holdc,table1).
holdc(table1).
 %  holdc(table1).

% sita! Eater1
 %  t(sita,eater1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',131).
sita(eater1).
 %  sita(eater1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',133).
% sitb! Chair1
 %  t(sitb,chair1).
sitb(chair1).
 %  sitb(chair1).
%; initial situation
% [agent]
 % HoldsAt(Dressed(agent),0).
 %  pl=axiom(initially(dressed(Agent)),[]).
initially dressed(Agent).
 %  initial_state([dressed(Agent)]).
 %  initial_state([dressed(Agent)]).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',137).
% [agent]
 % HoldsAt(Awake(agent),0).
 %  pl=axiom(initially(awake(Agent)),[]).
initially awake(Agent).
 %  initial_state([awake(Agent)]).
 %  initial_state([awake(Agent)]).


% [agent]
 % HoldsAt(Sleep3(agent),0).
 %  pl=axiom(initially(sleep3(Agent)),[]).
initially sleep3(Agent).
 %  initial_state([sleep3(Agent)]).
 %  initial_state([sleep3(Agent)]).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',139).
% [agent]
 % HoldsAt(Standing(agent),0).
 %  pl=axiom(initially(standing(Agent)),[]).
initially standing(Agent).
 %  initial_state([standing(Agent)]).
 %  initial_state([standing(Agent)]).


% [agent]
 % HoldsAt(Standing(agent),0).
 %  pl=axiom(initially(standing(Agent)),[]).
initially standing(Agent).
 %  initial_state([standing(Agent)]).
 %  initial_state([standing(Agent)]).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',141).
% [agent,object]
 % !HoldsAt(Holding(agent,object),0).
 %  pl=axiom(initially(neg(holding(Agent,Object))),[]).
 %  initially(neg(holding(Agent,Object))).
initially not holding(Agent, Object).
 %  initial_state([not(holding(Agent,Object))]).
 %  initial_state([not(holding(Agent,Object))]).


% [food]
 % HoldsAt(At(food,Kitchen1),0).
 %  pl=axiom(initially(at(Food,kitchen1)),[]).
 %  initially(at(Food,kitchen1)).
initially loc_at(Food, kitchen1).
 %  initial_state([loc_at(Food,kitchen1)]).
 %  initial_state([loc_at(Food,kitchen1)]).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',143).
% [food]
 % !HoldsAt(FoodPrepared(food),0).
 %  pl=axiom(initially(neg(foodPrepared(Food))),[]).
 %  initially(neg(foodPrepared(Food))).
initially not foodPrepared(Food).
 %  initial_state([not(foodPrepared(Food))]).
 %  initial_state([not(foodPrepared(Food))]).


% [agent]
 % HoldsAt(Hungry(agent),0).
 %  pl=axiom(initially(hungry(Agent)),[]).
initially hungry(Agent).
 %  initial_state([hungry(Agent)]).
 %  initial_state([hungry(Agent)]).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',145).
% [door]
 % HoldsAt(DoorIsOpen(door),0).
 %  pl=axiom(initially(doorIsOpen(Door)),[]).
initially doorIsOpen(Door).
 %  initial_state([doorIsOpen(Door)]).
 %  initial_state([doorIsOpen(Door)]).


% [clothing]
 % HoldsAt(At(clothing,Upstairs1),0).
 %  pl=axiom(initially(at(Clothing,upstairs1)),[]).
 %  initially(at(Clothing,upstairs1)).
initially loc_at(Clothing, upstairs1).
 %  initial_state([loc_at(Clothing,upstairs1)]).
 %  initial_state([loc_at(Clothing,upstairs1)]).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',147).
% [chair]
 % HoldsAt(At(chair,DiningRoom1),0).
 %  pl=axiom(initially(at(Chair,diningRoom1)),[]).
 %  initially(at(Chair,diningRoom1)).
initially loc_at(Chair, diningRoom1).
 %  initial_state([loc_at(Chair,diningRoom1)]).
 %  initial_state([loc_at(Chair,diningRoom1)]).


% HoldsAt(At(Cook1,Kitchen1),0).
 %  pl=axiom(initially(at(cook1,kitchen1)),[]).
 %  initially(at(cook1,kitchen1)).
initially loc_at(cook1, kitchen1).
 %  initial_state([loc_at(cook1,kitchen1)]).
 %  initial_state([loc_at(cook1,kitchen1)]).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',149).
% HoldsAt(At(Table1,DiningRoom1),0).
 %  pl=axiom(initially(at(table1,diningRoom1)),[]).
 %  initially(at(table1,diningRoom1)).
initially loc_at(table1, diningRoom1).
 %  initial_state([loc_at(table1,diningRoom1)]).
 %  initial_state([loc_at(table1,diningRoom1)]).


% [agent,clothing]
 % !HoldsAt(Wearing(agent,clothing),0).
 %  pl=axiom(initially(neg(wearing(Agent,Clothing))),[]).
 %  initially(neg(wearing(Agent,Clothing))).
initially not wearing(Agent, Clothing).
 %  initial_state([not(wearing(Agent,Clothing))]).
 %  initial_state([not(wearing(Agent,Clothing))]).


%; narrative


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',153).
% HoldsAt(At(Cook1,Kitchen1),0).
 %  pl=axiom(initially(at(cook1,kitchen1)),[]).
 %  initially(at(cook1,kitchen1)).
initially loc_at(cook1, kitchen1).
 %  initial_state([loc_at(cook1,kitchen1)]).
 %  initial_state([loc_at(cook1,kitchen1)]).


% HoldsAt(At(Eater1,Upstairs1),0).
 %  pl=axiom(initially(at(eater1,upstairs1)),[]).
 %  initially(at(eater1,upstairs1)).
initially loc_at(eater1, upstairs1).
 %  initial_state([loc_at(eater1,upstairs1)]).
 %  initial_state([loc_at(eater1,upstairs1)]).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',155).
% HoldsAt(At(Eater2,Upstairs1),0).
 %  pl=axiom(initially(at(eater2,upstairs1)),[]).
 %  initially(at(eater2,upstairs1)).
initially loc_at(eater2, upstairs1).
 %  initial_state([loc_at(eater2,upstairs1)]).
 %  initial_state([loc_at(eater2,upstairs1)]).


% Happens(FoodPrepare(Cook1,Food1),0).
 %  pl=axiom(happens(foodPrepare(cook1,food1),start),[]).
 %  happens(foodPrepare(cook1,food1),start).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',155).
observe(at(foodPrepare(cook1,food1),start)).
 %  observe(at(foodPrepare(cook1,food1),start)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',157).
% Happens(PutOn(Eater1,Clothing1),1).

 /*  pl=axiom(happens(putOn(eater1,clothing1),When),
         [b(start,When)]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',157).

 /*  b(start, When) ->
       happens(putOn(eater1, clothing1), When).
 */
if b(start, When)then happens(putOn(eater1, clothing1), When).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',157).

 /*  reactive_rule([b(start,When)],
   	      [happens(putOn(eater1,clothing1),When)]).
 */

 /*  reactive_rule([b(start,When)],
   	      [happens(putOn(eater1,clothing1),When)]).
 */


% Happens(PutOn(Eater2,Clothing2),2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',157).

 /*  pl=axiom(happens(putOn(eater2,clothing2),Start_Num2),
         [b(start,Start_Num2),toffset(start,2,Start_Num2)]).
 */

 /*  (   b(start, Start_Num2),
       toffset(start, 2, Start_Num2)
   ->  happens(putOn(eater2, clothing2), Start_Num2)
   ).
 */
if b(start, Start_Num2), toffset(start, 2, Start_Num2)then happens(putOn(eater2, clothing2), Start_Num2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',157).

 /*  reactive_rule([ b(start,Start_Num2),
   		toffset(start,2,Start_Num2)
   	      ],
   	      [happens(putOn(eater2,clothing2),Start_Num2)]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',157).

 /*  reactive_rule([ b(start,Start_Num2),
   		toffset(start,2,Start_Num2)
   	      ],
   	      [happens(putOn(eater2,clothing2),Start_Num2)]).
 */


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',159).
% Happens(WalkDownStaircase(Eater1,Staircase1),3).

 /*  pl=axiom(happens(walkDownStaircase(eater1,staircase1),Start_Num3),
         [b(start,Start_Num3),toffset(start,3,Start_Num3)]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',159).

 /*  (   b(start, Start_Num3),
       toffset(start, 3, Start_Num3)
   ->  happens(walkDownStaircase(eater1, staircase1), Start_Num3)
   ).
 */
if b(start, Start_Num3), toffset(start, 3, Start_Num3)then happens(walkDownStaircase(eater1, staircase1), Start_Num3).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',159).

 /*  reactive_rule([ b(start,Start_Num3),
   		toffset(start,3,Start_Num3)
   	      ],
   	      [ happens(walkDownStaircase(eater1,staircase1),
   			Start_Num3)
   	      ]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',159).

 /*  reactive_rule([ b(start,Start_Num3),
   		toffset(start,3,Start_Num3)
   	      ],
   	      [ happens(walkDownStaircase(eater1,staircase1),
   			Start_Num3)
   	      ]).
 */


% Happens(WalkDownStaircase(Eater2,Staircase1),4).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',159).

 /*  pl=axiom(happens(walkDownStaircase(eater2,staircase1),Start_Num4),
         [b(start,Start_Num4),toffset(start,4,Start_Num4)]).
 */

 /*  (   b(start, Start_Num4),
       toffset(start, 4, Start_Num4)
   ->  happens(walkDownStaircase(eater2, staircase1), Start_Num4)
   ).
 */
if b(start, Start_Num4), toffset(start, 4, Start_Num4)then happens(walkDownStaircase(eater2, staircase1), Start_Num4).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',159).

 /*  reactive_rule([ b(start,Start_Num4),
   		toffset(start,4,Start_Num4)
   	      ],
   	      [ happens(walkDownStaircase(eater2,staircase1),
   			Start_Num4)
   	      ]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',159).

 /*  reactive_rule([ b(start,Start_Num4),
   		toffset(start,4,Start_Num4)
   	      ],
   	      [ happens(walkDownStaircase(eater2,staircase1),
   			Start_Num4)
   	      ]).
 */


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',161).
% Happens(WalkThroughDoor12(Eater1,DiningRoomDoor1),5).

 /*  pl=axiom(happens(walkThroughDoor12(eater1,diningRoomDoor1),
   	      Start_Num5),
         [b(start,Start_Num5),toffset(start,5,Start_Num5)]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',161).

 /*  (   b(start, Start_Num5),
       toffset(start, 5, Start_Num5)
   ->  happens(walkThroughDoor12(eater1, diningRoomDoor1), Start_Num5)
   ).
 */
if b(start, Start_Num5), toffset(start, 5, Start_Num5)then happens(walkThroughDoor12(eater1, diningRoomDoor1), Start_Num5).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',161).

 /*  reactive_rule([ b(start,Start_Num5),
   		toffset(start,5,Start_Num5)
   	      ],
   	      [ happens(walkThroughDoor12(eater1,diningRoomDoor1),
   			Start_Num5)
   	      ]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',161).

 /*  reactive_rule([ b(start,Start_Num5),
   		toffset(start,5,Start_Num5)
   	      ],
   	      [ happens(walkThroughDoor12(eater1,diningRoomDoor1),
   			Start_Num5)
   	      ]).
 */


% Happens(WalkThroughDoor12(Eater2,DiningRoomDoor1),6).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',161).

 /*  pl=axiom(happens(walkThroughDoor12(eater2,diningRoomDoor1),
   	      Start_Num6),
         [b(start,Start_Num6),toffset(start,6,Start_Num6)]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',161).

 /*  (   b(start, Start_Num6),
       toffset(start, 6, Start_Num6)
   ->  happens(walkThroughDoor12(eater2, diningRoomDoor1), Start_Num6)
   ).
 */
if b(start, Start_Num6), toffset(start, 6, Start_Num6)then happens(walkThroughDoor12(eater2, diningRoomDoor1), Start_Num6).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',161).

 /*  reactive_rule([ b(start,Start_Num6),
   		toffset(start,6,Start_Num6)
   	      ],
   	      [ happens(walkThroughDoor12(eater2,diningRoomDoor1),
   			Start_Num6)
   	      ]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',161).

 /*  reactive_rule([ b(start,Start_Num6),
   		toffset(start,6,Start_Num6)
   	      ],
   	      [ happens(walkThroughDoor12(eater2,diningRoomDoor1),
   			Start_Num6)
   	      ]).
 */


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',163).
% Happens(SitOn(Eater1,Chair1),7).

 /*  pl=axiom(happens(sitOn(eater1,chair1),Start_Num7),
         [b(start,Start_Num7),toffset(start,7,Start_Num7)]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',163).

 /*  (   b(start, Start_Num7),
       toffset(start, 7, Start_Num7)
   ->  happens(sitOn(eater1, chair1), Start_Num7)
   ).
 */
if b(start, Start_Num7), toffset(start, 7, Start_Num7)then happens(sitOn(eater1, chair1), Start_Num7).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',163).

 /*  reactive_rule([ b(start,Start_Num7),
   		toffset(start,7,Start_Num7)
   	      ],
   	      [happens(sitOn(eater1,chair1),Start_Num7)]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',163).

 /*  reactive_rule([ b(start,Start_Num7),
   		toffset(start,7,Start_Num7)
   	      ],
   	      [happens(sitOn(eater1,chair1),Start_Num7)]).
 */


% Happens(SitOn(Eater2,Chair2),8).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',163).

 /*  pl=axiom(happens(sitOn(eater2,chair2),Start_Num8),
         [b(start,Start_Num8),toffset(start,8,Start_Num8)]).
 */

 /*  (   b(start, Start_Num8),
       toffset(start, 8, Start_Num8)
   ->  happens(sitOn(eater2, chair2), Start_Num8)
   ).
 */
if b(start, Start_Num8), toffset(start, 8, Start_Num8)then happens(sitOn(eater2, chair2), Start_Num8).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',163).

 /*  reactive_rule([ b(start,Start_Num8),
   		toffset(start,8,Start_Num8)
   	      ],
   	      [happens(sitOn(eater2,chair2),Start_Num8)]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',163).

 /*  reactive_rule([ b(start,Start_Num8),
   		toffset(start,8,Start_Num8)
   	      ],
   	      [happens(sitOn(eater2,chair2),Start_Num8)]).
 */


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',165).
% Happens(PickUp(Cook1, Food1),9).

 /*  pl=axiom(happens(pickUp(cook1,food1),Start_Num9),
         [b(start,Start_Num9),toffset(start,9,Start_Num9)]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',165).

 /*  (   b(start, Start_Num9),
       toffset(start, 9, Start_Num9)
   ->  happens(pickUp(cook1, food1), Start_Num9)
   ).
 */
if b(start, Start_Num9), toffset(start, 9, Start_Num9)then happens(pickUp(cook1, food1), Start_Num9).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',165).

 /*  reactive_rule([ b(start,Start_Num9),
   		toffset(start,9,Start_Num9)
   	      ],
   	      [happens(pickUp(cook1,food1),Start_Num9)]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',165).

 /*  reactive_rule([ b(start,Start_Num9),
   		toffset(start,9,Start_Num9)
   	      ],
   	      [happens(pickUp(cook1,food1),Start_Num9)]).
 */


% Happens(WalkThroughDoor21(Cook1, KitchenDoor1),10).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',165).

 /*  pl=axiom(happens(walkThroughDoor21(cook1,kitchenDoor1),Start_Num10),
         [b(start,Start_Num10),toffset(start,10,Start_Num10)]).
 */

 /*  (   b(start, Start_Num10),
       toffset(start, 10, Start_Num10)
   ->  happens(walkThroughDoor21(cook1, kitchenDoor1), Start_Num10)
   ).
 */
if b(start, Start_Num10), toffset(start, 10, Start_Num10)then happens(walkThroughDoor21(cook1, kitchenDoor1), Start_Num10).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',165).

 /*  reactive_rule([ b(start,Start_Num10),
   		toffset(start,10,Start_Num10)
   	      ],
   	      [ happens(walkThroughDoor21(cook1,kitchenDoor1),
   			Start_Num10)
   	      ]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',165).

 /*  reactive_rule([ b(start,Start_Num10),
   		toffset(start,10,Start_Num10)
   	      ],
   	      [ happens(walkThroughDoor21(cook1,kitchenDoor1),
   			Start_Num10)
   	      ]).
 */


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',167).
% Happens(PlaceOn(Cook1, Food1, Table1),11).

 /*  pl=axiom(happens(placeOn(cook1,food1,table1),Start_Num11),
         [b(start,Start_Num11),toffset(start,11,Start_Num11)]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',167).

 /*  (   b(start, Start_Num11),
       toffset(start, 11, Start_Num11)
   ->  happens(placeOn(cook1, food1, table1), Start_Num11)
   ).
 */
if b(start, Start_Num11), toffset(start, 11, Start_Num11)then happens(placeOn(cook1, food1, table1), Start_Num11).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',167).

 /*  reactive_rule([ b(start,Start_Num11),
   		toffset(start,11,Start_Num11)
   	      ],
   	      [happens(placeOn(cook1,food1,table1),Start_Num11)]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',167).

 /*  reactive_rule([ b(start,Start_Num11),
   		toffset(start,11,Start_Num11)
   	      ],
   	      [happens(placeOn(cook1,food1,table1),Start_Num11)]).
 */


% Happens(WalkThroughDoor12(Cook1, KitchenDoor1),12).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',167).

 /*  pl=axiom(happens(walkThroughDoor12(cook1,kitchenDoor1),Start_Num12),
         [b(start,Start_Num12),toffset(start,12,Start_Num12)]).
 */

 /*  (   b(start, Start_Num12),
       toffset(start, 12, Start_Num12)
   ->  happens(walkThroughDoor12(cook1, kitchenDoor1), Start_Num12)
   ).
 */
if b(start, Start_Num12), toffset(start, 12, Start_Num12)then happens(walkThroughDoor12(cook1, kitchenDoor1), Start_Num12).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',167).

 /*  reactive_rule([ b(start,Start_Num12),
   		toffset(start,12,Start_Num12)
   	      ],
   	      [ happens(walkThroughDoor12(cook1,kitchenDoor1),
   			Start_Num12)
   	      ]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',167).

 /*  reactive_rule([ b(start,Start_Num12),
   		toffset(start,12,Start_Num12)
   	      ],
   	      [ happens(walkThroughDoor12(cook1,kitchenDoor1),
   			Start_Num12)
   	      ]).
 */


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',169).
% Happens(Eat(Eater1,Food1),13).

 /*  pl=axiom(happens(eat(eater1,food1),Start_Num13),
         [b(start,Start_Num13),toffset(start,13,Start_Num13)]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',169).

 /*  (   b(start, Start_Num13),
       toffset(start, 13, Start_Num13)
   ->  happens(eat(eater1, food1), Start_Num13)
   ).
 */
if b(start, Start_Num13), toffset(start, 13, Start_Num13)then happens(eat(eater1, food1), Start_Num13).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',169).

 /*  reactive_rule([ b(start,Start_Num13),
   		toffset(start,13,Start_Num13)
   	      ],
   	      [happens(eat(eater1,food1),Start_Num13)]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',169).

 /*  reactive_rule([ b(start,Start_Num13),
   		toffset(start,13,Start_Num13)
   	      ],
   	      [happens(eat(eater1,food1),Start_Num13)]).
 */


% Happens(Eat(Eater2,Food1),14).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',169).

 /*  pl=axiom(happens(eat(eater2,food1),Start_Num14),
         [b(start,Start_Num14),toffset(start,14,Start_Num14)]).
 */

 /*  (   b(start, Start_Num14),
       toffset(start, 14, Start_Num14)
   ->  happens(eat(eater2, food1), Start_Num14)
   ).
 */
if b(start, Start_Num14), toffset(start, 14, Start_Num14)then happens(eat(eater2, food1), Start_Num14).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',169).

 /*  reactive_rule([ b(start,Start_Num14),
   		toffset(start,14,Start_Num14)
   	      ],
   	      [happens(eat(eater2,food1),Start_Num14)]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',169).

 /*  reactive_rule([ b(start,Start_Num14),
   		toffset(start,14,Start_Num14)
   	      ],
   	      [happens(eat(eater2,food1),Start_Num14)]).
 */


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',171).
% Happens(Converse(Eater1,Eater2),15).

 /*  pl=axiom(happens(converse(eater1,eater2),Start_Num15),
         [b(start,Start_Num15),toffset(start,15,Start_Num15)]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',171).

 /*  (   b(start, Start_Num15),
       toffset(start, 15, Start_Num15)
   ->  happens(converse(eater1, eater2), Start_Num15)
   ).
 */
if b(start, Start_Num15), toffset(start, 15, Start_Num15)then happens(converse(eater1, eater2), Start_Num15).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',171).

 /*  reactive_rule([ b(start,Start_Num15),
   		toffset(start,15,Start_Num15)
   	      ],
   	      [happens(converse(eater1,eater2),Start_Num15)]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',171).

 /*  reactive_rule([ b(start,Start_Num15),
   		toffset(start,15,Start_Num15)
   	      ],
   	      [happens(converse(eater1,eater2),Start_Num15)]).
 */


% Happens(TalkAbout(Eater1,Content1),16).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',171).

 /*  pl=axiom(happens(talkAbout(eater1,content1),Start_Num16),
         [b(start,Start_Num16),toffset(start,16,Start_Num16)]).
 */

 /*  (   b(start, Start_Num16),
       toffset(start, 16, Start_Num16)
   ->  happens(talkAbout(eater1, content1), Start_Num16)
   ).
 */
if b(start, Start_Num16), toffset(start, 16, Start_Num16)then happens(talkAbout(eater1, content1), Start_Num16).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',171).

 /*  reactive_rule([ b(start,Start_Num16),
   		toffset(start,16,Start_Num16)
   	      ],
   	      [happens(talkAbout(eater1,content1),Start_Num16)]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',171).

 /*  reactive_rule([ b(start,Start_Num16),
   		toffset(start,16,Start_Num16)
   	      ],
   	      [happens(talkAbout(eater1,content1),Start_Num16)]).
 */


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',173).
% Happens(TalkAbout(Eater2,Content2),17).

 /*  pl=axiom(happens(talkAbout(eater2,content2),Start_Num17),
         [b(start,Start_Num17),toffset(start,17,Start_Num17)]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',173).

 /*  (   b(start, Start_Num17),
       toffset(start, 17, Start_Num17)
   ->  happens(talkAbout(eater2, content2), Start_Num17)
   ).
 */
if b(start, Start_Num17), toffset(start, 17, Start_Num17)then happens(talkAbout(eater2, content2), Start_Num17).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',173).

 /*  reactive_rule([ b(start,Start_Num17),
   		toffset(start,17,Start_Num17)
   	      ],
   	      [happens(talkAbout(eater2,content2),Start_Num17)]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',173).

 /*  reactive_rule([ b(start,Start_Num17),
   		toffset(start,17,Start_Num17)
   	      ],
   	      [happens(talkAbout(eater2,content2),Start_Num17)]).
 */


% Happens(RiseFrom(Eater1,Chair1),18).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',173).

 /*  pl=axiom(happens(riseFrom(eater1,chair1),Start_Num18),
         [b(start,Start_Num18),toffset(start,18,Start_Num18)]).
 */

 /*  (   b(start, Start_Num18),
       toffset(start, 18, Start_Num18)
   ->  happens(riseFrom(eater1, chair1), Start_Num18)
   ).
 */
if b(start, Start_Num18), toffset(start, 18, Start_Num18)then happens(riseFrom(eater1, chair1), Start_Num18).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',173).

 /*  reactive_rule([ b(start,Start_Num18),
   		toffset(start,18,Start_Num18)
   	      ],
   	      [happens(riseFrom(eater1,chair1),Start_Num18)]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',173).

 /*  reactive_rule([ b(start,Start_Num18),
   		toffset(start,18,Start_Num18)
   	      ],
   	      [happens(riseFrom(eater1,chair1),Start_Num18)]).
 */


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',175).
% Happens(RiseFrom(Eater2,Chair2),19).

 /*  pl=axiom(happens(riseFrom(eater2,chair2),Start_Num19),
         [b(start,Start_Num19),toffset(start,19,Start_Num19)]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',175).

 /*  (   b(start, Start_Num19),
       toffset(start, 19, Start_Num19)
   ->  happens(riseFrom(eater2, chair2), Start_Num19)
   ).
 */
if b(start, Start_Num19), toffset(start, 19, Start_Num19)then happens(riseFrom(eater2, chair2), Start_Num19).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',175).

 /*  reactive_rule([ b(start,Start_Num19),
   		toffset(start,19,Start_Num19)
   	      ],
   	      [happens(riseFrom(eater2,chair2),Start_Num19)]).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',175).

 /*  reactive_rule([ b(start,Start_Num19),
   		toffset(start,19,Start_Num19)
   	      ],
   	      [happens(riseFrom(eater2,chair2),Start_Num19)]).
 */

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',177).
% range time 0 20
range(time,0,20).
 %  range(time,0,20).

% range offset 0 0
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',177).
range(offset,0,0).
 %  range(offset,0,0).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',179).
% range diameter 0 0
range(diameter,0,0).
 %  range(diameter,0,0).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e',181).
% completion Happens
completion(happens).
 %  completion(happens).
%; End of file.
% translate: ending  File: /pack/logicmoo_ec/ext/ec_sources/ecnet/EatingInAHouse.e.lps 
