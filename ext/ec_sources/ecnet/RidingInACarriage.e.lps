:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Rest.e',148).
% translate: unskipped  File: /pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e.lps 
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
% translate: begining  File: /pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e.lps 
% Thu, 08 Oct 2020 21:36:57 GMT File: <stream>(0x55894c219400)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Mueller:2004c,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "Understanding script-based stories using commonsense reasoning",
%;   journal = "Cognitive Systems Research",
%;   volume = "5",
%;   number = "4",
%;   pages = "307--340",
%; }
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',22).
% option modeldiff on
:- if(is_e_toplevel).
:- set_ec_option(modeldiff, on).
:- endif.

% option renaming off
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',22).
:- if(is_e_toplevel).
:- set_ec_option(renaming, off).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',25).
% ignore Love, ThreatenedBy
% ignore(love).
ignore(love).
% ignore(threatenedBy).
ignore(threatenedBy).

% ignore LookOutOnto, Floor, BuildingOf, SkyOf, GroundOf
% ignore(lookOutOnto).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',25).
ignore(lookOutOnto).
% ignore(floor).
ignore(floor).
% ignore(buildingOf).
ignore(buildingOf).
% ignore(skyOf).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',25).
ignore(skyOf).
% ignore(groundOf).
ignore(groundOf).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',27).
% ignore Inside, PutInside, On, PlaceOn
% ignore(inside).
ignore(inside).
% ignore(putInside).
ignore(putInside).
% ignore(on).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',27).
ignore(on).
% ignore(placeOn).
ignore(placeOn).

% ignore Like, Happy, BecomeAngryAt
% ignore(like).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',27).
ignore(like).
% ignore(happy).
ignore(happy).
% ignore(becomeAngryAt).
ignore(becomeAngryAt).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',29).
% ignore Near, WalkFrom, WalkFromTo, RunFromTo
% ignore(near).
ignore(near).
% ignore(walkFrom).
ignore(walkFrom).
% ignore(walkFromTo).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',29).
ignore(walkFromTo).
% ignore(runFromTo).
ignore(runFromTo).

% ignore ActOnIntentionToWalkIn, IntentionToWalkIn, InvitedIn, InviteIn
% ignore(actOnIntentionToWalkIn).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',29).
ignore(actOnIntentionToWalkIn).
% ignore(intentionToWalkIn).
ignore(intentionToWalkIn).
% ignore(invitedIn).
ignore(invitedIn).
% ignore(inviteIn).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',29).
ignore(inviteIn).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',31).
% ignore TakeOffOf, TakeOutOf, LetGoOf
% ignore(takeOffOf).
ignore(takeOffOf).
% ignore(takeOutOf).
ignore(takeOutOf).
% ignore(letGoOf).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',31).
ignore(letGoOf).

% ignore Greet, SayGoodbye, Order, KnowOrder
% ignore(greet).
ignore(greet).
% ignore(sayGoodbye).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',31).
ignore(sayGoodbye).
% ignore(order).
ignore(order).
% ignore(knowOrder).
ignore(knowOrder).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',33).
% ignore Request, KnowRequest
% ignore(request).
ignore(request).
% ignore(knowRequest).
ignore(knowRequest).

% ignore TakeOffOf, PickUp, LetGoOf, Hold, Holding, HandTo, Grab
% ignore(takeOffOf).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',33).
ignore(takeOffOf).
% ignore(pickUp).
ignore(pickUp).
% ignore(letGoOf).
ignore(letGoOf).
% ignore(hold).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',33).
ignore(hold).
% ignore(holding).
ignore(holding).
% ignore(handTo).
ignore(handTo).
% ignore(grab).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',33).
ignore(grab).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',35).
% ignore Move
% ignore(move).
ignore(move).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',37).
% load foundations/Root.e
:- if(is_e_toplevel).
:- load_e_cond('foundations/Root.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/foundations/Root.e',changed).
:- endif.

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',37).
:- if(is_e_toplevel).
:- load_e_cond('foundations/EC.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/foundations/EC.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',39).
% load answers/Mueller2003/Ontology.e
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2003/Ontology.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e',changed).
:- endif.

% load answers/Mueller2004c/OTSpaceM.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',39).
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2004c/OTSpaceM.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',41).
% load answers/Mueller2004c/RTSpaceM.e
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2004c/RTSpaceM.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/RTSpace.e',changed).
:- endif.

% load answers/Mueller2004c/HandTo.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',41).
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2004c/HandTo.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/HandTo.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',43).
% load answers/Mueller2004c/Money.e
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2004c/Money.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/Money.e',changed).
:- endif.

% load answers/Mueller2003/Sleep.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',43).
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2003/Sleep.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',45).
% load answers/Mueller2003/SpeechAct.e
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2003/SpeechAct.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/SpeechAct.e',changed).
:- endif.

% load answers/Mueller2004c/Vehicle.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',45).
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2004c/Vehicle.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vehicle.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',48).
% outside NearLocation1
% t(outside,nearLocation1).
outside(nearLocation1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',50).
% street Street1
% t(street,street1).
street(street1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',52).
% outside Location1
% t(outside,location1).
outside(location1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',54).
% Side1(Street1)=NearLocation1.
% side1Pred(street1,nearLocation1).
side1Pred(street1,nearLocation1).


% Side2(Street1)=Location1.
% side2Pred(street1,location1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',54).
side2Pred(street1,location1).

% outside BeforeLocation1
% t(outside,beforeLocation1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',56).
outside(beforeLocation1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',59).
% street StreetToLocation1
% t(street,streetToLocation1).
street(streetToLocation1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',61).
% Side1(StreetToLocation1)=BeforeLocation1.
% side1Pred(streetToLocation1,beforeLocation1).
side1Pred(streetToLocation1,beforeLocation1).


% Side2(StreetToLocation1)=Location1.
% side2Pred(streetToLocation1,location1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',61).
side2Pred(streetToLocation1,location1).

% outside BetweenLocation1And2
% t(outside,betweenLocation1And2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',63).
outside(betweenLocation1And2).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',66).
% street StreetToBetweenLocation1And2
% t(street,streetToBetweenLocation1And2).
street(streetToBetweenLocation1And2).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',68).
% Side1(StreetToBetweenLocation1And2)=Location1.
% side1Pred(streetToBetweenLocation1And2,location1).
side1Pred(streetToBetweenLocation1And2,location1).


% Side2(StreetToBetweenLocation1And2)=BetweenLocation1And2.
% side2Pred(streetToBetweenLocation1And2,betweenLocation1And2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',68).
side2Pred(streetToBetweenLocation1And2,betweenLocation1And2).

% outside Location2
% t(outside,location2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',70).
outside(location2).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',72).
% street StreetToLocation2
% t(street,streetToLocation2).
street(streetToLocation2).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',74).
% Side1(StreetToLocation2)=BetweenLocation1And2.
% side1Pred(streetToLocation2,betweenLocation1And2).
side1Pred(streetToLocation2,betweenLocation1And2).


% Side2(StreetToLocation2)=Location2.
% side2Pred(streetToLocation2,location2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',74).
side2Pred(streetToLocation2,location2).

% outside NearLocation2
% t(outside,nearLocation2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',76).
outside(nearLocation2).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',79).
% street Street2
% t(street,street2).
street(street2).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',81).
% Side1(Street2)=Location2.
% side1Pred(street2,location2).
side1Pred(street2,location2).


% Side2(Street2)=NearLocation2.
% side2Pred(street2,nearLocation2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',81).
side2Pred(street2,nearLocation2).

% agent Passenger1
% t(agent,passenger1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',83).
agent(passenger1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',86).
% agent Driver1
% t(agent,driver1).
agent(driver1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',88).
% chair CarriageSeat1
% t(chair,carriageSeat1).
chair(carriageSeat1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',90).
% carriage Carriage1
% t(carriage,carriage1).
carriage(carriage1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',92).
% vehicledoor CarriageDoor1
% t(vehicledoor,carriageDoor1).
vehicledoor(carriageDoor1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',94).
% horse Horse1
% t(horse,horse1).
horse(horse1).
%; prune

% sort sita, sitb
% sort(sita).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',96).
sort(sita).
% sort(sitb).
sort(sitb).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',98).
% event! LieOn(sita,sitb)
% event(
%    lieOn(sita,sitb)).
events([lieOn/2]).
% mpred_prop(
%    lieOn(sita,sitb), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',98).
mpred_prop(lieOn(sita,sitb),event).

% event! SitOn(sita,sitb)
% event(
%    sitOn(sita,sitb)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',98).
events([sitOn/2]).
% mpred_prop(
%    sitOn(sita,sitb), 
%    event).
mpred_prop(sitOn(sita,sitb),event).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',100).
% event! RiseFrom(sita,sitb)
% event(
%    riseFrom(sita,sitb)).
events([riseFrom/2]).
% mpred_prop(
%    riseFrom(sita,sitb), 
%    event).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',100).
mpred_prop(riseFrom(sita,sitb),event).

% fluent! LyingOn(sita,sitb)
% fluent(
%    lyingOn(sita,sitb)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',100).
fluents([lyingOn/2]).
% mpred_prop(
%    lyingOn(sita,sitb), 
%    fluent).
mpred_prop(lyingOn(sita,sitb),fluent).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',102).
% fluent! SittingOn(sita,sitb)
% fluent(
%    sittingOn(sita,sitb)).
fluents([sittingOn/2]).
% mpred_prop(
%    sittingOn(sita,sitb), 
%    fluent).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',102).
mpred_prop(sittingOn(sita,sitb),fluent).

% sita! Passenger1
% t(sita,passenger1).
sita(passenger1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',104).
% sitb! CarriageSeat1
% t(sitb,carriageSeat1).
sitb(carriageSeat1).
%; release

% option manualrelease on
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',106).
:- if(is_e_toplevel).
:- set_ec_option(manualrelease, on).
:- endif.


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',106).
% [ball, diameter]
 % !ReleasedAt(Diameter(ball, diameter), 0).
% not(
%    releasedAt(
%       diameter(Ball,Diameter), 
%       0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',108).
not(releasedAt(diameter(Ball,Diameter),0)).


% [agent, object]
 % !ReleasedAt(Holding(agent, object), 0).
% not(
%    releasedAt(
%       holding(Agent,Object), 
%       0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',108).
not(releasedAt(holding(Agent,Object),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',110).
% [door]
 % !ReleasedAt(DoorUnlocked(door), 0).
% not(
%    releasedAt(
%       doorUnlocked(Door), 
%       0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',110).
not(releasedAt(doorUnlocked(Door),0)).


% [door]
 % !ReleasedAt(DoorIsOpen(door), 0).
% not(
%    releasedAt(
%       doorIsOpen(Door), 
%       0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',110).
not(releasedAt(doorIsOpen(Door),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',112).
% [agent]
 % !ReleasedAt(Sleep0(agent), 0).
% not(
%    releasedAt(
%       sleep0(Agent), 
%       0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',112).
not(releasedAt(sleep0(Agent),0)).


% [agent]
 % !ReleasedAt(Sleep1(agent), 0).
% not(
%    releasedAt(
%       sleep1(Agent), 
%       0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',112).
not(releasedAt(sleep1(Agent),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',114).
% [agent]
 % !ReleasedAt(Sleep2(agent), 0).
% not(
%    releasedAt(
%       sleep2(Agent), 
%       0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',114).
not(releasedAt(sleep2(Agent),0)).


% [agent]
 % !ReleasedAt(Sleep3(agent), 0).
% not(
%    releasedAt(
%       sleep3(Agent), 
%       0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',114).
not(releasedAt(sleep3(Agent),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',116).
% [agent]
 % !ReleasedAt(Sleep4(agent), 0).
% not(
%    releasedAt(
%       sleep4(Agent), 
%       0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',116).
not(releasedAt(sleep4(Agent),0)).


% [agent]
 % !ReleasedAt(Sleep5(agent), 0).
% not(
%    releasedAt(
%       sleep5(Agent), 
%       0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',116).
not(releasedAt(sleep5(Agent),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',118).
% [agent]
 % !ReleasedAt(Sleep6(agent), 0).
% not(
%    releasedAt(
%       sleep6(Agent), 
%       0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',118).
not(releasedAt(sleep6(Agent),0)).


% [agent, physobj]
 % !ReleasedAt(LyingOn(agent, physobj), 0).
% not(
%    releasedAt(
%       lyingOn(Agent,Physobj), 
%       0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',118).
not(releasedAt(lyingOn(Agent,Physobj),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',120).
% [agent, physobj]
 % !ReleasedAt(SittingOn(agent, physobj), 0).
% not(
%    releasedAt(
%       sittingOn(Agent,Physobj), 
%       0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',120).
not(releasedAt(sittingOn(Agent,Physobj),0)).


% [agent]
 % !ReleasedAt(Standing(agent), 0).
% not(
%    releasedAt(
%       standing(Agent), 
%       0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',120).
not(releasedAt(standing(Agent),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',122).
% [agent]
 % !ReleasedAt(Dressed(agent), 0).
% not(
%    releasedAt(
%       dressed(Agent), 
%       0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',122).
not(releasedAt(dressed(Agent),0)).


% [agent1, agent2, physobj]
 % !ReleasedAt(KnowRequest(agent1, agent2, physobj), 0).
% not(
%    releasedAt(
%       knowRequest(Agent1,Agent2,Physobj), 
%       0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',122).
not(releasedAt(knowRequest(Agent1,Agent2,Physobj),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',124).
% [horse, street]
 % !ReleasedAt(PointedToward(horse, street), 0).
% not(
%    releasedAt(
%       pointedToward(Horse,Street), 
%       0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',124).
not(releasedAt(pointedToward(Horse,Street),0)).


% [horse, vehicle]
 % !ReleasedAt(HitchedTo(horse, vehicle), 0).
% not(
%    releasedAt(
%       hitchedTo(Horse,Vehicle), 
%       0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',124).
not(releasedAt(hitchedTo(Horse,Vehicle),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',126).
% [object, vehicleon]
 % !ReleasedAt(OnVehicle(object, vehicleon), 0).
% not(
%    releasedAt(
%       onVehicle(Object,Vehicleon), 
%       0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',126).
not(releasedAt(onVehicle(Object,Vehicleon),0)).


% [object, vehiclein]
 % !ReleasedAt(InVehicle(object, vehiclein), 0).
% not(
%    releasedAt(
%       inVehicle(Object,Vehiclein), 
%       0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',126).
not(releasedAt(inVehicle(Object,Vehiclein),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',128).
% [vehicledoor]
 % !ReleasedAt(VehicleDoorIsOpen(vehicledoor), 0).
% not(
%    releasedAt(
%       vehicleDoorIsOpen(Vehicledoor), 
%       0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',128).
not(releasedAt(vehicleDoorIsOpen(Vehicledoor),0)).


% [ticketagent]
 % !ReleasedAt(BeTicketAgent0(ticketagent), 0).
% not(
%    releasedAt(
%       beTicketAgent0(Ticketagent), 
%       0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',128).
not(releasedAt(beTicketAgent0(Ticketagent),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',130).
% [ticketagent]
 % !ReleasedAt(BeTicketAgent1(ticketagent), 0).
% not(
%    releasedAt(
%       beTicketAgent1(Ticketagent), 
%       0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',130).
not(releasedAt(beTicketAgent1(Ticketagent),0)).


% [ticketagent]
 % !ReleasedAt(BeTicketAgent2(ticketagent), 0).
% not(
%    releasedAt(
%       beTicketAgent2(Ticketagent), 
%       0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',130).
not(releasedAt(beTicketAgent2(Ticketagent),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',132).
%; special cases
% [location]
 % ReleasedAt(At(CarriageSeat1,location),0).
% releasedAt(
%    at(carriageSeat1,Location), 
%    0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',132).
releasedAt(loc_at(carriageSeat1,Location),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',134).
% [location]
 % ReleasedAt(At(Driver1,location),0).
% releasedAt(
%    at(driver1,Location), 
%    0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',134).
releasedAt(loc_at(driver1,Location),0).


% [object, location]
% object!=% CarriageSeat1 & object!=Driver1 ->
% !ReleasedAt(At(object, location), 0).
% '->'(
%    ','(
%       diff(Object,carriageSeat1), 
%       diff(Object,driver1)), 
%    not(
%       releasedAt(
%          at(Object,Location), 
%          0))).
if diff(Object, carriageSeat1), diff(Object, driver1)then not releasedAt(loc_at(Object, Location), 0).

 /*  reactive_rule([ diff(Object,carriageSeat1),
   		diff(Object,driver1)
   	      ],
   	      [not(releasedAt(loc_at(Object,Location),0))]).
 */
 %  "% =================================".


%; initial state
% [agent,object]
 % !HoldsAt(Holding(agent,object),0).
% initially(
%    neg(
%       holding(Agent,Object))).
initially not holding(Agent, Object).
 %  initial_state([not(holding(Agent,Object))]).
 %  "% =================================".


% [agent,physobj]
 % !HoldsAt(SittingOn(agent,physobj),0).
% initially(
%    neg(
%       sittingOn(Agent,Physobj))).
initially not sittingOn(Agent, Physobj).
 %  initial_state([not(sittingOn(Agent,Physobj))]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',142).
% [agent,physobj]
 % !HoldsAt(LyingOn(agent,physobj),0).
% initially(
%    neg(
%       lyingOn(Agent,Physobj))).
initially not lyingOn(Agent, Physobj).
 %  initial_state([not(lyingOn(Agent,Physobj))]).
 %  "% =================================".


% [physobj1,physobj2]
 % !HoldsAt(On(physobj1, physobj2),0).
% initially(
%    neg(
%       on(Physobj1,Physobj2))).
initially not on(Physobj1, Physobj2).
 %  initial_state([not(on(Physobj1,Physobj2))]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',144).
% [agent]
 % HoldsAt(Dressed(agent),0).
% initially(
%    dressed(Agent)).
initially dressed(Agent).
 %  initial_state([dressed(Agent)]).
 %  "% =================================".


% [agent]
 % HoldsAt(Awake(agent),0).
% initially(
%    awake(Agent)).
initially awake(Agent).
 %  initial_state([awake(Agent)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',146).
% [agent]
 % HoldsAt(Sleep3(agent),0).
% initially(
%    sleep3(Agent)).
initially sleep3(Agent).
 %  initial_state([sleep3(Agent)]).
 %  "% =================================".


% [agent]
 % HoldsAt(Standing(agent),0).
% initially(
%    standing(Agent)).
initially standing(Agent).
 %  initial_state([standing(Agent)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',148).
% HoldsAt(At(Passenger1,NearLocation1),0).
% initially(
%    at(passenger1,nearLocation1)).
initially loc_at(passenger1, nearLocation1).
 %  initial_state([loc_at(passenger1,nearLocation1)]).
 %  "% =================================".


% HoldsAt(At(Horse1,BeforeLocation1),0).
% initially(
%    at(horse1,beforeLocation1)).
initially loc_at(horse1, beforeLocation1).
 %  initial_state([loc_at(horse1,beforeLocation1)]).
 %  "% =================================".


%;;;;;


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',150).
% HoldsAt(At(Carriage1,BeforeLocation1),0).
% initially(
%    at(carriage1,beforeLocation1)).
initially loc_at(carriage1, beforeLocation1).
 %  initial_state([loc_at(carriage1,beforeLocation1)]).
 %  "% =================================".


% HoldsAt(InVehicle(CarriageSeat1,Carriage1),0).
% initially(
%    inVehicle(carriageSeat1,carriage1)).
initially inVehicle(carriageSeat1, carriage1).
 %  initial_state([inVehicle(carriageSeat1,carriage1)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',152).
% HoldsAt(InVehicle(Driver1,Carriage1),0).
% initially(
%    inVehicle(driver1,carriage1)).
initially inVehicle(driver1, carriage1).
 %  initial_state([inVehicle(driver1,carriage1)]).
 %  "% =================================".


% [object]
% object!=% CarriageSeat1 & object!=Driver1 ->
% !HoldsAt(InVehicle(object,Carriage1),0).
% '->'(
%    ','(
%       diff(Object,carriageSeat1), 
%       diff(Object,driver1)), 
%    initially(
%       neg(
%          inVehicle(Object,carriage1)))).
if diff(Object, carriageSeat1), diff(Object, driver1)then initially not inVehicle(Object, carriage1).

 /*  reactive_rule([ diff(Object,carriageSeat1),
   		diff(Object,driver1)
   	      ],
   	      [initially(not(inVehicle(Object,carriage1)))]).
 */
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',156).
% [agent1,agent2,physobj]
 % !HoldsAt(KnowOrder(agent1,agent2,physobj),0).
% initially(
%    neg(
%       knowOrder(Agent1,Agent2,Physobj))).
initially not knowOrder(Agent1, Agent2, Physobj).
 %  initial_state([not(knowOrder(Agent1,Agent2,Physobj))]).
 %  "% =================================".


% [agent1,agent2,physobj]
 % !HoldsAt(KnowRequest(agent1,agent2,physobj),0).
% initially(
%    neg(
%       knowRequest(Agent1,Agent2,Physobj))).
initially not knowRequest(Agent1, Agent2, Physobj).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',156).

 /*  initial_state([ not(knowRequest(Agent1,
   				Agent2,
   				Physobj))
   	      ]).
 */
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',158).
% !HoldsAt(VehicleDoorIsOpen(CarriageDoor1),0).
% initially(
%    neg(
%       vehicleDoorIsOpen(carriageDoor1))).
initially not vehicleDoorIsOpen(carriageDoor1).
 %  initial_state([not(vehicleDoorIsOpen(carriageDoor1))]).
 %  "% =================================".


% HoldsAt(HitchedTo(Horse1,Carriage1),0).
% initially(
%    hitchedTo(horse1,carriage1)).
initially hitchedTo(horse1, carriage1).
 %  initial_state([hitchedTo(horse1,carriage1)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',160).
% HoldsAt(PointedToward(Horse1,StreetToLocation1),0).
% initially(
%    pointedToward(horse1,streetToLocation1)).
initially pointedToward(horse1, streetToLocation1).
 %  initial_state([pointedToward(horse1,streetToLocation1)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',162).
%; narrative


% Happens(WalkStreet12(Passenger1,Street1),0).
% happens(
%    walkStreet12(passenger1,street1), 
%    start).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',162).
observe(at(walkStreet12(passenger1,street1),start)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',164).
% Happens(Lash(Driver1,Horse1),1).
% happens(
%    lash(driver1,horse1), 
%    start+1).
observe lash(driver1, horse1)at start+1.
 %  observe([lash(driver1,horse1)],start+1).
 %  "% =================================".


% Happens(VehicleDoorOpen(Passenger1,CarriageDoor1),2).
% happens(
%    vehicleDoorOpen(passenger1,carriageDoor1), 
%    start+2).
observe vehicleDoorOpen(passenger1, carriageDoor1)at start+2.
 %  observe([vehicleDoorOpen(passenger1,carriageDoor1)],start+2).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',166).
% Happens(GetInVehicle(Passenger1,Carriage1),3).
% happens(
%    getInVehicle(passenger1,carriage1), 
%    start+3).
observe getInVehicle(passenger1, carriage1)at start+3.
 %  observe([getInVehicle(passenger1,carriage1)],start+3).
 %  "% =================================".


% Happens(VehicleDoorClose(Passenger1,CarriageDoor1),4).
% happens(
%    vehicleDoorClose(passenger1,carriageDoor1), 
%    start+4).
observe vehicleDoorClose(passenger1, carriageDoor1)at start+4.
 %  observe([vehicleDoorClose(passenger1,carriageDoor1)],start+4).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',168).
% Happens(SitOn(Passenger1,CarriageSeat1),5).
% happens(
%    sitOn(passenger1,carriageSeat1), 
%    start+5).
observe sitOn(passenger1, carriageSeat1)at start+5.
 %  observe([sitOn(passenger1,carriageSeat1)],start+5).
 %  "% =================================".


% Happens(PointToward(Driver1,Horse1,StreetToBetweenLocation1And2),6).
% happens(
%    pointToward(driver1,horse1,streetToBetweenLocation1And2), 
%    start+6).
observe pointToward(driver1, horse1, streetToBetweenLocation1And2)at start+6.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',168).

 /*  observe([pointToward(driver1,horse1,streetToBetweenLocation1And2)],
   	start+6).
 */
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',170).
% Happens(Lash(Driver1,Horse1),7).
% happens(
%    lash(driver1,horse1), 
%    start+7).
observe lash(driver1, horse1)at start+7.
 %  observe([lash(driver1,horse1)],start+7).
 %  "% =================================".


% Happens(PointToward(Driver1,Horse1,StreetToLocation2),8).
% happens(
%    pointToward(driver1,horse1,streetToLocation2), 
%    start+8).
observe pointToward(driver1, horse1, streetToLocation2)at start+8.
 %  observe([pointToward(driver1,horse1,streetToLocation2)],start+8).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',172).
% Happens(Lash(Driver1,Horse1),9).
% happens(
%    lash(driver1,horse1), 
%    start+9).
observe lash(driver1, horse1)at start+9.
 %  observe([lash(driver1,horse1)],start+9).
 %  "% =================================".


% Happens(RiseFrom(Passenger1,CarriageSeat1),10).
% happens(
%    riseFrom(passenger1,carriageSeat1), 
%    start+10).
observe riseFrom(passenger1, carriageSeat1)at start+10.
 %  observe([riseFrom(passenger1,carriageSeat1)],start+10).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',174).
% Happens(VehicleDoorOpen(Passenger1,CarriageDoor1),11).
% happens(
%    vehicleDoorOpen(passenger1,carriageDoor1), 
%    start+11).
observe vehicleDoorOpen(passenger1, carriageDoor1)at start+11.
 %  observe([vehicleDoorOpen(passenger1,carriageDoor1)],start+11).
 %  "% =================================".


% Happens(GetOutOfVehicle(Passenger1,Carriage1),12).
% happens(
%    getOutOfVehicle(passenger1,carriage1), 
%    start+12).
observe getOutOfVehicle(passenger1, carriage1)at start+12.
 %  observe([getOutOfVehicle(passenger1,carriage1)],start+12).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',176).
% Happens(VehicleDoorClose(Passenger1,CarriageDoor1),13).
% happens(
%    vehicleDoorClose(passenger1,carriageDoor1), 
%    start+13).
observe vehicleDoorClose(passenger1, carriageDoor1)at start+13.
 %  observe([vehicleDoorClose(passenger1,carriageDoor1)],start+13).
 %  "% =================================".


% Happens(WalkStreet12(Passenger1,Street2),14).
% happens(
%    walkStreet12(passenger1,street2), 
%    start+14).
observe walkStreet12(passenger1, street2)at start+14.
 %  observe([walkStreet12(passenger1,street2)],start+14).
 %  "% =================================".

% range time 0 15
% range(time,0,15).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',178).
range(time,0,15).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',180).
% range offset 0 0
% range(offset,0,0).
range(offset,0,0).

% range diameter 0 0
% range(diameter,0,0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',180).
range(diameter,0,0).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',183).
% completion Happens
% completion(happens).
completion(happens).
%; End of file.
% translate: ending  File: /pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e.lps 
