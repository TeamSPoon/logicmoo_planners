:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e',321).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.pel')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(ecalc).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.pel')).
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Mueller:2004c,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "Understanding script-based stories using commonsense reasoning",
%;   journal = "Cognitive Systems Research",
%;   volume = "5",
%;   number = "4",
%;   pages = "307--340",
%; }
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',22).
% option modeldiff on
:- call_pel_directive(option(modeldiff, on)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',24).
% ignore Love, ThreatenedBy
:- call_pel_directive(ignore(love)).
:- call_pel_directive(ignore(threatenedBy)).

% ignore LookOutOnto, Floor, BuildingOf, SkyOf, GroundOf
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',24).
:- call_pel_directive(ignore(lookOutOnto)).
:- call_pel_directive(ignore(floor)).
:- call_pel_directive(ignore(buildingOf)).
:- call_pel_directive(ignore(skyOf)).
:- call_pel_directive(ignore(groundOf)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',26).
% ignore Inside, Near
:- call_pel_directive(ignore(inside)).
:- call_pel_directive(ignore(near)).

% ignore See
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',26).
:- call_pel_directive(ignore(see)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',29).
% ignore ActOnSleep5
:- call_pel_directive(ignore(actOnSleep5)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',31).
% option renaming off
:- call_pel_directive(option(renaming, off)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',33).
% load foundations/Root.e
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',35).
% load answers/Mueller2003/Ontology.e
:- call_pel_directive(load('answers/Mueller2003/Ontology.e')).

% load answers/Mueller2004c/RTSpaceM.e
:- call_pel_directive(load('answers/Mueller2004c/RTSpaceM.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',37).
% load answers/Mueller2004c/OTSpaceM.e
:- call_pel_directive(load('answers/Mueller2004c/OTSpaceM.e')).

% load answers/Mueller2004c/Cognition.e
:- call_pel_directive(load('answers/Mueller2004c/Cognition.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',39).
% load answers/Mueller2003/Sleep.e
:- call_pel_directive(load('answers/Mueller2003/Sleep.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',41).
% door Door1
t(door,door1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',43).
% room Room0
t(room,room0).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',45).
% room Room1
t(room,room1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',47).
% Side1(Door1)=Room0.
side1(door1)=room0.


% Side2(Door1)=Room1.
side2(door1)=room1.

% agent Sleeper1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',49).
t(agent,sleeper1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',52).
% bed Bed1
t(bed,bed1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',54).
% outside Outside1
t(outside,outside1).
%; initial state
% [agent,object]
 % !HoldsAt(Holding(agent,object),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',56).
holds_at(not(holding(Agent,Object)),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',58).
% [agent,physobj]
 % !HoldsAt(SittingOn(agent,physobj),0).
holds_at(not(sittingOn(Agent,Physobj)),0).


% [agent,physobj]
 % !HoldsAt(LyingOn(agent,physobj),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',58).
holds_at(not(lyingOn(Agent,Physobj)),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',60).
% HoldsAt(Dressed(Sleeper1),0).
holds_at(dressed(sleeper1),0).


% HoldsAt(Awake(Sleeper1),0).
holds_at(awake(sleeper1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',62).
% HoldsAt(Sleep3(Sleeper1),0).
holds_at(sleep3(sleeper1),0).


% HoldsAt(Standing(Sleeper1),0).
holds_at(standing(sleeper1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',64).
% HoldsAt(DoorUnlocked(Door1),0).
holds_at(doorUnlocked(door1),0).


% HoldsAt(DoorIsOpen(Door1),0).
holds_at(doorIsOpen(door1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',66).
% HoldsAt(At(Sleeper1,Room0),0).
holds_at(at_loc(sleeper1,room0),0).


% HoldsAt(At(Bed1,Room1),0).
holds_at(at_loc(bed1,room1),0).


%; narrative


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',70).
% Happens(GetTired(Sleeper1),0).
happens_at(getTired(sleeper1),0).


% Happens(WalkThroughDoor12(Sleeper1,Door1),1).
happens_at(walkThroughDoor12(sleeper1,door1),1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',72).
% Happens(GetUndressed(Sleeper1),2).
happens_at(getUndressed(sleeper1),2).


% Happens(LieOn(Sleeper1,Bed1),3).
happens_at(lieOn(sleeper1,bed1),3).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',74).
% Happens(FallAsleep(Sleeper1),4).
happens_at(fallAsleep(sleeper1),4).


% Happens(Dream(Sleeper1),5).
happens_at(dream(sleeper1),5).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',76).
% Happens(WakeUp(Sleeper1),6).
happens_at(wakeUp(sleeper1),6).


% Happens(RiseFrom(Sleeper1,Bed1),7).
happens_at(riseFrom(sleeper1,bed1),7).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',78).
% Happens(GetDressed(Sleeper1),8).
happens_at(getDressed(sleeper1),8).


% Happens(WalkThroughDoor21(Sleeper1,Door1),9).
happens_at(walkThroughDoor21(sleeper1,door1),9).

% range time 0 10
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',80).
:- call_pel_directive(range(time, 0, 10)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',82).
% range offset 0 0
:- call_pel_directive(range(offset, 0, 0)).

% range diameter 0 0
:- call_pel_directive(range(diameter, 0, 0)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.e',85).
% completion Happens
:- call_pel_directive(completion(happens_at)).
%; End of file.
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleeping.pel')).
