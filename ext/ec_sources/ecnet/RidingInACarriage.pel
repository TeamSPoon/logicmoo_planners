:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Rest.e',148).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.pel')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(ecalc).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.pel')).
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Mueller:2004c,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "Understanding script-based stories using commonsense reasoning",
%;   journal = "Cognitive Systems Research",
%;   volume = "5",
%;   number = "4",
%;   pages = "307--340",
%; }
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',22).
% option modeldiff on
:- call_pel_directive(option(modeldiff, on)).

% option renaming off
:- call_pel_directive(option(renaming, off)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',25).
% ignore Love, ThreatenedBy
:- call_pel_directive(ignore(love)).
:- call_pel_directive(ignore(threatenedBy)).

% ignore LookOutOnto, Floor, BuildingOf, SkyOf, GroundOf
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',25).
:- call_pel_directive(ignore(lookOutOnto)).
:- call_pel_directive(ignore(floor)).
:- call_pel_directive(ignore(buildingOf)).
:- call_pel_directive(ignore(skyOf)).
:- call_pel_directive(ignore(groundOf)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',27).
% ignore Inside, PutInside, On, PlaceOn
:- call_pel_directive(ignore(inside)).
:- call_pel_directive(ignore(putInside)).
:- call_pel_directive(ignore(on)).
:- call_pel_directive(ignore(placeOn)).

% ignore Like, Happy, BecomeAngryAt
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',27).
:- call_pel_directive(ignore(like)).
:- call_pel_directive(ignore(happy)).
:- call_pel_directive(ignore(becomeAngryAt)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',29).
% ignore Near, WalkFrom, WalkFromTo, RunFromTo
:- call_pel_directive(ignore(near)).
:- call_pel_directive(ignore(walkFrom)).
:- call_pel_directive(ignore(walkFromTo)).
:- call_pel_directive(ignore(runFromTo)).

% ignore ActOnIntentionToWalkIn, IntentionToWalkIn, InvitedIn, InviteIn
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',29).
:- call_pel_directive(ignore(actOnIntentionToWalkIn)).
:- call_pel_directive(ignore(intentionToWalkIn)).
:- call_pel_directive(ignore(invitedIn)).
:- call_pel_directive(ignore(inviteIn)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',31).
% ignore TakeOffOf, TakeOutOf, LetGoOf
:- call_pel_directive(ignore(takeOffOf)).
:- call_pel_directive(ignore(takeOutOf)).
:- call_pel_directive(ignore(letGoOf)).

% ignore Greet, SayGoodbye, Order, KnowOrder
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',31).
:- call_pel_directive(ignore(greet)).
:- call_pel_directive(ignore(sayGoodbye)).
:- call_pel_directive(ignore(order)).
:- call_pel_directive(ignore(knowOrder)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',33).
% ignore Request, KnowRequest
:- call_pel_directive(ignore(request)).
:- call_pel_directive(ignore(knowRequest)).

% ignore TakeOffOf, PickUp, LetGoOf, Hold, Holding, HandTo, Grab
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',33).
:- call_pel_directive(ignore(takeOffOf)).
:- call_pel_directive(ignore(pickUp)).
:- call_pel_directive(ignore(letGoOf)).
:- call_pel_directive(ignore(hold)).
:- call_pel_directive(ignore(holding)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',33).
:- call_pel_directive(ignore(handTo)).
:- call_pel_directive(ignore(grab)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',35).
% ignore Move
:- call_pel_directive(ignore(move)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',37).
% load foundations/Root.e
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',39).
% load answers/Mueller2003/Ontology.e
:- call_pel_directive(load('answers/Mueller2003/Ontology.e')).

% load answers/Mueller2004c/OTSpaceM.e
:- call_pel_directive(load('answers/Mueller2004c/OTSpaceM.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',41).
% load answers/Mueller2004c/RTSpaceM.e
:- call_pel_directive(load('answers/Mueller2004c/RTSpaceM.e')).

% load answers/Mueller2004c/HandTo.e
:- call_pel_directive(load('answers/Mueller2004c/HandTo.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',43).
% load answers/Mueller2004c/Money.e
:- call_pel_directive(load('answers/Mueller2004c/Money.e')).

% load answers/Mueller2003/Sleep.e
:- call_pel_directive(load('answers/Mueller2003/Sleep.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',45).
% load answers/Mueller2003/SpeechAct.e
:- call_pel_directive(load('answers/Mueller2003/SpeechAct.e')).

% load answers/Mueller2004c/Vehicle.e
:- call_pel_directive(load('answers/Mueller2004c/Vehicle.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',48).
% outside NearLocation1
t(outside,nearLocation1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',50).
% street Street1
t(street,street1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',52).
% outside Location1
t(outside,location1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',54).
% Side1(Street1)=NearLocation1.
side1(street1)=nearLocation1.


% Side2(Street1)=Location1.
side2(street1)=location1.

% outside BeforeLocation1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',56).
t(outside,beforeLocation1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',59).
% street StreetToLocation1
t(street,streetToLocation1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',61).
% Side1(StreetToLocation1)=BeforeLocation1.
side1(streetToLocation1)=beforeLocation1.


% Side2(StreetToLocation1)=Location1.
side2(streetToLocation1)=location1.

% outside BetweenLocation1And2
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',63).
t(outside,betweenLocation1And2).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',66).
% street StreetToBetweenLocation1And2
t(street,streetToBetweenLocation1And2).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',68).
% Side1(StreetToBetweenLocation1And2)=Location1.
side1(streetToBetweenLocation1And2)=location1.


% Side2(StreetToBetweenLocation1And2)=BetweenLocation1And2.
side2(streetToBetweenLocation1And2)=betweenLocation1And2.

% outside Location2
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',70).
t(outside,location2).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',72).
% street StreetToLocation2
t(street,streetToLocation2).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',74).
% Side1(StreetToLocation2)=BetweenLocation1And2.
side1(streetToLocation2)=betweenLocation1And2.


% Side2(StreetToLocation2)=Location2.
side2(streetToLocation2)=location2.

% outside NearLocation2
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',76).
t(outside,nearLocation2).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',79).
% street Street2
t(street,street2).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',81).
% Side1(Street2)=Location2.
side1(street2)=location2.


% Side2(Street2)=NearLocation2.
side2(street2)=nearLocation2.

% agent Passenger1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',83).
t(agent,passenger1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',86).
% agent Driver1
t(agent,driver1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',88).
% chair CarriageSeat1
t(chair,carriageSeat1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',90).
% carriage Carriage1
t(carriage,carriage1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',92).
% vehicledoor CarriageDoor1
t(vehicledoor,carriageDoor1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',94).
% horse Horse1
t(horse,horse1).
%; prune

% sort sita, sitb
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',96).
sort(sita).
sort(sitb).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',98).
% event! LieOn(sita,sitb)
event(lieOn(sita,sitb)).

% event! SitOn(sita,sitb)
event(sitOn(sita,sitb)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',100).
% event! RiseFrom(sita,sitb)
event(riseFrom(sita,sitb)).

% fluent! LyingOn(sita,sitb)
fluent(lyingOn(sita,sitb)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',102).
% fluent! SittingOn(sita,sitb)
fluent(sittingOn(sita,sitb)).

% sita! Passenger1
t(sita,passenger1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',104).
% sitb! CarriageSeat1
t(sitb,carriageSeat1).
%; release

% option manualrelease on
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',106).
:- call_pel_directive(option(manualrelease, on)).


% [ball, diameter]
 % !ReleasedAt(Diameter(ball, diameter), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',108).
not(released_at(diameter(Ball,Diameter),0)).


% [agent, object]
 % !ReleasedAt(Holding(agent, object), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',108).
not(released_at(holding(Agent,Object),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',110).
% [door]
 % !ReleasedAt(DoorUnlocked(door), 0).
not(released_at(doorUnlocked(Door),0)).


% [door]
 % !ReleasedAt(DoorIsOpen(door), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',110).
not(released_at(doorIsOpen(Door),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',112).
% [agent]
 % !ReleasedAt(Sleep0(agent), 0).
not(released_at(sleep0(Agent),0)).


% [agent]
 % !ReleasedAt(Sleep1(agent), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',112).
not(released_at(sleep1(Agent),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',114).
% [agent]
 % !ReleasedAt(Sleep2(agent), 0).
not(released_at(sleep2(Agent),0)).


% [agent]
 % !ReleasedAt(Sleep3(agent), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',114).
not(released_at(sleep3(Agent),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',116).
% [agent]
 % !ReleasedAt(Sleep4(agent), 0).
not(released_at(sleep4(Agent),0)).


% [agent]
 % !ReleasedAt(Sleep5(agent), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',116).
not(released_at(sleep5(Agent),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',118).
% [agent]
 % !ReleasedAt(Sleep6(agent), 0).
not(released_at(sleep6(Agent),0)).


% [agent, physobj]
 % !ReleasedAt(LyingOn(agent, physobj), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',118).
not(released_at(lyingOn(Agent,Physobj),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',120).
% [agent, physobj]
 % !ReleasedAt(SittingOn(agent, physobj), 0).
not(released_at(sittingOn(Agent,Physobj),0)).


% [agent]
 % !ReleasedAt(Standing(agent), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',120).
not(released_at(standing(Agent),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',122).
% [agent]
 % !ReleasedAt(Dressed(agent), 0).
not(released_at(dressed(Agent),0)).


% [agent1, agent2, physobj]
 % !ReleasedAt(KnowRequest(agent1, agent2, physobj), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',122).
not(released_at(knowRequest(Agent1,Agent2,Physobj),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',124).
% [horse, street]
 % !ReleasedAt(PointedToward(horse, street), 0).
not(released_at(pointedToward(Horse,Street),0)).


% [horse, vehicle]
 % !ReleasedAt(HitchedTo(horse, vehicle), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',124).
not(released_at(hitchedTo(Horse,Vehicle),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',126).
% [object, vehicleon]
 % !ReleasedAt(OnVehicle(object, vehicleon), 0).
not(released_at(onVehicle(Object,Vehicleon),0)).


% [object, vehiclein]
 % !ReleasedAt(InVehicle(object, vehiclein), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',126).
not(released_at(inVehicle(Object,Vehiclein),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',128).
% [vehicledoor]
 % !ReleasedAt(VehicleDoorIsOpen(vehicledoor), 0).
not(released_at(vehicleDoorIsOpen(Vehicledoor),0)).


% [ticketagent]
 % !ReleasedAt(BeTicketAgent0(ticketagent), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',128).
not(released_at(beTicketAgent0(Ticketagent),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',130).
% [ticketagent]
 % !ReleasedAt(BeTicketAgent1(ticketagent), 0).
not(released_at(beTicketAgent1(Ticketagent),0)).


% [ticketagent]
 % !ReleasedAt(BeTicketAgent2(ticketagent), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',130).
not(released_at(beTicketAgent2(Ticketagent),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',132).
%; special cases
% [location]
 % ReleasedAt(At(CarriageSeat1,location),0).
released_at(at_loc(carriageSeat1,Location),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',134).
% [location]
 % ReleasedAt(At(Driver1,location),0).
released_at(at_loc(driver1,Location),0).


% [object, location]
% object!=% CarriageSeat1 & object!=Driver1 ->
% !ReleasedAt(At(object, location), 0).
Object\=carriageSeat1, Object\=driver1 ->
    not(released_at(at_loc(Object, Location), 0)).


%; initial state
% [agent,object]
 % !HoldsAt(Holding(agent,object),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',140).
holds_at(not(holding(Agent,Object)),0).


% [agent,physobj]
 % !HoldsAt(SittingOn(agent,physobj),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',140).
holds_at(not(sittingOn(Agent,Physobj)),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',142).
% [agent,physobj]
 % !HoldsAt(LyingOn(agent,physobj),0).
holds_at(not(lyingOn(Agent,Physobj)),0).


% [physobj1,physobj2]
 % !HoldsAt(On(physobj1, physobj2),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',142).
holds_at(not(on(Physobj1,Physobj2)),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',144).
% [agent]
 % HoldsAt(Dressed(agent),0).
holds_at(dressed(Agent),0).


% [agent]
 % HoldsAt(Awake(agent),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',144).
holds_at(awake(Agent),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',146).
% [agent]
 % HoldsAt(Sleep3(agent),0).
holds_at(sleep3(Agent),0).


% [agent]
 % HoldsAt(Standing(agent),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',146).
holds_at(standing(Agent),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',148).
% HoldsAt(At(Passenger1,NearLocation1),0).
holds_at(at_loc(passenger1,nearLocation1),0).


% HoldsAt(At(Horse1,BeforeLocation1),0).
holds_at(at_loc(horse1,beforeLocation1),0).


%;;;;;


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',150).
% HoldsAt(At(Carriage1,BeforeLocation1),0).
holds_at(at_loc(carriage1,beforeLocation1),0).


% HoldsAt(InVehicle(CarriageSeat1,Carriage1),0).
holds_at(inVehicle(carriageSeat1,carriage1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',152).
% HoldsAt(InVehicle(Driver1,Carriage1),0).
holds_at(inVehicle(driver1,carriage1),0).


% [object]
% object!=% CarriageSeat1 & object!=Driver1 ->
% !HoldsAt(InVehicle(object,Carriage1),0).
Object\=carriageSeat1, Object\=driver1 ->
    holds_at(not(inVehicle(Object, carriage1)), 0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',156).
% [agent1,agent2,physobj]
 % !HoldsAt(KnowOrder(agent1,agent2,physobj),0).
holds_at(not(knowOrder(Agent1,Agent2,Physobj)),0).


% [agent1,agent2,physobj]
 % !HoldsAt(KnowRequest(agent1,agent2,physobj),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',156).
holds_at(not(knowRequest(Agent1,Agent2,Physobj)),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',158).
% !HoldsAt(VehicleDoorIsOpen(CarriageDoor1),0).
holds_at(not(vehicleDoorIsOpen(carriageDoor1)),0).


% HoldsAt(HitchedTo(Horse1,Carriage1),0).
holds_at(hitchedTo(horse1,carriage1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',160).
% HoldsAt(PointedToward(Horse1,StreetToLocation1),0).
holds_at(pointedToward(horse1,streetToLocation1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',162).
%; narrative


% Happens(WalkStreet12(Passenger1,Street1),0).
happens_at(walkStreet12(passenger1,street1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',164).
% Happens(Lash(Driver1,Horse1),1).
happens_at(lash(driver1,horse1),1).


% Happens(VehicleDoorOpen(Passenger1,CarriageDoor1),2).
happens_at(vehicleDoorOpen(passenger1,carriageDoor1),2).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',166).
% Happens(GetInVehicle(Passenger1,Carriage1),3).
happens_at(getInVehicle(passenger1,carriage1),3).


% Happens(VehicleDoorClose(Passenger1,CarriageDoor1),4).
happens_at(vehicleDoorClose(passenger1,carriageDoor1),4).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',168).
% Happens(SitOn(Passenger1,CarriageSeat1),5).
happens_at(sitOn(passenger1,carriageSeat1),5).


% Happens(PointToward(Driver1,Horse1,StreetToBetweenLocation1And2),6).
happens_at(pointToward(driver1,horse1,streetToBetweenLocation1And2),6).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',170).
% Happens(Lash(Driver1,Horse1),7).
happens_at(lash(driver1,horse1),7).


% Happens(PointToward(Driver1,Horse1,StreetToLocation2),8).
happens_at(pointToward(driver1,horse1,streetToLocation2),8).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',172).
% Happens(Lash(Driver1,Horse1),9).
happens_at(lash(driver1,horse1),9).


% Happens(RiseFrom(Passenger1,CarriageSeat1),10).
happens_at(riseFrom(passenger1,carriageSeat1),10).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',174).
% Happens(VehicleDoorOpen(Passenger1,CarriageDoor1),11).
happens_at(vehicleDoorOpen(passenger1,carriageDoor1),11).


% Happens(GetOutOfVehicle(Passenger1,Carriage1),12).
happens_at(getOutOfVehicle(passenger1,carriage1),12).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',176).
% Happens(VehicleDoorClose(Passenger1,CarriageDoor1),13).
happens_at(vehicleDoorClose(passenger1,carriageDoor1),13).


% Happens(WalkStreet12(Passenger1,Street2),14).
happens_at(walkStreet12(passenger1,street2),14).

% range time 0 15
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',178).
:- call_pel_directive(range(time, 0, 15)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',180).
% range offset 0 0
:- call_pel_directive(range(offset, 0, 0)).

% range diameter 0 0
:- call_pel_directive(range(diameter, 0, 0)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.e',183).
% completion Happens
:- call_pel_directive(completion(happens_at)).
%; End of file.
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/RidingInACarriage.pel')).
