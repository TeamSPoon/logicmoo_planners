:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',142).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.pel')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(ecalc).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.pel')).
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; DEV-MUC3-0008
%; Kidnapping
%;
%; @article{Mueller:2004c,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "Understanding script-based stories using commonsense reasoning",
%;   journal = "Cognitive Systems Research",
%;   volume = "5",
%;   number = "4",
%;   pages = "307--340",
%; }
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',25).
% ignore SkyOf, GroundOf, Near, WalkFromTo, RunFromTo
:- call_pel_directive(ignore(skyOf)).
:- call_pel_directive(ignore(groundOf)).
:- call_pel_directive(ignore(near)).
:- call_pel_directive(ignore(walkFromTo)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',25).
:- call_pel_directive(ignore(runFromTo)).

% ignore RollAlong, Diameter, Move, HoldSome
:- call_pel_directive(ignore(rollAlong)).
:- call_pel_directive(ignore(diameter)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',25).
:- call_pel_directive(ignore(move)).
:- call_pel_directive(ignore(holdSome)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',27).
% ignore On, DoorUnlock, DoorLock
:- call_pel_directive(ignore(on)).
:- call_pel_directive(ignore(doorUnlock)).
:- call_pel_directive(ignore(doorLock)).

% ignore WalkDownStaircase, WalkUpStaircase
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',27).
:- call_pel_directive(ignore(walkDownStaircase)).
:- call_pel_directive(ignore(walkUpStaircase)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',30).
% ignore Request, KnowRequest, Order, KnowOrder, SayGoodbye
:- call_pel_directive(ignore(request)).
:- call_pel_directive(ignore(knowRequest)).
:- call_pel_directive(ignore(order)).
:- call_pel_directive(ignore(knowOrder)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',30).
:- call_pel_directive(ignore(sayGoodbye)).

% ignore IntentionToWalkIn, InvitedIn
:- call_pel_directive(ignore(intentionToWalkIn)).
:- call_pel_directive(ignore(invitedIn)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',32).
% ignore Snowing
:- call_pel_directive(ignore(snowing)).

% ignore Like, Dislike, LikeSnow
:- call_pel_directive(ignore(like)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',32).
:- call_pel_directive(ignore(dislike)).
:- call_pel_directive(ignore(likeSnow)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',35).
% load foundations/Root.e
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',37).
% load answers/Mueller2003/Ontology.e
:- call_pel_directive(load('answers/Mueller2003/Ontology.e')).

% load answers/Mueller2004c/OTSpaceM.e
:- call_pel_directive(load('answers/Mueller2004c/OTSpaceM.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',39).
% load answers/Mueller2004c/RTSpaceM.e
:- call_pel_directive(load('answers/Mueller2004c/RTSpaceM.e')).

% load answers/Mueller2003/Feeling.e
:- call_pel_directive(load('answers/Mueller2003/Feeling.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',41).
% load answers/Mueller2004c/Condition.e
:- call_pel_directive(load('answers/Mueller2004c/Condition.e')).

% load answers/Mueller2004c/Gun.e
:- call_pel_directive(load('answers/Mueller2004c/Gun.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',43).
% load answers/Mueller2003/Sleep.e
:- call_pel_directive(load('answers/Mueller2003/Sleep.e')).

% load answers/Mueller2003/SpeechAct.e
:- call_pel_directive(load('answers/Mueller2003/SpeechAct.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',46).
% gun Gun1
t(gun,gun1).

% bullet Bullet1
t(bullet,bullet1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',48).
% HoldsAt(Intact(Gun1),0).
holds_at(intact(gun1),0).


% HoldsAt(Intact(Bullet1),0).
holds_at(intact(bullet1),0).

% agent Perp1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',50).
t(agent,perp1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',53).
% agent HumanTarget1
t(agent,humanTarget1).


% HoldsAt(Calm(HumanTarget1),0).
holds_at(calm(humanTarget1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',55).
% HoldsAt(Alive(HumanTarget1),0).
holds_at(alive(humanTarget1),0).


% HoldsAt(Awake(HumanTarget1),0).
holds_at(awake(humanTarget1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',57).
% HoldsAt(Standing(HumanTarget1),0).
holds_at(standing(humanTarget1),0).


% HoldsAt(Sleep2(HumanTarget1),0).
holds_at(sleep2(humanTarget1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',59).
% !HoldsAt(Injured(HumanTarget1),0).
holds_at(not(injured(humanTarget1)),0).


% [object]
 % !HoldsAt(Holding(HumanTarget1,object),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',59).
holds_at(not(holding(humanTarget1,Object)),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',61).
% HoldsAt(At(HumanTarget1,Outside1),0).
holds_at(at_loc(humanTarget1,outside1),0).


% [physobj1,physobj2]
 % !HoldsAt(Inside(physobj1,physobj2),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',61).
holds_at(not(inside(Physobj1,Physobj2)),0).


%; prune

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',65).
% sort shoota, shootb, shooto, shooth, shootp
sort(shoota).
sort(shootb).
sort(shooto).
sort(shooth).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',65).
sort(shootp).

% event! Shoot(shoota,shootb,shooto)
event(shoot(shoota,shootb,shooto)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',67).
% event! ShootInjure(shoota,shootb,shooth)
event(shootInjure(shoota,shootb,shooth)).

% event! ShootKill(shoota,shootb,shooth)
event(shootKill(shoota,shootb,shooth)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',69).
% event! ShootDamage(shoota,shootb,shootp)
event(shootDamage(shoota,shootb,shootp)).

% event! ShootDestroy(shoota,shootb,shootp)
event(shootDestroy(shoota,shootb,shootp)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',71).
% shoota! Perp1
t(shoota,perp1).

% shootb! Gun1
t(shootb,gun1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',73).
% shooto! HumanTarget1
t(shooto,humanTarget1).

% shooth! HumanTarget1
t(shooth,humanTarget1).
%; room-scale topological space

% outside Outside1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',76).
t(outside,outside1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',78).
% outside Outside2
t(outside,outside2).

% room Inside1
t(room,inside1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',80).
% door Door1
t(door,door1).

% building Building1
t(building,building1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',82).
% street Street1
t(street,street1).


% Side1(Door1)=Outside2.
side1(door1)=outside2.


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',84).
% Side2(Door1)=Inside1.
side2(door1)=inside1.


% LookOutOnto(Inside1)=Outside1.
lookOutOnto(inside1)=outside1.


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',86).
% Floor(Inside1)=1.
floor(inside1)=1.


% BuildingOf(Inside1)=Building1.
buildingOf(inside1)=building1.


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',88).
% Side1(Street1)=Outside1.
side1(street1)=outside1.


% Side2(Street1)=Outside2.
side2(street1)=outside2.


% HoldsAt(Calm(Perp1),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',90).
holds_at(calm(perp1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',92).
% HoldsAt(Alive(Perp1),0).
holds_at(alive(perp1),0).


% HoldsAt(Awake(Perp1),0).
holds_at(awake(perp1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',94).
% HoldsAt(Standing(Perp1),0).
holds_at(standing(perp1),0).


% HoldsAt(Sleep2(Perp1),0).
holds_at(sleep2(perp1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',96).
% !HoldsAt(Injured(Perp1),0).
holds_at(not(injured(perp1)),0).


% [object]
 % !HoldsAt(Holding(Perp1,object),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',96).
holds_at(not(holding(perp1,Object)),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',98).
% HoldsAt(At(Gun1,Outside2),0).
holds_at(at_loc(gun1,outside2),0).


% HoldsAt(At(Perp1,Outside2),0).
holds_at(at_loc(perp1,outside2),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',100).
% HoldsAt(At(Bullet1,Outside2),0).
holds_at(at_loc(bullet1,outside2),0).


% HoldsAt(DoorIsOpen(Door1),0).
holds_at(doorIsOpen(door1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',102).
% HoldsAt(DoorUnlocked(Door1),0).
holds_at(doorUnlocked(door1),0).


% [agent1,agent2]
 % !HoldsAt(ThreatenedBy(agent1,agent2),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',102).
holds_at(not(threatenedBy(Agent1,Agent2)),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',104).
% [agent1,agent2]
 % !HoldsAt(AngryAt(agent1,agent2),0).
holds_at(not(angryAt(Agent1,Agent2)),0).


% [physobj1,physobj2]
 % !HoldsAt(Inside(physobj1,physobj2),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',104).
holds_at(not(inside(Physobj1,Physobj2)),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',106).
% [agent,object]
 % !HoldsAt(Love(agent,object),0).
holds_at(not(love(Agent,Object)),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',108).
%; narrative


% Happens(PickUp(Perp1,Gun1),0).
happens_at(pickUp(perp1,gun1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',110).
% Happens(PickUp(Perp1,Bullet1),1).
happens_at(pickUp(perp1,bullet1),1).


% Happens(PutInside(Perp1,Bullet1,Gun1),2).
happens_at(putInside(perp1,bullet1,gun1),2).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',112).
% Happens(WalkStreet21(Perp1,Street1),3).
happens_at(walkStreet21(perp1,street1),3).


% Happens(Threaten(Perp1,HumanTarget1,Gun1),4).
happens_at(threaten(perp1,humanTarget1,gun1),4).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',114).
% Happens(Grab(Perp1,HumanTarget1),5).
happens_at(grab(perp1,humanTarget1),5).


% Happens(WalkStreet12(Perp1,Street1),6).
happens_at(walkStreet12(perp1,street1),6).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',116).
% Happens(WalkThroughDoor12(Perp1,Door1),7).
happens_at(walkThroughDoor12(perp1,door1),7).


% Happens(LetGoOf(Perp1,HumanTarget1),8).
happens_at(letGoOf(perp1,humanTarget1),8).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',118).
% Happens(Shoot(Perp1,Gun1,HumanTarget1),9).
happens_at(shoot(perp1,gun1,humanTarget1),9).


% Happens(ShootKill(Perp1,Gun1,HumanTarget1),9).
happens_at(shootKill(perp1,gun1,humanTarget1),9).

% range time 0 10
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',120).
:- call_pel_directive(range(time, 0, 10)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',122).
% range offset 0 3
:- call_pel_directive(range(offset, 0, 3)).

% range diameter 0 0
:- call_pel_directive(range(diameter, 0, 0)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',125).
% completion Happens
:- call_pel_directive(completion(happens_at)).
%; End of file.
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.pel')).
