:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/SpeechAct.e',228).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.pel')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(ecalc).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.pel')).
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Mueller:2004c,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "Understanding script-based stories using commonsense reasoning",
%;   journal = "Cognitive Systems Research",
%;   volume = "5",
%;   number = "4",
%;   pages = "307--340",
%; }
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',22).
% option modeldiff on
:- call_pel_directive(option(modeldiff, on)).

% option renaming off
:- call_pel_directive(option(renaming, off)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',25).
% ignore Love, ThreatenedBy
:- call_pel_directive(ignore(love)).
:- call_pel_directive(ignore(threatenedBy)).

% ignore LookOutOnto, Floor, BuildingOf, SkyOf, GroundOf
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',25).
:- call_pel_directive(ignore(lookOutOnto)).
:- call_pel_directive(ignore(floor)).
:- call_pel_directive(ignore(buildingOf)).
:- call_pel_directive(ignore(skyOf)).
:- call_pel_directive(ignore(groundOf)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',27).
% ignore Inside, PutInside, On, PlaceOn
:- call_pel_directive(ignore(inside)).
:- call_pel_directive(ignore(putInside)).
:- call_pel_directive(ignore(on)).
:- call_pel_directive(ignore(placeOn)).

% ignore Like, Happy, BecomeAngryAt
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',27).
:- call_pel_directive(ignore(like)).
:- call_pel_directive(ignore(happy)).
:- call_pel_directive(ignore(becomeAngryAt)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',29).
% ignore Near, WalkFrom, WalkFromTo, RunFromTo
:- call_pel_directive(ignore(near)).
:- call_pel_directive(ignore(walkFrom)).
:- call_pel_directive(ignore(walkFromTo)).
:- call_pel_directive(ignore(runFromTo)).

% ignore ActOnIntentionToWalkIn, IntentionToWalkIn, InvitedIn, InviteIn
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',29).
:- call_pel_directive(ignore(actOnIntentionToWalkIn)).
:- call_pel_directive(ignore(intentionToWalkIn)).
:- call_pel_directive(ignore(invitedIn)).
:- call_pel_directive(ignore(inviteIn)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',31).
% ignore TakeOffOf, TakeOutOf, LetGoOf
:- call_pel_directive(ignore(takeOffOf)).
:- call_pel_directive(ignore(takeOutOf)).
:- call_pel_directive(ignore(letGoOf)).

% ignore Greet, SayGoodbye, Order, KnowOrder
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',31).
:- call_pel_directive(ignore(greet)).
:- call_pel_directive(ignore(sayGoodbye)).
:- call_pel_directive(ignore(order)).
:- call_pel_directive(ignore(knowOrder)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',34).
% load foundations/Root.e
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',36).
% load answers/Mueller2003/Ontology.e
:- call_pel_directive(load('answers/Mueller2003/Ontology.e')).

% load answers/Mueller2004c/OTSpaceM.e
:- call_pel_directive(load('answers/Mueller2004c/OTSpaceM.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',38).
% load answers/Mueller2004c/RTSpaceM.e
:- call_pel_directive(load('answers/Mueller2004c/RTSpaceM.e')).

% load answers/Mueller2004c/HandTo.e
:- call_pel_directive(load('answers/Mueller2004c/HandTo.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',40).
% load answers/Mueller2004c/Money.e
:- call_pel_directive(load('answers/Mueller2004c/Money.e')).

% load answers/Mueller2003/Sleep.e
:- call_pel_directive(load('answers/Mueller2003/Sleep.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',42).
% load answers/Mueller2003/SpeechAct.e
:- call_pel_directive(load('answers/Mueller2003/SpeechAct.e')).

% load answers/Mueller2004c/Vehicle.e
:- call_pel_directive(load('answers/Mueller2004c/Vehicle.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',45).
% outside NearStation1
t(outside,nearStation1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',47).
% street Street1
t(street,street1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',49).
% outside Station1
t(outside,station1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',51).
% Side1(Street1)=NearStation1.
side1(street1)=nearStation1.


% Side2(Street1)=Station1.
side2(street1)=station1.

% room WaitingRoom1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',53).
t(room,waitingRoom1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',56).
% door Door1
t(door,door1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',58).
% Side1(Door1)=Station1.
side1(door1)=station1.


% Side2(Door1)=WaitingRoom1.
side2(door1)=waitingRoom1.

% outside BeforeStation1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',60).
t(outside,beforeStation1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',63).
% track TrackToStation1
t(track,trackToStation1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',65).
% Side1(TrackToStation1)=BeforeStation1.
side1(trackToStation1)=beforeStation1.


% Side2(TrackToStation1)=Station1.
side2(trackToStation1)=station1.

% outside BetweenStation1And2
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',67).
t(outside,betweenStation1And2).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',70).
% track TrackToBetweenStation1And2
t(track,trackToBetweenStation1And2).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',72).
% Side1(TrackToBetweenStation1And2)=Station1.
side1(trackToBetweenStation1And2)=station1.


% Side2(TrackToBetweenStation1And2)=BetweenStation1And2.
side2(trackToBetweenStation1And2)=betweenStation1And2.

% outside Station2
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',74).
t(outside,station2).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',76).
% track TrackToStation2
t(track,trackToStation2).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',78).
% Side1(TrackToStation2)=BetweenStation1And2.
side1(trackToStation2)=betweenStation1And2.


% Side2(TrackToStation2)=Station2.
side2(trackToStation2)=station2.

% outside NearStation2
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',80).
t(outside,nearStation2).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',83).
% street Street2
t(street,street2).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',85).
% Side1(Street2)=Station2.
side1(street2)=station2.


% Side2(Street2)=NearStation2.
side2(street2)=nearStation2.

% agent Passenger1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',87).
t(agent,passenger1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',90).
% agent Conductor1
t(agent,conductor1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',92).
% chair TrainSeat1
t(chair,trainSeat1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',94).
% train Train1
t(train,train1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',96).
% chair WaitingRoomSeat1
t(chair,waitingRoomSeat1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',98).
% ticketagent TicketAgent1
t(ticketagent,ticketAgent1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',100).
% ticket Ticket1
t(ticket,ticket1).
%; prune

% sort requesta, requestb, requestc
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',102).
sort(requesta).
sort(requestb).
sort(requestc).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',104).
% event! Request(requesta,requestb,requestc)
event(request(requesta,requestb,requestc)).

% fluent! KnowRequest(requestb,requesta,requestc)
fluent(knowRequest(requestb,requesta,requestc)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',106).
% requesta! Passenger1
t(requesta,passenger1).

% requestb! TicketAgent1
t(requestb,ticketAgent1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',108).
% requestc! Ticket1
t(requestc,ticket1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',110).
% sort holda, holdb
sort(holda).
sort(holdb).

% event! TakeOffOf(holda,holdb,holdc)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',110).
event(takeOffOf(holda,holdb,holdc)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',112).
% event! PickUp(holda,holdb)
event(pickUp(holda,holdb)).

% event! LetGoOf(holda,holdb)
event(letGoOf(holda,holdb)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',114).
% event! Hold(holda,holdb)
event(hold(holda,holdb)).

% fluent! Holding(holda,holdb)
fluent(holding(holda,holdb)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',116).
% event! HandTo(holda,holda,holdb)
event(handTo(holda,holda,holdb)).

% holda! TicketAgent1, Passenger1, Conductor1
t(holda,ticketAgent1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',116).
t(holda,passenger1).
t(holda,conductor1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',118).
% holdb! Ticket1
t(holdb,ticket1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',120).
% sort sita, sitb
sort(sita).
sort(sitb).

% event! LieOn(sita,sitb)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',120).
event(lieOn(sita,sitb)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',122).
% event! SitOn(sita,sitb)
event(sitOn(sita,sitb)).

% event! RiseFrom(sita,sitb)
event(riseFrom(sita,sitb)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',124).
% fluent! LyingOn(sita,sitb)
fluent(lyingOn(sita,sitb)).

% fluent! SittingOn(sita,sitb)
fluent(sittingOn(sita,sitb)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',126).
% sita! Passenger1
t(sita,passenger1).

% sitb! WaitingRoomSeat1, TrainSeat1
t(sitb,waitingRoomSeat1).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',126).
t(sitb,trainSeat1).
%; release

% option manualrelease on
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',129).
:- call_pel_directive(option(manualrelease, on)).


% [ball, diameter]
 % !ReleasedAt(Diameter(ball, diameter), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',131).
not(released_at(diameter(Ball,Diameter),0)).


% [agent, object]
 % !ReleasedAt(Holding(agent, object), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',131).
not(released_at(holding(Agent,Object),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',133).
% [door]
 % !ReleasedAt(DoorUnlocked(door), 0).
not(released_at(doorUnlocked(Door),0)).


% [door]
 % !ReleasedAt(DoorIsOpen(door), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',133).
not(released_at(doorIsOpen(Door),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',135).
% [agent]
 % !ReleasedAt(Sleep0(agent), 0).
not(released_at(sleep0(Agent),0)).


% [agent]
 % !ReleasedAt(Sleep1(agent), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',135).
not(released_at(sleep1(Agent),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',137).
% [agent]
 % !ReleasedAt(Sleep2(agent), 0).
not(released_at(sleep2(Agent),0)).


% [agent]
 % !ReleasedAt(Sleep3(agent), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',137).
not(released_at(sleep3(Agent),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',139).
% [agent]
 % !ReleasedAt(Sleep4(agent), 0).
not(released_at(sleep4(Agent),0)).


% [agent]
 % !ReleasedAt(Sleep5(agent), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',139).
not(released_at(sleep5(Agent),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',141).
% [agent]
 % !ReleasedAt(Sleep6(agent), 0).
not(released_at(sleep6(Agent),0)).


% [agent, physobj]
 % !ReleasedAt(LyingOn(agent, physobj), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',141).
not(released_at(lyingOn(Agent,Physobj),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',143).
% [agent, physobj]
 % !ReleasedAt(SittingOn(agent, physobj), 0).
not(released_at(sittingOn(Agent,Physobj),0)).


% [agent]
 % !ReleasedAt(Standing(agent), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',143).
not(released_at(standing(Agent),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',145).
% [agent]
 % !ReleasedAt(Dressed(agent), 0).
not(released_at(dressed(Agent),0)).


% [agent1, agent2, physobj]
 % !ReleasedAt(KnowOrder(agent1, agent2, physobj), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',145).
not(released_at(knowOrder(Agent1,Agent2,Physobj),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',147).
% [agent1, agent2, physobj]
 % !ReleasedAt(KnowRequest(agent1, agent2, physobj), 0).
not(released_at(knowRequest(Agent1,Agent2,Physobj),0)).


% [object, vehicleon]
 % !ReleasedAt(OnVehicle(object, vehicleon), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',147).
not(released_at(onVehicle(Object,Vehicleon),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',149).
% [ticketagent]
 % !ReleasedAt(BeTicketAgent0(ticketagent), 0).
not(released_at(beTicketAgent0(Ticketagent),0)).


% [ticketagent]
 % !ReleasedAt(BeTicketAgent1(ticketagent), 0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',149).
not(released_at(beTicketAgent1(Ticketagent),0)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',151).
% [ticketagent]
 % !ReleasedAt(BeTicketAgent2(ticketagent), 0).
not(released_at(beTicketAgent2(Ticketagent),0)).


%; special cases
% [location]
 % ReleasedAt(At(TrainSeat1,location),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',153).
released_at(at_loc(trainSeat1,Location),0).


% [location]
 % ReleasedAt(At(Conductor1,location),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',153).
released_at(at_loc(conductor1,Location),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',155).
% [object, location]
% object!=% TrainSeat1 & object!=Conductor1 ->
% !ReleasedAt(At(object, location), 0).
Object\=trainSeat1, Object\=conductor1 ->
    not(released_at(at_loc(Object, Location), 0)).


%; initial state
% [agent,object]
 % !HoldsAt(Holding(agent,object),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',160).
holds_at(not(holding(Agent,Object)),0).


% [agent,physobj]
 % !HoldsAt(SittingOn(agent,physobj),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',160).
holds_at(not(sittingOn(Agent,Physobj)),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',162).
% [agent,physobj]
 % !HoldsAt(LyingOn(agent,physobj),0).
holds_at(not(lyingOn(Agent,Physobj)),0).


% [physobj1,physobj2]
% !HoldsAt(On(physobj1, physobj2),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',164).
holds_at(not(on(Physobj1,Physobj2)),0).


% [agent]
 % HoldsAt(Dressed(agent),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',164).
holds_at(dressed(Agent),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',166).
% [agent]
 % HoldsAt(Awake(agent),0).
holds_at(awake(Agent),0).


% [agent]
 % HoldsAt(Sleep3(agent),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',166).
holds_at(sleep3(Agent),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',168).
% [agent]
 % HoldsAt(Standing(agent),0).
holds_at(standing(Agent),0).


% HoldsAt(DoorUnlocked(Door1),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',168).
holds_at(doorUnlocked(door1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',170).
% HoldsAt(DoorIsOpen(Door1),0).
holds_at(doorIsOpen(door1),0).


% HoldsAt(At(WaitingRoomSeat1,WaitingRoom1),0).
holds_at(at_loc(waitingRoomSeat1,waitingRoom1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',172).
% HoldsAt(At(Passenger1,NearStation1),0).
holds_at(at_loc(passenger1,nearStation1),0).


% HoldsAt(At(Train1,BeforeStation1),0).
holds_at(at_loc(train1,beforeStation1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',174).
% HoldsAt(OnVehicle(TrainSeat1,Train1),0).
holds_at(onVehicle(trainSeat1,train1),0).


% HoldsAt(OnVehicle(Conductor1,Train1),0).
holds_at(onVehicle(conductor1,train1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',176).
% [object]
% object!=% TrainSeat1 & object!=Conductor1 ->
% !HoldsAt(OnVehicle(object,Train1),0).
Object\=trainSeat1, Object\=conductor1 ->
    holds_at(not(onVehicle(Object, train1)), 0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',179).
% HoldsAt(At(Ticket1,WaitingRoom1),0).
holds_at(at_loc(ticket1,waitingRoom1),0).


% HoldsAt(At(TicketAgent1,WaitingRoom1),0).
holds_at(at_loc(ticketAgent1,waitingRoom1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',181).
% HoldsAt(BeTicketAgent0(TicketAgent1),0).
holds_at(beTicketAgent0(ticketAgent1),0).


% [agent1,agent2,physobj]
 % !HoldsAt(KnowOrder(agent1,agent2,physobj),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',181).
holds_at(not(knowOrder(Agent1,Agent2,Physobj)),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',183).
% [agent1,agent2,physobj]
 % !HoldsAt(KnowRequest(agent1,agent2,physobj),0).
holds_at(not(knowRequest(Agent1,Agent2,Physobj)),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',185).
%; narrative


% Happens(WalkStreet12(Passenger1,Street1),0).
happens_at(walkStreet12(passenger1,street1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',187).
% Happens(WalkThroughDoor12(Passenger1,Door1),1).
happens_at(walkThroughDoor12(passenger1,door1),1).


% Happens(Request(Passenger1,TicketAgent1,Ticket1),2).
happens_at(request(passenger1,ticketAgent1,ticket1),2).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',189).
% Happens(Pay(Passenger1,TicketAgent1),3).
happens_at(pay(passenger1,ticketAgent1),3).


%;TRIGGERED Happens(PickUp(TicketAgent1,Ticket1),3).
%;TRIGGERED Happens(HandTo(TicketAgent1,Passenger1,Ticket1),4).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',192).
% Happens(SitOn(Passenger1,WaitingRoomSeat1),5).
happens_at(sitOn(passenger1,waitingRoomSeat1),5).


% Happens(RideTrack12(Train1,TrackToStation1),6).
happens_at(rideTrack12(train1,trackToStation1),6).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',194).
% Happens(RiseFrom(Passenger1,WaitingRoomSeat1),7).
happens_at(riseFrom(passenger1,waitingRoomSeat1),7).


% Happens(WalkThroughDoor21(Passenger1,Door1),8).
happens_at(walkThroughDoor21(passenger1,door1),8).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',196).
% Happens(GetOnVehicle(Passenger1,Train1),9).
happens_at(getOnVehicle(passenger1,train1),9).


% Happens(SitOn(Passenger1,TrainSeat1),10).
happens_at(sitOn(passenger1,trainSeat1),10).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',198).
% Happens(RideTrack12(Train1,TrackToBetweenStation1And2),11).
happens_at(rideTrack12(train1,trackToBetweenStation1And2),11).


% Happens(HandTo(Passenger1,Conductor1,Ticket1),12).
happens_at(handTo(passenger1,conductor1,ticket1),12).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',200).
%;OR PAY


% Happens(RideTrack12(Train1,TrackToStation2),13).
happens_at(rideTrack12(train1,trackToStation2),13).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',202).
% Happens(RiseFrom(Passenger1,TrainSeat1),14).
happens_at(riseFrom(passenger1,trainSeat1),14).


% Happens(GetOffVehicle(Passenger1,Train1),15).
happens_at(getOffVehicle(passenger1,train1),15).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',204).
% Happens(WalkStreet12(Passenger1,Street2),16).
happens_at(walkStreet12(passenger1,street2),16).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',206).
% range time 0 17
:- call_pel_directive(range(time, 0, 17)).

% range offset 0 0
:- call_pel_directive(range(offset, 0, 0)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',208).
% range diameter 0 0
:- call_pel_directive(range(diameter, 0, 0)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.e',210).
% completion Happens
:- call_pel_directive(completion(happens_at)).
%; End of file.
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/TakingATrain.pel')).
