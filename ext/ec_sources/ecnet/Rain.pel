:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/PolySpace.e',116).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/Rain.pel')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(ecalc).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/Rain.pel')).
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; Rain
%;
%; It starts raining at location outside.

% event StartRaining(outside)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Rain.e',14).
event(startRaining(outside)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Rain.e',17).
%; It stops raining at location outside.

% event StopRaining(outside)
event(stopRaining(outside)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Rain.e',20).
%; It is raining at location outside.

% fluent Raining(outside)
fluent(raining(outside)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Rain.e',23).
% event GetWet(object)
event(getWet(object)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Rain.e',25).
% event Dry(object)
event(dry(object)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Rain.e',27).
% fluent Wet(object)
fluent(wet(object)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Rain.e',29).
% [agent,outside,time]
% HoldsAt(At(agent,outside),time) &
% HoldsAt(Raining(outside),time) &
% !HoldsAt(Wet(agent),time) &
% (!{umbrella} HoldsAt(Holding(agent,umbrella),time)) ->
% Happens(GetWet(agent),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Rain.e',29).
holds_at(at_loc(Agent, Outside), Time), holds_at(raining(Outside), Time), holds_at(not(wet(Agent)), Time), not(exists([Umbrella], holds_at(holding(Agent, Umbrella), Time))) ->
    happens_at(getWet(Agent), Time).


% [object,time]
% Initiates(GetWet(object),Wet(object),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Rain.e',37).
initiates_at(getWet(Object),wet(Object),Time).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Rain.e',39).
% [object,time]
% Terminates(Dry(object),Wet(object),time).
terminates_at(dry(Object),wet(Object),Time).


%; End of file.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Rain.e',41).
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/Rain.pel')).
