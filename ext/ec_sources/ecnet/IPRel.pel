:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/HungerNeed.e',32).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.pel')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(ecalc).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.pel')).
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; IPRel: interpersonal relations
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',14).
% fluent FriendOf(agent,agent)
fluent(friendOf(agent,agent)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',16).
% fluent NeutralOf(agent,agent)
fluent(neutralOf(agent,agent)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',18).
% fluent EnemyOf(agent,agent)
fluent(enemyOf(agent,agent)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',20).
% event BecomeFriends(agent,agent)
event(becomeFriends(agent,agent)).

% event BecomeNeutral(agent,agent)
event(becomeNeutral(agent,agent)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',22).
% event BecomeEnemies(agent,agent)
event(becomeEnemies(agent,agent)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',24).
% [agent1,agent2,time]
% HoldsAt(FriendOf(agent1,agent2),time) ->
% !Holds(EnemyOf(agent1,agent2),time).
holds_at(friendOf(Agent1, Agent2), Time) ->
    not(pred_holds(enemyOf(Agent1, Agent2), Time)).


% [agent1,agent2,time]
% HoldsAt(NeutralOf(agent1,agent2),time) ->
% !Holds(EnemyOf(agent1,agent2),time).
holds_at(neutralOf(Agent1, Agent2), Time) ->
    not(pred_holds(enemyOf(Agent1, Agent2), Time)).


% [agent1,agent2,time]
% HoldsAt(FriendOf(agent1,agent2),time) ->
% HoldsAt(FriendOf(agent2,agent1),time).
holds_at(friendOf(Agent1, Agent2), Time) ->
    holds_at(friendOf(Agent2, Agent1), Time).


% [agent1,agent2,time]
% HoldsAt(NeutralOf(agent1,agent2),time) ->
% HoldsAt(NeutralOf(agent2,agent1),time).
holds_at(neutralOf(Agent1, Agent2), Time) ->
    holds_at(neutralOf(Agent2, Agent1), Time).


% [agent1,agent2,time]
% HoldsAt(EnemyOf(agent1,agent2),time) ->
% HoldsAt(EnemyOf(agent2,agent1),time).
holds_at(enemyOf(Agent1, Agent2), Time) ->
    holds_at(enemyOf(Agent2, Agent1), Time).


% [agent1,agent2,time]
% Initiates(BecomeFriends(agent1,agent2),FriendOf(agent1,agent2),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',45).
initiates_at(becomeFriends(Agent1,Agent2),
	     friendOf(Agent1,Agent2),
	     Time).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',47).
% [agent1,agent2,time]
% Initiates(BecomeFriends(agent1,agent2),FriendOf(agent2,agent1),time).
initiates_at(becomeFriends(Agent1,Agent2),
	     friendOf(Agent2,Agent1),
	     Time).


% [agent1,agent2,time]
% Terminates(BecomeFriends(agent1,agent2),NeutralOf(agent1,agent2),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',51).
terminates_at(becomeFriends(Agent1,Agent2),
	      neutralOf(Agent1,Agent2),
	      Time).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',53).
% [agent1,agent2,time]
% Terminates(BecomeFriends(agent1,agent2),NeutralOf(agent2,agent1),time).
terminates_at(becomeFriends(Agent1,Agent2),
	      neutralOf(Agent2,Agent1),
	      Time).


% [agent1,agent2,time]
% Terminates(BecomeFriends(agent1,agent2),EnemyOf(agent1,agent2),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',57).
terminates_at(becomeFriends(Agent1,Agent2),
	      enemyOf(Agent1,Agent2),
	      Time).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',59).
% [agent1,agent2,time]
% Terminates(BecomeFriends(agent1,agent2),EnemyOf(agent2,agent1),time).
terminates_at(becomeFriends(Agent1,Agent2),
	      enemyOf(Agent2,Agent1),
	      Time).


% [agent1,agent2,time]
% Initiates(BecomeEnemies(agent1,agent2),EnemyOf(agent1,agent2),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',63).
initiates_at(becomeEnemies(Agent1,Agent2),
	     enemyOf(Agent1,Agent2),
	     Time).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',65).
% [agent1,agent2,time]
% Initiates(BecomeEnemies(agent1,agent2),EnemyOf(agent2,agent1),time).
initiates_at(becomeEnemies(Agent1,Agent2),
	     enemyOf(Agent2,Agent1),
	     Time).


% [agent1,agent2,time]
% Terminates(BecomeEnemies(agent1,agent2),NeutralOf(agent1,agent2),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',69).
terminates_at(becomeEnemies(Agent1,Agent2),
	      neutralOf(Agent1,Agent2),
	      Time).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',71).
% [agent1,agent2,time]
% Terminates(BecomeEnemies(agent1,agent2),NeutralOf(agent2,agent1),time).
terminates_at(becomeEnemies(Agent1,Agent2),
	      neutralOf(Agent2,Agent1),
	      Time).


% [agent1,agent2,time]
% Terminates(BecomeEnemies(agent1,agent2),FriendOf(agent1,agent2),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',75).
terminates_at(becomeEnemies(Agent1,Agent2),
	      friendOf(Agent1,Agent2),
	      Time).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',77).
% [agent1,agent2,time]
% Terminates(BecomeEnemies(agent1,agent2),FriendOf(agent2,agent1),time).
terminates_at(becomeEnemies(Agent1,Agent2),
	      friendOf(Agent2,Agent1),
	      Time).


% [agent1,agent2,time]
% Initiates(BecomeNeutral(agent1,agent2),NeutralOf(agent1,agent2),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',81).
initiates_at(becomeNeutral(Agent1,Agent2),
	     neutralOf(Agent1,Agent2),
	     Time).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',83).
% [agent1,agent2,time]
% Initiates(BecomeNeutral(agent1,agent2),NeutralOf(agent2,agent1),time).
initiates_at(becomeNeutral(Agent1,Agent2),
	     neutralOf(Agent2,Agent1),
	     Time).


% [agent1,agent2,time]
% Terminates(BecomeNeutral(agent1,agent2),FriendOf(agent1,agent2),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',87).
terminates_at(becomeNeutral(Agent1,Agent2),
	      friendOf(Agent1,Agent2),
	      Time).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',89).
% [agent1,agent2,time]
% Terminates(BecomeNeutral(agent1,agent2),FriendOf(agent2,agent1),time).
terminates_at(becomeNeutral(Agent1,Agent2),
	      friendOf(Agent2,Agent1),
	      Time).


% [agent1,agent2,time]
% Terminates(BecomeNeutral(agent1,agent2),EnemyOf(agent1,agent2),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',93).
terminates_at(becomeNeutral(Agent1,Agent2),
	      enemyOf(Agent1,Agent2),
	      Time).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',95).
% [agent1,agent2,time]
% Terminates(BecomeNeutral(agent1,agent2),EnemyOf(agent2,agent1),time).
terminates_at(becomeNeutral(Agent1,Agent2),
	      enemyOf(Agent2,Agent1),
	      Time).


% [agent1,agent2,time]
% HoldsAt(FriendOf(agent1,agent2),time) ->
% HoldsAt(Like(agent1,agent2),time).
holds_at(friendOf(Agent1, Agent2), Time) ->
    holds_at(like(Agent1, Agent2), Time).


% [agent1,agent2,time]
% HoldsAt(EnemyOf(agent1,agent2),time) ->
% HoldsAt(Dislike(agent1,agent2),time).
holds_at(enemyOf(Agent1, Agent2), Time) ->
    holds_at(dislike(Agent1, Agent2), Time).

% fluent AcquaintanceOf(agent,agent)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',105).
fluent(acquaintanceOf(agent,agent)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',108).
% [agent,time]
 % HoldsAt(AcquaintanceOf(agent,agent),time).
holds_at(acquaintanceOf(Agent,Agent),Time).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',110).
% [agent1,agent2,time]
% HoldsAt(AcquaintanceOf(agent1,agent2),time) ->
% HoldsAt(AcquaintanceOf(agent2,agent1),time).
holds_at(acquaintanceOf(Agent1, Agent2), Time) ->
    holds_at(acquaintanceOf(Agent2, Agent1), Time).

% event Introduce(agent,agent)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',113).
event(introduce(agent,agent)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',116).
% [agent1,agent2,time]
% Initiates(Introduce(agent1,agent2),
%           AcquaintanceOf(agent1,agent2),
%           time).
initiates_at(introduce(Agent1,Agent2),
	     acquaintanceOf(Agent1,Agent2),
	     Time).


% [agent1,agent2,time]
% Initiates(Introduce(agent1,agent2),
%           AcquaintanceOf(agent2,agent1),
%           time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',122).
initiates_at(introduce(Agent1,Agent2),
	     acquaintanceOf(Agent2,Agent1),
	     Time).

% event IntroduceMutual(agent,agent,agent)
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',125).
event(introduceMutual(agent,agent,agent)).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',128).
% [agent1,agent2,agent3,time]
% Initiates(IntroduceMutual(agent1,agent2,agent3),
%           AcquaintanceOf(agent2,agent3),
%           time).
initiates_at(introduceMutual(Agent1,Agent2,Agent3),
	     acquaintanceOf(Agent2,Agent3),
	     Time).


% [agent1,agent2,agent3,time]
% Initiates(IntroduceMutual(agent1,agent2,agent3),
%           AcquaintanceOf(agent3,agent2),
%           time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',134).
initiates_at(introduceMutual(Agent1,Agent2,Agent3),
	     acquaintanceOf(Agent3,Agent2),
	     Time).


% [agent1,agent2,agent3,time]
% Happens(IntroduceMutual(agent1,agent2,agent3),time) ->
% HoldsAt(AcquaintanceOf(agent1,agent2),time) &
% HoldsAt(AcquaintanceOf(agent1,agent3),time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',139).
happens_at(introduceMutual(Agent1, Agent2, Agent3), Time) ->
    holds_at(acquaintanceOf(Agent1, Agent2), Time),
    holds_at(acquaintanceOf(Agent1, Agent3), Time).


%; End of file.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',142).
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.pel')).
