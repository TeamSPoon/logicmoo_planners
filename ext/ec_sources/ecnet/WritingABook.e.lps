:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e',75).
% From E: 
% 
% :-call_pel_directive(translate(unskipped,'/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e.lps')).
:- call_pel_directive(translate(unskipped,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e.lps')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e',75).
% From E: 
% 
% :-call_pel_directive(translate(begining,'/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e.lps')).
:- call_pel_directive(translate(begining,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e.lps')).
% Sat, 10 Oct 2020 15:31:47 GMT File: <stream>(0x559e4b469d00)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Mueller:2004c,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "Understanding script-based stories using commonsense reasoning",
%;   journal = "Cognitive Systems Research",
%;   volume = "5",
%;   number = "4",
%;   pages = "307--340",
%; }
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',22).
% option modeldiff on
% From E: 
% 
% :-call_pel_directive(option(modeldiff,on)).
:- call_pel_directive(option(modeldiff, on)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',24).
% ignore Love, ThreatenedBy
% From E: 
% 
% :-call_pel_directive(ignore(love)).
:- call_pel_directive(ignore(love)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',24).
% From E: 
% 
% :-call_pel_directive(ignore(threatenedBy)).
:- call_pel_directive(ignore(threatenedBy)).

% ignore LookOutOnto, Floor, BuildingOf, SkyOf, GroundOf
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',24).
% From E: 
% 
% :-call_pel_directive(ignore(lookOutOnto)).
:- call_pel_directive(ignore(lookOutOnto)).
% From E: 
% 
% :-call_pel_directive(ignore(floor)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',24).
:- call_pel_directive(ignore(floor)).
% From E: 
% 
% :-call_pel_directive(ignore(buildingOf)).
:- call_pel_directive(ignore(buildingOf)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',24).
% From E: 
% 
% :-call_pel_directive(ignore(skyOf)).
:- call_pel_directive(ignore(skyOf)).
% From E: 
% 
% :-call_pel_directive(ignore(groundOf)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',24).
:- call_pel_directive(ignore(groundOf)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',26).
% ignore Inside
% From E: 
% 
% :-call_pel_directive(ignore(inside)).
:- call_pel_directive(ignore(inside)).

% ignore Near, WalkFrom, WalkFromTo, RunFromTo
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',26).
% From E: 
% 
% :-call_pel_directive(ignore(near)).
:- call_pel_directive(ignore(near)).
% From E: 
% 
% :-call_pel_directive(ignore(walkFrom)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',26).
:- call_pel_directive(ignore(walkFrom)).
% From E: 
% 
% :-call_pel_directive(ignore(walkFromTo)).
:- call_pel_directive(ignore(walkFromTo)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',26).
% From E: 
% 
% :-call_pel_directive(ignore(runFromTo)).
:- call_pel_directive(ignore(runFromTo)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',28).
% ignore See
% From E: 
% 
% :-call_pel_directive(ignore(see)).
:- call_pel_directive(ignore(see)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',30).
% option renaming off
% From E: 
% 
% :-call_pel_directive(option(renaming,off)).
:- call_pel_directive(option(renaming, off)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',32).
% load foundations/Root.e
% From E: 
% 
% :-call_pel_directive(load('foundations/Root.e')).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',32).
% From E: 
% 
% :-call_pel_directive(load('foundations/EC.e')).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',34).
% load answers/Mueller2003/Ontology.e
% From E: 
% 
% :-call_pel_directive(load('answers/Mueller2003/Ontology.e')).
:- call_pel_directive(load('answers/Mueller2003/Ontology.e')).

% load answers/Mueller2004c/RTSpaceM.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',34).
% From E: 
% 
% :-call_pel_directive(load('answers/Mueller2004c/RTSpaceM.e')).
:- call_pel_directive(load('answers/Mueller2004c/RTSpaceM.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',36).
% load answers/Mueller2004c/OTSpaceM.e
% From E: 
% 
% :-call_pel_directive(load('answers/Mueller2004c/OTSpaceM.e')).
:- call_pel_directive(load('answers/Mueller2004c/OTSpaceM.e')).

% load answers/Mueller2004c/HandTo.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',36).
% From E: 
% 
% :-call_pel_directive(load('answers/Mueller2004c/HandTo.e')).
:- call_pel_directive(load('answers/Mueller2004c/HandTo.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',38).
% load answers/Mueller2003/Sleep.e
% From E: 
% 
% :-call_pel_directive(load('answers/Mueller2003/Sleep.e')).
:- call_pel_directive(load('answers/Mueller2003/Sleep.e')).

% load answers/Mueller2004c/Cognition.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',38).
% From E: 
% 
% :-call_pel_directive(load('answers/Mueller2004c/Cognition.e')).
:- call_pel_directive(load('answers/Mueller2004c/Cognition.e')).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',41).
% door Door1
% From E: 
% 
% t(door,door1).
door(door1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',43).
% room Room0
% From E: 
% 
% t(room,room0).
room(room0).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',45).
% room Room1
% From E: 
% 
% t(room,room1).
room(room1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',47).
% Side1(Door1)=Room0.
% From E: 
% 
% side1(door1)=room0.
side1(door1,room0).


% Side2(Door1)=Room1.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',47).
% From E: 
% 
% side2(door1)=room1.
side2(door1,room1).

% agent Writer1
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',49).
% From E: 
% 
% t(agent,writer1).
agent(writer1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',52).
% paper Paper1
% From E: 
% 
% t(paper,paper1).
paper(paper1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',54).
% pen Pen1
% From E: 
% 
% t(pen,pen1).
pen(pen1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',56).
% chair Chair1
% From E: 
% 
% t(chair,chair1).
chair(chair1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',58).
% physobj Desk1
% From E: 
% 
% t(physobj,desk1).
physobj(desk1).
%; initial state
% [agent,object]
 % !HoldsAt(Holding(agent,object),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',60).
% From E: 
% 
% holds_at(not(holding(Agent,Object)),0).
initially not holding(Agent, Object).
 %  initial_state([not(holding(Agent,Object))]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',62).
% [agent,physobj]
 % !HoldsAt(SittingOn(agent,physobj),0).
% From E: 
% 
% holds_at(not(sittingOn(Agent,Physobj)),0).
initially not sittingOn(Agent, Physobj).
 %  initial_state([not(sittingOn(Agent,Physobj))]).
 %  "% =================================".


% [agent,physobj]
 % !HoldsAt(LyingOn(agent,physobj),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',62).
% From E: 
% 
% holds_at(not(lyingOn(Agent,Physobj)),0).
initially not lyingOn(Agent, Physobj).
 %  initial_state([not(lyingOn(Agent,Physobj))]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',64).
% [physobj1,physobj2]
% !(physobj1=Pen1 & physobj2=Desk1) &
% !(physobj1=Paper1 & physobj2=Desk1) ->
% !HoldsAt(On(physobj1, physobj2),0).
% From E: 
% 
% '->'(
%    (not(
%        (Physobj1=pen1 , 
%         Physobj2=desk1)) , 
%     not(
%        (Physobj1=paper1 , 
%         Physobj2=desk1))), 
%    holds_at(not(on(Physobj1,Physobj2)),0)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',64).
false((equals(Physobj1, pen1), equals(Physobj2, desk1))), false((equals(Physobj1, paper1), equals(Physobj2, desk1))) ->
    initially(not(on(Physobj1, Physobj2))).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',68).
% HoldsAt(On(Paper1,Desk1),0).
% From E: 
% 
% holds_at(on(paper1,desk1),0).
initially on(paper1, desk1).
 %  initial_state([on(paper1,desk1)]).
 %  "% =================================".


% HoldsAt(On(Pen1,Desk1),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',68).
% From E: 
% 
% holds_at(on(pen1,desk1),0).
initially on(pen1, desk1).
 %  initial_state([on(pen1,desk1)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',70).
% HoldsAt(Dressed(Writer1),0).
% From E: 
% 
% holds_at(dressed(writer1),0).
initially dressed(writer1).
 %  initial_state([dressed(writer1)]).
 %  "% =================================".


% HoldsAt(Awake(Writer1),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',70).
% From E: 
% 
% holds_at(awake(writer1),0).
initially awake(writer1).
 %  initial_state([awake(writer1)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',72).
% HoldsAt(Sleep3(Writer1),0).
% From E: 
% 
% holds_at(sleep3(writer1),0).
initially sleep3(writer1).
 %  initial_state([sleep3(writer1)]).
 %  "% =================================".


% HoldsAt(Standing(Writer1),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',72).
% From E: 
% 
% holds_at(standing(writer1),0).
initially standing(writer1).
 %  initial_state([standing(writer1)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',74).
% HoldsAt(DoorUnlocked(Door1),0).
% From E: 
% 
% holds_at(doorUnlocked(door1),0).
initially doorUnlocked(door1).
 %  initial_state([doorUnlocked(door1)]).
 %  "% =================================".


% HoldsAt(DoorIsOpen(Door1),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',74).
% From E: 
% 
% holds_at(doorIsOpen(door1),0).
initially doorIsOpen(door1).
 %  initial_state([doorIsOpen(door1)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',76).
% HoldsAt(At(Writer1,Room0),0).
% From E: 
% 
% holds_at(at_loc(writer1,room0),0).
initially at_loc(writer1, room0).
 %  initial_state([at_loc(writer1,room0)]).
 %  "% =================================".


% HoldsAt(At(Chair1,Room1),0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',76).
% From E: 
% 
% holds_at(at_loc(chair1,room1),0).
initially at_loc(chair1, room1).
 %  initial_state([at_loc(chair1,room1)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',78).
% HoldsAt(At(Desk1,Room1),0).
% From E: 
% 
% holds_at(at_loc(desk1,room1),0).
initially at_loc(desk1, room1).
 %  initial_state([at_loc(desk1,room1)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',80).
%; narrative


% Happens(WalkThroughDoor12(Writer1,Door1),0).
% From E: 
% 
% happens_at(walkThroughDoor12(writer1,door1),0).
observe walkThroughDoor12(writer1, door1)at 0.
 %  observe([walkThroughDoor12(writer1,door1)],0).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',82).
% Happens(SitOn(Writer1,Chair1),1).
% From E: 
% 
% happens_at(sitOn(writer1,chair1),1).
observe sitOn(writer1, chair1)at 1.
 %  observe([sitOn(writer1,chair1)],1).
 %  "% =================================".


% Happens(TakeOffOf(Writer1,Pen1,Desk1),2).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',82).
% From E: 
% 
% happens_at(takeOffOf(writer1,pen1,desk1),2).
observe takeOffOf(writer1, pen1, desk1)at 2.
 %  observe([takeOffOf(writer1,pen1,desk1)],2).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',84).
% Happens(Think(Writer1),3).
% From E: 
% 
% happens_at(think(writer1),3).
observe think(writer1)at 3.
 %  observe([think(writer1)],3).
 %  "% =================================".


% Happens(WriteOn(Writer1,Paper1,Pen1),4).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',84).
% From E: 
% 
% happens_at(writeOn(writer1,paper1,pen1),4).
observe writeOn(writer1, paper1, pen1)at 4.
 %  observe([writeOn(writer1,paper1,pen1)],4).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',86).
% Happens(WriteOn(Writer1,Paper1,Pen1),5).
% From E: 
% 
% happens_at(writeOn(writer1,paper1,pen1),5).
observe writeOn(writer1, paper1, pen1)at 5.
 %  observe([writeOn(writer1,paper1,pen1)],5).
 %  "% =================================".


% Happens(PlaceOn(Writer1,Pen1,Desk1),6).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',86).
% From E: 
% 
% happens_at(placeOn(writer1,pen1,desk1),6).
observe placeOn(writer1, pen1, desk1)at 6.
 %  observe([placeOn(writer1,pen1,desk1)],6).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',88).
% Happens(RiseFrom(Writer1,Chair1),7).
% From E: 
% 
% happens_at(riseFrom(writer1,chair1),7).
observe riseFrom(writer1, chair1)at 7.
 %  observe([riseFrom(writer1,chair1)],7).
 %  "% =================================".


% Happens(WalkThroughDoor21(Writer1,Door1),8).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',88).
% From E: 
% 
% happens_at(walkThroughDoor21(writer1,door1),8).
observe walkThroughDoor21(writer1, door1)at 8.
 %  observe([walkThroughDoor21(writer1,door1)],8).
 %  "% =================================".

% range time 0 9
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',90).
% From E: 
% 
% :-call_pel_directive(range(time,0,9)).
:- call_pel_directive(range(time, 0, 9)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',92).
% range offset 0 0
% From E: 
% 
% :-call_pel_directive(range(offset,0,0)).
:- call_pel_directive(range(offset, 0, 0)).

% range diameter 0 0
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',92).
% From E: 
% 
% :-call_pel_directive(range(diameter,0,0)).
:- call_pel_directive(range(diameter, 0, 0)).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',95).
% completion Happens
% From E: 
% 
% :-call_pel_directive(completion(happens_at)).
:- call_pel_directive(completion(happens_at)).
%; End of file.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e',97).
% From E: 
% 
% :-call_pel_directive(translate(ending,'/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e.lps')).
:- call_pel_directive(translate(ending,
                                '/pack/logicmoo_ec/ext/ec_sources/ecnet/WritingABook.e.lps')).
