:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Kidnapping.e',127).
% translate: unskipped  File: /pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e.lps 
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
% translate: begining  File: /pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e.lps 
% Thu, 08 Oct 2020 21:36:25 GMT File: <stream>(0x55894c1da800)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Mueller:2004c,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "Understanding script-based stories using commonsense reasoning",
%;   journal = "Cognitive Systems Research",
%;   volume = "5",
%;   number = "4",
%;   pages = "307--340",
%; }
%;

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',22).
% option modeldiff on
:- if(is_e_toplevel).
:- set_ec_option(modeldiff, on).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',24).
% ignore LookOutOnto, Floor, BuildingOf, SkyOf, GroundOf
% ignore(lookOutOnto).
ignore(lookOutOnto).
% ignore(floor).
ignore(floor).
% ignore(buildingOf).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',24).
ignore(buildingOf).
% ignore(skyOf).
ignore(skyOf).
% ignore(groundOf).
ignore(groundOf).

% ignore Near, WalkFrom, WalkFromTo, RunFromTo
% ignore(near).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',24).
ignore(near).
% ignore(walkFrom).
ignore(walkFrom).
% ignore(walkFromTo).
ignore(walkFromTo).
% ignore(runFromTo).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',24).
ignore(runFromTo).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',26).
% ignore Side1, Side2
% ignore(side1).
ignore(side1).
% ignore(side2).
ignore(side2).

% ignore FriendOf, NeutralOf, EnemyOf,
% ignore(friendOf).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',26).
ignore(friendOf).
% ignore(neutralOf).
ignore(neutralOf).
% ignore(enemyOf).
ignore(enemyOf).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',28).
% ignore BecomeFriends, BecomeNeutral, BecomeEnemies
% ignore(becomeFriends).
ignore(becomeFriends).
% ignore(becomeNeutral).
ignore(becomeNeutral).
% ignore(becomeEnemies).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',28).
ignore(becomeEnemies).

% ignore Happy, Calm, Unhappy
% ignore(happy).
ignore(happy).
% ignore(calm).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',28).
ignore(calm).
% ignore(unhappy).
ignore(unhappy).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',30).
% ignore BecomeHappy, BecomeCalm, BecomeUnhappy
% ignore(becomeHappy).
ignore(becomeHappy).
% ignore(becomeCalm).
ignore(becomeCalm).
% ignore(becomeUnhappy).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',30).
ignore(becomeUnhappy).

% ignore AngryAt, BecomeAngryAt
% ignore(angryAt).
ignore(angryAt).
% ignore(becomeAngryAt).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',30).
ignore(becomeAngryAt).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',32).
% ignore Like, Love, Dislike, LikeSnow
% ignore(like).
ignore(like).
% ignore(love).
ignore(love).
% ignore(dislike).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',32).
ignore(dislike).
% ignore(likeSnow).
ignore(likeSnow).

% ignore HandTo
% ignore(handTo).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',32).
ignore(handTo).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',34).
% ignore InviteIn, InvitedIn, IntendToWalkIn, IntentionToWalkIn
% ignore(inviteIn).
ignore(inviteIn).
% ignore(invitedIn).
ignore(invitedIn).
% ignore(intendToWalkIn).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',34).
ignore(intendToWalkIn).
% ignore(intentionToWalkIn).
ignore(intentionToWalkIn).

% ignore ActOnIntentionToWalkIn, Greet, SayGoodbye, CryForJoy
% ignore(actOnIntentionToWalkIn).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',34).
ignore(actOnIntentionToWalkIn).
% ignore(greet).
ignore(greet).
% ignore(sayGoodbye).
ignore(sayGoodbye).
% ignore(cryForJoy).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',34).
ignore(cryForJoy).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',36).
% ignore Threaten, ReleaseFromThreat, ThreatenedBy
% ignore(threaten).
ignore(threaten).
% ignore(releaseFromThreat).
ignore(releaseFromThreat).
% ignore(threatenedBy).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',36).
ignore(threatenedBy).

% ignore Order, KnowOrder, Request, KnowRequest
% ignore(order).
ignore(order).
% ignore(knowOrder).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',36).
ignore(knowOrder).
% ignore(request).
ignore(request).
% ignore(knowRequest).
ignore(knowRequest).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',39).
% load foundations/Root.e
:- if(is_e_toplevel).
:- load_e_cond('foundations/Root.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/foundations/Root.e',changed).
:- endif.

% load foundations/EC.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',39).
:- if(is_e_toplevel).
:- load_e_cond('foundations/EC.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/foundations/EC.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',41).
% load answers/Mueller2003/Ontology.e
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2003/Ontology.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/Ontology.e',changed).
:- endif.

% load answers/Mueller2003/Feeling.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',41).
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2003/Feeling.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/Feeling.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',43).
% load answers/Mueller2004c/HandTo.e
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2004c/HandTo.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/HandTo.e',changed).
:- endif.

% load answers/Mueller2004c/RTSpaceM.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',43).
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2004c/RTSpaceM.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/RTSpace.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',45).
% load answers/Mueller2003/Sleep.e
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2003/Sleep.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/Sleep.e',changed).
:- endif.

% load answers/Mueller2003/SpeechAct.e
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',45).
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2003/SpeechAct.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/SpeechAct.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',47).
% load answers/Mueller2004c/IPRel.e
:- if(is_e_toplevel).
:- load_e_cond('answers/Mueller2004c/IPRel.e', changed).
 %  load('/pack/logicmoo_ec/ext/ec_sources/ecnet/IPRel.e',changed).
:- endif.

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',49).
% location Location1
% t(location,location1).
location(location1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',51).
% portal DummyPortal1
% t(portal,dummyPortal1).
portal(dummyPortal1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',53).
% agent Introducer1
% t(agent,introducer1).
agent(introducer1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',55).
% agent Introducee1
% t(agent,introducee1).
agent(introducee1).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',57).
% agent Introduced1
% t(agent,introduced1).
agent(introduced1).
%; initial state
% [agent,physobj]
 % !HoldsAt(SittingOn(agent,physobj),0).
% initially(
%    neg(
%       sittingOn(Agent,Physobj))).
initially not sittingOn(Agent, Physobj).
 %  initial_state([not(sittingOn(Agent,Physobj))]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',61).
% [agent,physobj]
 % !HoldsAt(LyingOn(agent,physobj),0).
% initially(
%    neg(
%       lyingOn(Agent,Physobj))).
initially not lyingOn(Agent, Physobj).
 %  initial_state([not(lyingOn(Agent,Physobj))]).
 %  "% =================================".


% [agent]
 % HoldsAt(Dressed(agent),0).
% initially(
%    dressed(Agent)).
initially dressed(Agent).
 %  initial_state([dressed(Agent)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',63).
% [agent]
 % HoldsAt(Awake(agent),0).
% initially(
%    awake(Agent)).
initially awake(Agent).
 %  initial_state([awake(Agent)]).
 %  "% =================================".


% [agent]
 % HoldsAt(Sleep3(agent),0).
% initially(
%    sleep3(Agent)).
initially sleep3(Agent).
 %  initial_state([sleep3(Agent)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',65).
% [agent]
 % HoldsAt(Standing(agent),0).
% initially(
%    standing(Agent)).
initially standing(Agent).
 %  initial_state([standing(Agent)]).
 %  "% =================================".


% HoldsAt(AcquaintanceOf(Introducer1,Introducee1),0).
% initially(
%    acquaintanceOf(introducer1,introducee1)).
initially acquaintanceOf(introducer1, introducee1).
 %  initial_state([acquaintanceOf(introducer1,introducee1)]).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',67).
% HoldsAt(AcquaintanceOf(Introducer1,Introduced1),0).
% initially(
%    acquaintanceOf(introducer1,introduced1)).
initially acquaintanceOf(introducer1, introduced1).
 %  initial_state([acquaintanceOf(introducer1,introduced1)]).
 %  "% =================================".


% !HoldsAt(AcquaintanceOf(Introducee1,Introduced1),0).
% initially(
%    neg(
%       acquaintanceOf(introducee1,introduced1))).
initially not acquaintanceOf(introducee1, introduced1).
 %  initial_state([not(acquaintanceOf(introducee1,introduced1))]).
 %  "% =================================".


%; narrative
%;Happens(IntroduceMutual(Introducer1,Introducee1,Introduced1),0).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',72).
% Happens(Introduce(Introducee1,Introduced1),0).
% happens(
%    introduce(introducee1,introduced1), 
%    start).
observe(at(introduce(introducee1,introduced1),start)).


%;Happens(Introduce(Introduced1,Introducee1),0).
%;Happens(Smile(Introducer1),1).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',75).
% Happens(Smile(Introducee1),1).
% happens(
%    smile(introducee1), 
%    start+1).
observe smile(introducee1)at start+1.
 %  observe([smile(introducee1)],start+1).
 %  "% =================================".


% Happens(Smile(Introduced1),2).
% happens(
%    smile(introduced1), 
%    start+2).
observe smile(introduced1)at start+2.
 %  observe([smile(introduced1)],start+2).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',77).
% Happens(SayPleasedToMeet(Introducee1,Introduced1),3).
% happens(
%    sayPleasedToMeet(introducee1,introduced1), 
%    start+3).
observe sayPleasedToMeet(introducee1, introduced1)at start+3.
 %  observe([sayPleasedToMeet(introducee1,introduced1)],start+3).
 %  "% =================================".


% Happens(SayPleasedToMeet(Introduced1,Introducee1),4).
% happens(
%    sayPleasedToMeet(introduced1,introducee1), 
%    start+4).
observe sayPleasedToMeet(introduced1, introducee1)at start+4.
 %  observe([sayPleasedToMeet(introduced1,introducee1)],start+4).
 %  "% =================================".


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',79).
% Happens(ShakeHands(Introducee1,Introduced1),5).
% happens(
%    shakeHands(introducee1,introduced1), 
%    start+5).
observe shakeHands(introducee1, introduced1)at start+5.
 %  observe([shakeHands(introducee1,introduced1)],start+5).
 %  "% =================================".

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',81).
% range time 0 6
% range(time,0,6).
range(time,0,6).

% range offset 0 0
% range(offset,0,0).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',81).
range(offset,0,0).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',83).
% range diameter 0 0
% range(diameter,0,0).
range(diameter,0,0).

:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e',85).
% completion Happens
% completion(happens).
completion(happens).
%; End of file.
% translate: ending  File: /pack/logicmoo_ec/ext/ec_sources/ecnet/MakingAnAcquaintance.e.lps 
