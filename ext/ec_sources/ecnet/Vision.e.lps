:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vehicle.e',371).
% translate: unskipped  File: /pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e.lps 
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
% translate: begining  File: /pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e.lps 
% Wed, 07 Oct 2020 09:39:34 GMT File: <stream>(0x5557c9047600)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; The Vision representation deals with some simple aspects
%; of vision.
%;
%; agent looks at object.

% event LookAt(agent,object)
 %  event(lookAt(agent,object)).
 %  event(lookAt(agent,object)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e',15).
actions([lookAt/2]).
mpred_prop(lookAt(agent,object),event).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e',18).
%; agent sees object.

% fluent See(agent,object)
 %  fluent(see(agent,object)).
 %  fluent(see(agent,object)).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e',18).
fluents([see/2]).
mpred_prop(see(agent,object),fluent).


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e',21).
%; An effect axiom states that if an agent looks at
%; an object, the agent will see the object:
% [agent,object,time]
% Initiates(LookAt(agent,object),
%           See(agent,object),
%           time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e',23).

 /*  axiom(initiates(lookAt(Agent, Object), see(Agent, Object), Time),
       []).
 */

 /*  initiates(lookAt(A,Lookat),
   	  see(A,Lookat),
   	  Initiates).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e',23).
initiates(lookAt(A,Lookat),see(A,Lookat)).

 /*  initiated(happens(lookAt(A,Lookat),
   		  Time_From,
   		  Time_Until),
   	  see(A,Lookat),
   	  []).
 */


%; A precondition axiom states that for
%; an agent to look at an object,
%; there must be a location such that
%; the agent is at the location and
%; the object is at the location, or
%; there must be a door such that
%; the agent is near the door,
%; the object is near the door, and
%; the door is open:
%;[agent,object,time]
%;Happens(LookAt(agent,object),time) ->
%;({location}
%; HoldsAt(At(agent,location),time) &
%; HoldsAt(At(object,location),time))|
%;({door}
%; HoldsAt(NearPortal(agent,door),time) &
%; HoldsAt(NearPortal(object,door),time) &
%; HoldsAt(DoorIsOpen(door),time)).
%; An effect axiom states that if an agent
%; looks at an object, the agent will no longer
%; see other objects:
% [agent,object1,object2,time]
% object1!=% object2 ->
% Terminates(LookAt(agent,object1),
%            See(agent,object2),
%            time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e',50).

 /*  axiom(terminates(lookAt(Agent, Object1), see(Agent, Object2), Time),
       [diff(Object1, Object2)]).
 */

 /*  diff(Lookat, Diff) ->
       terminates(lookAt(A, Lookat),
                  see(A, Diff),
                  Terminates).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e',50).
then(if(diff(Lookat,Diff)),
     terminates(lookAt(A,Lookat),
		at(see(A,Diff),Terminates),
		Terminates7)).

 /*  reactive_rule([diff(Lookat,Diff)],
   	      [ terminates(lookAt(A,Lookat),
   			   at(see(A,Diff),Terminates),
   			   Terminates7)
   	      ]).
 */


%; Several effect axioms state that if an
%; agent walks through a door, up a staircase, or down a staircase,
%; the agent no longer sees an object:
% [agent,door,object,time]
% Terminates(WalkThroughDoor12(agent,door),
%            See(agent,object),
%            time).
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e',59).

 /*  axiom(terminates(walkThroughDoor12(Agent, Door), see(Agent, Object), Time),
       []).
 */

 /*  terminates(walkThroughDoor12(A,Walkthroughdoor12),
   	   see(A,See),
   	   Terminates).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e',59).
terminates(walkThroughDoor12(A,Walkthroughdoor12),
	   see(A,See)).

 /*  terminated(happens(walkThroughDoor12(A,Walkthroughdoor12),
   		   Time_From,
   		   Time_Until),
   	   see(A,See),
   	   []).
 */


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e',63).
% [agent,door,object,time]
% Terminates(WalkThroughDoor21(agent,door),
%            See(agent,object),
%            time).

 /*  axiom(terminates(walkThroughDoor21(Agent, Door), see(Agent, Object), Time),
       []).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e',63).

 /*  terminates(walkThroughDoor21(A,Walkthroughdoor21),
   	   see(A,See),
   	   Terminates).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e',63).
terminates(walkThroughDoor21(A,Walkthroughdoor21),
	   see(A,See)).

 /*  terminated(happens(walkThroughDoor21(A,Walkthroughdoor21),
   		   Time_From,
   		   Time_Until),
   	   see(A,See),
   	   []).
 */


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e',67).
% [agent,door,object,time]
% Terminates(WalkUpStaircase(agent,door),
%            See(agent,object),
%            time).

 /*  axiom(terminates(walkUpStaircase(Agent, Door), see(Agent, Object), Time),
       []).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e',67).

 /*  terminates(walkUpStaircase(A,Walkupstaircase),
   	   see(A,See),
   	   Terminates).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e',67).
terminates(walkUpStaircase(A,Walkupstaircase),
	   see(A,See)).

 /*  terminated(happens(walkUpStaircase(A,Walkupstaircase),
   		   Time_From,
   		   Time_Until),
   	   see(A,See),
   	   []).
 */


:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e',71).
% [agent,door,object,time]
% Terminates(WalkDownStaircase(agent,door),
%            See(agent,object),
%            time).

 /*  axiom(terminates(walkDownStaircase(Agent, Door), see(Agent, Object), Time),
       []).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e',71).

 /*  terminates(walkDownStaircase(A,Walkdownstaircase),
   	   see(A,See),
   	   Terminates).
 */
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e',71).
terminates(walkDownStaircase(A,Walkdownstaircase),
	   see(A,See)).

 /*  terminated(happens(walkDownStaircase(A,Walkdownstaircase),
   		   Time_From,
   		   Time_Until),
   	   see(A,See),
   	   []).
 */


%; End of file.
:-was_s_l('/pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e',75).
% translate: ending  File: /pack/logicmoo_ec/ext/ec_sources/ecnet/Vision.e.lps 
