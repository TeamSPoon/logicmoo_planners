:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(pfc).
% Tue, 06 Oct 2020 05:01:23 GMT
 %  loading(load_e_pl,'/pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e').
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; OTSpace: object-scale topological space
%;
%; The OTSpace representation deals with topological space at
%; the scale of objects such as agents (humans and animals)
%; and physical objects.
%;
%; PartOf
%; physobj is a part of object.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:20
% predicate PartOf(physobj,object)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:21
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:21
predicate(partOf(physobj,object)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:21
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:21
actions([partOf/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:21
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:21
actions([partOf/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:21
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:21
meta_argtypes(partOf(physobj,object)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:21
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:21
meta_argtypes(partOf(physobj,object)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:21
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:21
mpred_prop(partOf(physobj,object),predicate).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:21
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:21
mpred_prop(partOf(physobj,object),predicate).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:21
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:21
meta_argtypes(partOf(physobj,object)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:21
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:21
meta_argtypes(partOf(physobj,object)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:22
%; A state constraint says that if a physical object
%; is part of an object, the location of the
%; physical object is the same as the location of the object:
% [physobj,object,location,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:26
% PartOf(physobj,object) &
% HoldsAt(At(object,location),time) ->
% HoldsAt(At(physobj,location),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:28
partOf(Physobj, Object), holds_at(at(Object, Location), Time) ->
    holds_at(at(Physobj, Location), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:28
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:28
reactive_rule([ holds(partOf(Physobj,Object),Holds),
		holds(loc_at(Object,Location),Time)
	      ],
	      [holds(loc_at(Physobj,Location),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:30
%; rolling a snowball bigger
%; agent rolls stuff1 along stuff2.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:33
% event RollAlong(agent,stuff,stuff)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:34
event(rollAlong(agent,stuff,stuff)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:34
actions([rollAlong/3]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:34
actions([rollAlong/3]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:34
meta_argtypes(rollAlong(agent,stuff,stuff)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:34
meta_argtypes(rollAlong(agent,stuff,stuff)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:34
mpred_prop(rollAlong(agent,stuff,stuff),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:34
mpred_prop(rollAlong(agent,stuff,stuff),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:34
meta_argtypes(rollAlong(agent,stuff,stuff)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:34
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:34
meta_argtypes(rollAlong(agent,stuff,stuff)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:34
%; The diameter of ball is diameter.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:35
% fluent Diameter(ball,diameter)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:36
fluent(diameter(ball,diameter)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:36
fluents([diameter/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:36
fluents([diameter/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:36
meta_argtypes(diameter(ball,diameter)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:36
meta_argtypes(diameter(ball,diameter)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:36
mpred_prop(diameter(ball,diameter),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:36
mpred_prop(diameter(ball,diameter),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:36
meta_argtypes(diameter(ball,diameter)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:36
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:36
meta_argtypes(diameter(ball,diameter)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:37
%; A state constraint says that a ball has a unique diameter:
% [ball,diameter1,diameter2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:39
% HoldsAt(Diameter(ball,diameter1),time) &
% HoldsAt(Diameter(ball,diameter2),time) ->
% diameter1=diameter2.
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:41
holds_at(diameter(Ball, Diameter1), Time), holds_at(diameter(Ball, Diameter2), Time) ->
    equals(Diameter1, Diameter2).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:41
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:41
reactive_rule([ holds(diameter(Ball,Diameter1),Time),
		holds(diameter(Ball,Diameter2),Time)
	      ],
	      [equals(Diameter1,Diameter2)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:43
%; Effect axiom state that if an agent rolls some snow along
%; some other snow, the diameter of the first snow will increase:
% [agent,snow1,snow2,diameter1,diameter2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:46
% HoldsAt(Diameter(snow1,diameter1),time) &
% diameter2 = diameter1+1 ->
% Initiates(RollAlong(agent,snow1,snow2),
%           Diameter(snow1,diameter2),
%           time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:50
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:50
holds_at(diameter(Snow1, Diameter1), Time), equals(Diameter2, Diameter1+1) ->
    initiates(rollAlong(Agent, Snow1, Snow2),
              diameter(Snow1, Diameter2),
              Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:50
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:50
reactive_rule([ holds(diameter(Snow1,Diameter1),Time),
		equals(Diameter2,Diameter1+1)
	      ],
	      [ initiates(rollAlong(Agent,
				    Snow1,
				    Snow2),
			  at(diameter(Snow1,Diameter2),
			     Time))
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:52
% [agent,snow1,snow2,diameter1,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:53
% HoldsAt(Diameter(snow1,diameter1),time) ->
% Terminates(RollAlong(agent,snow1,snow2),
%            Diameter(snow1,diameter1),
%            time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:56
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:56
holds_at(diameter(Snow1, Diameter1), Time) ->
    terminates(rollAlong(Agent, Snow1, Snow2),
               diameter(Snow1, Diameter1),
               Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:56
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:56
reactive_rule([holds(diameter(Snow1,Diameter1),Time)],
	      [ terminates(rollAlong(Agent,
				     Snow1,
				     Snow2),
			   at(diameter(Snow1,Diameter1),
			      Time))
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:58
%; A precondition axiom states that
%; for an agent to roll some snow along some other snow,
%; there must be a location such that
%; the agent is at the location,
%; the first snow is at the location, and
%; the second snow is at the location:
%;[agent,snow1,snow2,time]
%;Happens(RollAlong(agent,snow1,snow2),time) ->
%;{location}
%;HoldsAt(At(agent,location),time) &
%;HoldsAt(At(snow1,location),time) &
%;HoldsAt(At(snow2,location),time).
%; motion
%; object moves (in place).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:74
% event Move(object)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:75
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:75
event(move(object)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:75
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:75
events([move/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:75
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:75
events([move/1]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:75
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:75
meta_argtypes(move(object)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:75
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:75
meta_argtypes(move(object)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:75
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:75
mpred_prop(move(object),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:75
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:75
mpred_prop(move(object),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:75
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:75
meta_argtypes(move(object)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:75
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:75
meta_argtypes(move(object)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:76
%; Holding
%; agent is holding physobj.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:79
% fluent Holding(agent,physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:80
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:80
fluent(holding(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:80
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:80
fluents([holding/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:80
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:80
fluents([holding/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:80
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:80
meta_argtypes(holding(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:80
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:80
meta_argtypes(holding(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:80
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:80
mpred_prop(holding(agent,physobj),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:80
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:80
mpred_prop(holding(agent,physobj),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:80
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:80
meta_argtypes(holding(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:80
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:80
meta_argtypes(holding(agent,physobj)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:80
%; agent holds or picks up physobj.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:81
% event Hold(agent,physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:82
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:82
event(hold(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:82
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:82
actions([hold/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:82
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:82
actions([hold/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:82
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:82
meta_argtypes(hold(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:82
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:82
meta_argtypes(hold(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:82
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:82
mpred_prop(hold(agent,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:82
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:82
mpred_prop(hold(agent,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:82
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:82
meta_argtypes(hold(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:82
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:82
meta_argtypes(hold(agent,physobj)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:82
%; agent picks up some stuff1 from stuff2.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:83
% event HoldSome(agent,stuff,stuff)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:84
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:84
event(holdSome(agent,stuff,stuff)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:84
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:84
actions([holdSome/3]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:84
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:84
actions([holdSome/3]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:84
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:84
meta_argtypes(holdSome(agent,stuff,stuff)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:84
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:84
meta_argtypes(holdSome(agent,stuff,stuff)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:84
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:84
mpred_prop(holdSome(agent,stuff,stuff),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:84
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:84
mpred_prop(holdSome(agent,stuff,stuff),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:84
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:84
meta_argtypes(holdSome(agent,stuff,stuff)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:84
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:84
meta_argtypes(holdSome(agent,stuff,stuff)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:84
%; agent releases or lets go of physobj.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:85
% event LetGoOf(agent,physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:86
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:86
event(letGoOf(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:86
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:86
actions([letGoOf/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:86
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:86
actions([letGoOf/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:86
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:86
meta_argtypes(letGoOf(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:86
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:86
meta_argtypes(letGoOf(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:86
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:86
mpred_prop(letGoOf(agent,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:86
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:86
mpred_prop(letGoOf(agent,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:86
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:86
meta_argtypes(letGoOf(agent,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:86
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:86
meta_argtypes(letGoOf(agent,physobj)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:87
%; An effect axiom states that if an agent holds
%; a physical object, the agent will be holding the
%; physical object:
% [agent,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:91
% Initiates(Hold(agent,physobj),Holding(agent,physobj),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:91

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(hold(Agent, Physobj),
                    holding(Agent, Physobj),
                    Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:91
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:91
initiates(hold(A,Hold),
	  holding(A,Hold),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:91
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:91
initiated(happens(hold(A,Hold),Maptime,Happens),
	  holding(A,Hold),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:93
%; A precondition axiom states that
%; for an agent to hold a physical object,
%; there must be a location such that
%; the agent is at the location and
%; the physical object is at the location:
%;[agent,physobj,time]
%;Happens(Hold(agent,physobj),time) ->
%;{location}
%;  HoldsAt(At(agent,location),time) &
%;  HoldsAt(At(physobj,location),time).
%; An effect axiom states that if an agent
%; lets go of a physical object, the agent is no longer holding
%; the physical object:
% [agent,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:108
% Terminates(LetGoOf(agent,physobj),Holding(agent,physobj),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:108

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(letGoOf(Agent, Physobj),
                     holding(Agent, Physobj),
                     Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:108
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:108
terminates(letGoOf(A,Letgoof),
	   holding(A,Letgoof),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:108
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:108
terminated(happens(letGoOf(A,Letgoof),
		   Maptime,
		   Happens),
	   holding(A,Letgoof),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:110
%; A precondition axiom states that
%; for an agent to let go of a physical object,
%; the agent must be holding the physical object:
% [agent,physobj,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:114
% Happens(LetGoOf(agent,physobj),time) ->
% HoldsAt(Holding(agent,physobj),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:115
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:115
happens(letGoOf(Agent, Physobj), Time) ->
    holds_at(holding(Agent, Physobj), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:115
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:115
reactive_rule([happens(letGoOf(Agent,Physobj),Time)],
	      [holds(holding(Agent,Physobj),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:117
%; A releases axiom states that if an agent holds
%; a physical object,
%; the physical object's location will be released
%; from inertia:
% [agent,physobj,location,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:122
% Releases(Hold(agent,physobj),At(physobj,location),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:122

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          releases(hold(Agent, Physobj),
                   at(Physobj, Location),
                   Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:122
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:122
releases(hold(_,Hold),
	 at(Hold,Location4),
	 Releases).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:122
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:122
releases(hold(_,Hold),
	 loc_at(Hold,Location4),
	 Releases).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:122
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:122
releases(hold(_,Hold),
	 loc_at(Hold,Location4),
	 Releases).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:124
%; A state constraint says that if an agent is holding
%; a physical object and the agent is at a location,
%; the physical object is also at the location:
% [agent,physobj,location,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:128
% HoldsAt(Holding(agent,physobj),time) &
% HoldsAt(At(agent,location),time) ->
% HoldsAt(At(physobj,location),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:130
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:130
holds_at(holding(Agent, Physobj), Time), holds_at(at(Agent, Location), Time) ->
    holds_at(at(Physobj, Location), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:130
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:130
reactive_rule([ holds(holding(Agent,Physobj),Time),
		holds(loc_at(Agent,Location),Time)
	      ],
	      [holds(loc_at(Physobj,Location),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:132
%; A releases axiom states that if an agent holds
%; a physical object,
%; the locations of the parts of the physical object
%; will be released from inertia:
% [agent,physobj1,physobj2,location,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:137
% PartOf(physobj1,physobj2) ->
% Releases(Hold(agent,physobj2),At(physobj1,location),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:138
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:138
partOf(Physobj1, Physobj2) ->
    releases(hold(Agent, Physobj2),
             at(Physobj1, Location),
             Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:138
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:138
reactive_rule([ holds(partOf(Physobj1,Physobj2),
		      Holds)
	      ],
	      [ releases(hold(Agent,Physobj2),
			 loc_at(Physobj1,Location),
			 Time)
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:140
%; Further, if an agent holds a physical object,
%; the locations of the physical objects of which
%; the physical object is a part
%; will be released from inertia:
% [agent,physobj1,physobj2,location,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:145
% PartOf(physobj1,physobj2) ->
% Releases(Hold(agent,physobj1),At(physobj2,location),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:146
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:146
partOf(Physobj1, Physobj2) ->
    releases(hold(Agent, Physobj1),
             at(Physobj2, Location),
             Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:146
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:146
reactive_rule([ holds(partOf(Physobj1,Physobj2),
		      Holds)
	      ],
	      [ releases(hold(Agent,Physobj1),
			 loc_at(Physobj2,Location),
			 Time)
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:148
%;[agent,physobj,location1,location2,time]
%;(!{object} PartOf(physobj,object)) &
%;HoldsAt(At(agent,location1),time) &
%;location1 != location2 ->
%;Terminates(LetGoOf(agent,physobj),At(physobj,location2),time).
% [agent,physobj,location,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:155
% (!{object} PartOf(physobj,object)) &
% HoldsAt(At(agent,location),time) ->
% Initiates(LetGoOf(agent,physobj),At(physobj,location),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:157
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:157
not(exists([Object], partOf(Physobj, Object))), holds_at(at(Agent, Location), Time) ->
    initiates(letGoOf(Agent, Physobj),
              at(Physobj, Location),
              Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:157
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:157
reactive_rule([ holds(not(partOf(Physobj,Object)),
		      Holds),
		holds(loc_at(Agent,Location),Time)
	      ],
	      [ initiates(letGoOf(Agent,Physobj),
			  at(loc_at(Physobj,Location),
			     Time))
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:159
%;[agent,physobj1,physobj2,location1,location2,time]
%;PartOf(physobj1,physobj2) &
%;(!{object} PartOf(physobj2,object)) &
%;HoldsAt(At(agent,location1),time) &
%;location1 != location2 ->
%;Terminates(LetGoOf(agent,physobj1),At(physobj2,location2),time).
% [agent,physobj1,physobj2,location,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:167
% PartOf(physobj1,physobj2) &
% (!{object} PartOf(physobj2,object)) &
% HoldsAt(At(agent,location),time) ->
% Initiates(LetGoOf(agent,physobj1),At(physobj2,location),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:170
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:170
partOf(Physobj1, Physobj2), not(exists([Object], partOf(Physobj2, Object))), holds_at(at(Agent, Location), Time) ->
    initiates(letGoOf(Agent, Physobj1),
              at(Physobj2, Location),
              Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:170
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:170
reactive_rule([ holds(partOf(Physobj1,Physobj2),
		      Holds),
		holds(not(partOf(Physobj2,Object)),
		      Holds7),
		holds(loc_at(Agent,Location),Time)
	      ],
	      [ initiates(letGoOf(Agent,Physobj1),
			  at(loc_at(Physobj2,Location),
			     Time))
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:172
%; An effect axiom states that if an agent is at a location
%; and lets go of a physical object, the physical object
%; will be at the location:
% [agent,physobj,location,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:176
% HoldsAt(At(agent,location),time) ->
% Initiates(LetGoOf(agent,physobj),At(physobj,location),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:177
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:177
holds_at(at(Agent, Location), Time) ->
    initiates(letGoOf(Agent, Physobj),
              at(Physobj, Location),
              Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:177
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:177
reactive_rule([holds(loc_at(Agent,Location),Time)],
	      [ initiates(letGoOf(Agent,Physobj),
			  at(loc_at(Physobj,Location),
			     Time))
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:179
%; An effect axiom states that if an agent picks up
%; some stuff out of some other stuff, the agent will
%; be holding the first stuff:
% [agent,stuff1,stuff2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:183
% Initiates(HoldSome(agent,stuff1,stuff2),
%           Holding(agent,stuff1),
%           time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:185

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(holdSome(Agent, Stuff1, Stuff2),
                    holding(Agent, Stuff1),
                    Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:185
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:185
initiates(holdSome(HoldsomeP_Num3_V,Holding,Holdsome),
	  holding(HoldsomeP_Num3_V,Holding),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:185
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:185
initiated(happens(holdSome(HoldsomeP_Num3_V,
			   Holding,
			   Holdsome),
		  Maptime,
		  Happens),
	  holding(HoldsomeP_Num3_V,Holding),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:187
%; A precondition axiom states that
%; for an agent to pick up some stuff out of some other stuff,
%; the first stuff must be a part of the second stuff and
%; there must be a location such that the agent is at the location,
%; the first stuff is at the location, and the second stuff is
%; at the location:
% [agent,stuff1,stuff2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:194
% Happens(HoldSome(agent,stuff1,stuff2),time) ->
% PartOf(stuff1,stuff2) &
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:196
% {location}% 
%   HoldsAt(At(agent,location),time) &
%   HoldsAt(At(stuff1,location),time) &
%   HoldsAt(At(stuff2,location),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199

 /*  exists([Location],
    happens(holdSome(Agent, Stuff1, Stuff2), Time) ->
       partOf(Stuff1, Stuff2),
       holds_at(at(Agent, Location), Time),
       holds_at(at(Stuff1, Location), Time),
       holds_at(at(Stuff2, Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199

 /*  not(happens(holdSome(Agent, Stuff1, Stuff2), Time)) :-
       (   not(partOf(Stuff1, Stuff2))
       ;   not(holds_at(at(Agent, Exists_Location), Time))
       ;   not(holds_at(at(Stuff1, Exists_Location), Time))
       ;   not(holds_at(at(Stuff2, Exists_Location), Time))
       ),
       some(Exists_Location,
            '$kolem_Fn_77'(Agent, Stuff1, Stuff2, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199

 /*  [(not(partOf(Stuff1, Stuff2));holds_at(neg(at(Agent, Exists_Location)), Time);holds_at(neg(at(Stuff1, Exists_Location)), Time);holds_at(neg(at(Stuff2, Exists_Location)), Time)), some(Exists_Location, '$kolem_Fn_77'(Agent, Stuff1, Stuff2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(holdSome(Agent, Stuff1, Stuff2), Time))).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199
(not(partOf(A, Partof));holds_at(neg(at(Kolem_Fn_77P_Num4_V, Location6)), Time7);holds_at(neg(at(A, Location6)), Time7);holds_at(neg(at(Partof, Location6)), Time7)), some(Location6, '$kolem_Fn_77'(Kolem_Fn_77P_Num4_V, A, Partof, Time7)) ->
    not(happens(holdSome(Kolem_Fn_77P_Num4_V, A, Partof),
                Time7)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199
 reactive_rule([  (not(partOf(A, Partof));at(not(loc_at(Kolem_Fn_77P_Num4_V, Location6)), Time7);at(not(loc_at(A, Location6)), Time7);at(not(loc_at(Partof, Location6)), Time7)),
                   some(Location6,
                        '$kolem_Fn_77'(Kolem_Fn_77P_Num4_V,
                                       A,
                                       Partof,
                                       Time7))
                 ],
                 [ not(happens(holdSome(Kolem_Fn_77P_Num4_V,
                                        A,
                                        Partof),
                               Time7))
                 ]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199

 /*  partOf(Stuff1, Stuff2) :-
       happens(holdSome(Agent, Stuff1, Stuff2), Time),
       some(Exists_Location,
            '$kolem_Fn_77'(Agent, Stuff1, Stuff2, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199

 /*  [happens(holdSome(Agent, Stuff1, Stuff2), Time), some(Exists_Location, '$kolem_Fn_77'(Agent, Stuff1, Stuff2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          partOf(Stuff1, Stuff2)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199
happens(holdSome(HoldsomeP_Num3_V, A, Holdsome), Maptime), some(_, '$kolem_Fn_77'(HoldsomeP_Num3_V, A, Holdsome, Maptime)) ->
    partOf(A, Holdsome).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199
reactive_rule([ happens(holdSome(HoldsomeP_Num3_V,
				 A,
				 Holdsome),
			Maptime),
		some(_,
		     '$kolem_Fn_77'(HoldsomeP_Num3_V,
				    A,
				    Holdsome,
				    Maptime))
	      ],
	      [holds(partOf(A,Holdsome),Holds)]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199

 /*  holds_at(at(Agent, Exists_Location), Time) :-
       happens(holdSome(Agent, Stuff1, Stuff2), Time),
       some(Exists_Location,
            '$kolem_Fn_77'(Agent, Stuff1, Stuff2, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199

 /*  [happens(holdSome(Agent, Stuff1, Stuff2), Time), some(Exists_Location, '$kolem_Fn_77'(Agent, Stuff1, Stuff2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Agent, Exists_Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199
happens(holdSome(HoldsomeP_Num3_V17, A, Holdsome16), Maptime14), some(Location15, '$kolem_Fn_77'(HoldsomeP_Num3_V17, A, Holdsome16, Maptime14)) ->
    holds_at(at(HoldsomeP_Num3_V17, Location15), Maptime14).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199
reactive_rule([ happens(holdSome(HoldsomeP_Num3_V17,
				 A,
				 Holdsome16),
			Maptime14),
		some(Location15,
		     '$kolem_Fn_77'(HoldsomeP_Num3_V17,
				    A,
				    Holdsome16,
				    Maptime14))
	      ],
	      [ holds(loc_at(HoldsomeP_Num3_V17,Location15),
		      Maptime14)
	      ]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199

 /*  holds_at(at(Stuff1, Exists_Location), Time) :-
       happens(holdSome(Agent, Stuff1, Stuff2), Time),
       some(Exists_Location,
            '$kolem_Fn_77'(Agent, Stuff1, Stuff2, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199

 /*  [happens(holdSome(Agent, Stuff1, Stuff2), Time), some(Exists_Location, '$kolem_Fn_77'(Agent, Stuff1, Stuff2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Stuff1, Exists_Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199
happens(holdSome(HoldsomeP_Num3_V21, A, Holdsome20), Maptime18), some(Location19, '$kolem_Fn_77'(HoldsomeP_Num3_V21, A, Holdsome20, Maptime18)) ->
    holds_at(at(A, Location19), Maptime18).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199
reactive_rule([ happens(holdSome(HoldsomeP_Num3_V21,
				 A,
				 Holdsome20),
			Maptime18),
		some(Location19,
		     '$kolem_Fn_77'(HoldsomeP_Num3_V21,
				    A,
				    Holdsome20,
				    Maptime18))
	      ],
	      [holds(loc_at(A,Location19),Maptime18)]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199

 /*  holds_at(at(Stuff2, Exists_Location), Time) :-
       happens(holdSome(Agent, Stuff1, Stuff2), Time),
       some(Exists_Location,
            '$kolem_Fn_77'(Agent, Stuff1, Stuff2, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199

 /*  [happens(holdSome(Agent, Stuff1, Stuff2), Time), some(Exists_Location, '$kolem_Fn_77'(Agent, Stuff1, Stuff2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Stuff2, Exists_Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199
happens(holdSome(HoldsomeP_Num3_V25, A, Holdsome24), Maptime22), some(Location23, '$kolem_Fn_77'(HoldsomeP_Num3_V25, A, Holdsome24, Maptime22)) ->
    holds_at(at(Holdsome24, Location23), Maptime22).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:199
reactive_rule([ happens(holdSome(HoldsomeP_Num3_V25,
				 A,
				 Holdsome24),
			Maptime22),
		some(Location23,
		     '$kolem_Fn_77'(HoldsomeP_Num3_V25,
				    A,
				    Holdsome24,
				    Maptime22))
	      ],
	      [ holds(loc_at(Holdsome24,Location23),
		      Maptime22)
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:201
%; A releases axiom states that if an agent picks up some
%; stuff out of some other stuff,
%; the first stuff's location will be released
%; from inertia:
% [agent,stuff1,stuff2,location,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:206
% Releases(HoldSome(agent,stuff1,stuff2),At(stuff1,location),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:206

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          releases(holdSome(Agent, Stuff1, Stuff2),
                   at(Stuff1, Location),
                   Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:206
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:206
releases(holdSome(HoldsomeP_Num3_V,A,Holdsome),
	 at(A,Location5),
	 Releases).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:206
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:206
releases(holdSome(HoldsomeP_Num3_V,A,Holdsome),
	 loc_at(A,Location5),
	 Releases).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:206
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:206
releases(holdSome(HoldsomeP_Num3_V,A,Holdsome),
	 loc_at(A,Location5),
	 Releases).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:208
%; Inside
%; physobj1 is inside physobj2.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:211
% fluent Inside(physobj,physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:212
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:212
fluent(inside(physobj,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:212
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:212
fluents([inside/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:212
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:212
fluents([inside/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:212
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:212
meta_argtypes(inside(physobj,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:212
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:212
meta_argtypes(inside(physobj,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:212
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:212
mpred_prop(inside(physobj,physobj),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:212
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:212
mpred_prop(inside(physobj,physobj),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:212
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:212
meta_argtypes(inside(physobj,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:212
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:212
meta_argtypes(inside(physobj,physobj)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:212
%; agent puts physobj1 inside physobj2.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:213
% event PutInside(agent,physobj,physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:214
event(putInside(agent,physobj,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:214
actions([putInside/3]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:214
actions([putInside/3]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:214
meta_argtypes(putInside(agent,physobj,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:214
meta_argtypes(putInside(agent,physobj,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:214
mpred_prop(putInside(agent,physobj,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:214
mpred_prop(putInside(agent,physobj,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:214
meta_argtypes(putInside(agent,physobj,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:214
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:214
meta_argtypes(putInside(agent,physobj,physobj)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:214
%; agent takes physobj1 out of physobj2.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:215
% event TakeOutOf(agent,physobj,physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:216
event(takeOutOf(agent,physobj,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:216
actions([takeOutOf/3]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:216
actions([takeOutOf/3]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:216
meta_argtypes(takeOutOf(agent,physobj,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:216
meta_argtypes(takeOutOf(agent,physobj,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:216
mpred_prop(takeOutOf(agent,physobj,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:216
mpred_prop(takeOutOf(agent,physobj,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:216
meta_argtypes(takeOutOf(agent,physobj,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:216
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:216
meta_argtypes(takeOutOf(agent,physobj,physobj)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:217
%; A state constraint says that a physical object cannot
%; be inside itself:
% [physobj1,physobj2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:220
% HoldsAt(Inside(physobj1,physobj2),time) ->
% physobj1!=physobj2.
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:221
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:221
holds_at(inside(Physobj1, Physobj2), Time) ->
    diff(Physobj1, Physobj2).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:221
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:221
reactive_rule([holds(inside(Physobj1,Physobj2),Time)],
	      [diff(Physobj1,Physobj2)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:223
%; A state constraint says that if a physical object is
%; inside another physical object, the second physical object
%; is not inside the first physical object:
% [physobj1,physobj2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:227
% HoldsAt(Inside(physobj1,physobj2),time) ->
% !HoldsAt(Inside(physobj2,physobj1),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:228
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:228
holds_at(inside(Physobj1, Physobj2), Time) ->
    holds_at(neg(inside(Physobj2, Physobj1)), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:228
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:228
reactive_rule([holds(inside(Physobj1,Physobj2),Time)],
	      [ holds(not(inside(Physobj2,Physobj1)),
		      Time)
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:230
%; An effect axiom states that if an agent puts a physical
%; object inside another physical object, the first
%; physical object will be inside the second physical object:
% [agent,physobj1,physobj2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:234
% Initiates(PutInside(agent,physobj1,physobj2),
%           Inside(physobj1,physobj2),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:235

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(putInside(Agent, Physobj1, Physobj2),
                    inside(Physobj1, Physobj2),
                    Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:235
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:235
initiates(putInside(PutinsideP_Num3_V,A,Putinside),
	  inside(A,Putinside),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:235
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:235
initiated(happens(putInside(PutinsideP_Num3_V,
			    A,
			    Putinside),
		  Maptime,
		  Happens),
	  inside(A,Putinside),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:237
%; An effect axiom states that if an agent puts a physical
%; object inside another physical object, the agent will
%; no longer be holding the first physical object:
% [agent,physobj1,physobj2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:241
% Terminates(PutInside(agent,physobj1,physobj2),
%            Holding(agent,physobj1),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:242

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(putInside(Agent, Physobj1, Physobj2),
                     holding(Agent, Physobj1),
                     Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:242
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:242
terminates(putInside(PutinsideP_Num3_V,
		     Holding,
		     Putinside),
	   holding(PutinsideP_Num3_V,Holding),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:242
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:242
terminated(happens(putInside(PutinsideP_Num3_V,
			     Holding,
			     Putinside),
		   Maptime,
		   Happens),
	   holding(PutinsideP_Num3_V,Holding),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:244
%; A precondition axiom states that
%; for an agent to put a physical object inside another
%; physical object,
%; the agent must be holding the first physical object
%; and there must be a location such that
%; the agent is at the location and
%; the second physical object is at the location:
%;[agent,physobj1,physobj2,time]
%;Happens(PutInside(agent,physobj1,physobj2),time) ->
%;HoldsAt(Holding(agent,physobj1),time) &
%;{location}
%; HoldsAt(At(agent,location),time) &
%; HoldsAt(At(physobj2,location),time).
%; An effect axiom states that
%; if an agent takes a physical object out of another
%; physical object, the first physical object
%; will no longer be inside the second physical object:
% [agent,physobj1,physobj2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:263
% Terminates(TakeOutOf(agent,physobj1,physobj2),
%            Inside(physobj1,physobj2),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:264

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(takeOutOf(Agent, Physobj1, Physobj2),
                     inside(Physobj1, Physobj2),
                     Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:264
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:264
terminates(takeOutOf(TakeoutofP_Num3_V,A,Takeoutof),
	   inside(A,Takeoutof),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:264
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:264
terminated(happens(takeOutOf(TakeoutofP_Num3_V,
			     A,
			     Takeoutof),
		   Maptime,
		   Happens),
	   inside(A,Takeoutof),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:266
%; A precondition axiom states that
%; for an agent to take a physical object out of another
%; physical object,
%; the first physical object must be inside the second physical object
%; and there must be a location such that
%; the agent is at the location,
%; the first physical object is at the location, and
%; the second physical object is at the location:
% [agent,physobj1,physobj2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:275
% Happens(TakeOutOf(agent,physobj1,physobj2),time) ->
% HoldsAt(Inside(physobj1,physobj2),time) &
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:277
% {location}% 
%  HoldsAt(At(agent,location),time) &
%  HoldsAt(At(physobj1,location),time) &
%  HoldsAt(At(physobj2,location),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280

 /*  exists([Location],
    happens(takeOutOf(Agent, Physobj1, Physobj2), Time) ->
       holds_at(inside(Physobj1, Physobj2), Time),
       holds_at(at(Agent, Location), Time),
       holds_at(at(Physobj1, Location), Time),
       holds_at(at(Physobj2, Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280

 /*  not(happens(takeOutOf(Agent, Physobj1, Physobj2), Time)) :-
       (   not(holds_at(inside(Physobj1, Physobj2), Time))
       ;   not(holds_at(at(Agent, Exists_Location), Time))
       ;   not(holds_at(at(Physobj1, Exists_Location), Time))
       ;   not(holds_at(at(Physobj2, Exists_Location), Time))
       ),
       some(Exists_Location,
            '$kolem_Fn_78'(Agent, Physobj1, Physobj2, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280

 /*  [(holds_at(neg(inside(Physobj1, Physobj2)), Time);holds_at(neg(at(Agent, Exists_Location)), Time);holds_at(neg(at(Physobj1, Exists_Location)), Time);holds_at(neg(at(Physobj2, Exists_Location)), Time)), some(Exists_Location, '$kolem_Fn_78'(Agent, Physobj1, Physobj2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(takeOutOf(Agent, Physobj1, Physobj2),
                      Time))).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280
(holds_at(neg(inside(A, Inside)), Time6);holds_at(neg(at(Kolem_Fn_78P_Num4_V, Location7)), Time6);holds_at(neg(at(A, Location7)), Time6);holds_at(neg(at(Inside, Location7)), Time6)), some(Location7, '$kolem_Fn_78'(Kolem_Fn_78P_Num4_V, A, Inside, Time6)) ->
    not(happens(takeOutOf(Kolem_Fn_78P_Num4_V, A, Inside),
                Time6)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280
 reactive_rule([  (at(not(inside(A, Inside)), Time6);at(not(loc_at(Kolem_Fn_78P_Num4_V, Location7)), Time6);at(not(loc_at(A, Location7)), Time6);at(not(loc_at(Inside, Location7)), Time6)),
                   some(Location7,
                        '$kolem_Fn_78'(Kolem_Fn_78P_Num4_V,
                                       A,
                                       Inside,
                                       Time6))
                 ],
                 [ not(happens(takeOutOf(Kolem_Fn_78P_Num4_V,
                                         A,
                                         Inside),
                               Time6))
                 ]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280

 /*  holds_at(inside(Physobj1, Physobj2), Time) :-
       happens(takeOutOf(Agent, Physobj1, Physobj2), Time),
       some(Exists_Location,
            '$kolem_Fn_78'(Agent, Physobj1, Physobj2, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280

 /*  [happens(takeOutOf(Agent, Physobj1, Physobj2), Time), some(Exists_Location, '$kolem_Fn_78'(Agent, Physobj1, Physobj2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(inside(Physobj1, Physobj2), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280
happens(takeOutOf(TakeoutofP_Num3_V, A, Takeoutof), Maptime), some(_, '$kolem_Fn_78'(TakeoutofP_Num3_V, A, Takeoutof, Maptime)) ->
    holds_at(inside(A, Takeoutof), Maptime).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280
reactive_rule([ happens(takeOutOf(TakeoutofP_Num3_V,
				  A,
				  Takeoutof),
			Maptime),
		some(_,
		     '$kolem_Fn_78'(TakeoutofP_Num3_V,
				    A,
				    Takeoutof,
				    Maptime))
	      ],
	      [holds(inside(A,Takeoutof),Maptime)]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280

 /*  holds_at(at(Agent, Exists_Location), Time) :-
       happens(takeOutOf(Agent, Physobj1, Physobj2), Time),
       some(Exists_Location,
            '$kolem_Fn_78'(Agent, Physobj1, Physobj2, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280

 /*  [happens(takeOutOf(Agent, Physobj1, Physobj2), Time), some(Exists_Location, '$kolem_Fn_78'(Agent, Physobj1, Physobj2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Agent, Exists_Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280
happens(takeOutOf(TakeoutofP_Num3_V16, A, Takeoutof15), Maptime13), some(Location14, '$kolem_Fn_78'(TakeoutofP_Num3_V16, A, Takeoutof15, Maptime13)) ->
    holds_at(at(TakeoutofP_Num3_V16, Location14), Maptime13).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280
reactive_rule([ happens(takeOutOf(TakeoutofP_Num3_V16,
				  A,
				  Takeoutof15),
			Maptime13),
		some(Location14,
		     '$kolem_Fn_78'(TakeoutofP_Num3_V16,
				    A,
				    Takeoutof15,
				    Maptime13))
	      ],
	      [ holds(loc_at(TakeoutofP_Num3_V16,
			     Location14),
		      Maptime13)
	      ]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280

 /*  holds_at(at(Physobj1, Exists_Location), Time) :-
       happens(takeOutOf(Agent, Physobj1, Physobj2), Time),
       some(Exists_Location,
            '$kolem_Fn_78'(Agent, Physobj1, Physobj2, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280

 /*  [happens(takeOutOf(Agent, Physobj1, Physobj2), Time), some(Exists_Location, '$kolem_Fn_78'(Agent, Physobj1, Physobj2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Physobj1, Exists_Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280
happens(takeOutOf(TakeoutofP_Num3_V20, A, Takeoutof19), Maptime17), some(Location18, '$kolem_Fn_78'(TakeoutofP_Num3_V20, A, Takeoutof19, Maptime17)) ->
    holds_at(at(A, Location18), Maptime17).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280
reactive_rule([ happens(takeOutOf(TakeoutofP_Num3_V20,
				  A,
				  Takeoutof19),
			Maptime17),
		some(Location18,
		     '$kolem_Fn_78'(TakeoutofP_Num3_V20,
				    A,
				    Takeoutof19,
				    Maptime17))
	      ],
	      [holds(loc_at(A,Location18),Maptime17)]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280

 /*  holds_at(at(Physobj2, Exists_Location), Time) :-
       happens(takeOutOf(Agent, Physobj1, Physobj2), Time),
       some(Exists_Location,
            '$kolem_Fn_78'(Agent, Physobj1, Physobj2, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280

 /*  [happens(takeOutOf(Agent, Physobj1, Physobj2), Time), some(Exists_Location, '$kolem_Fn_78'(Agent, Physobj1, Physobj2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Physobj2, Exists_Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280
happens(takeOutOf(TakeoutofP_Num3_V24, A, Takeoutof23), Maptime21), some(Location22, '$kolem_Fn_78'(TakeoutofP_Num3_V24, A, Takeoutof23, Maptime21)) ->
    holds_at(at(Takeoutof23, Location22), Maptime21).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:280
reactive_rule([ happens(takeOutOf(TakeoutofP_Num3_V24,
				  A,
				  Takeoutof23),
			Maptime21),
		some(Location22,
		     '$kolem_Fn_78'(TakeoutofP_Num3_V24,
				    A,
				    Takeoutof23,
				    Maptime21))
	      ],
	      [ holds(loc_at(Takeoutof23,Location22),
		      Maptime21)
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:282
%; A releases axiom states that if an agent puts a physical
%; object inside another physical object,
%; the first physical object's location will be released
%; from inertia:
% [agent,physobj1,physobj2,location,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:287
% Releases(PutInside(agent,physobj1,physobj2),
%          At(physobj1,location),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:288

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          releases(putInside(Agent, Physobj1, Physobj2),
                   at(Physobj1, Location),
                   Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:288
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:288
releases(putInside(PutinsideP_Num3_V,A,Putinside),
	 at(A,Location5),
	 Releases).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:288
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:288
releases(putInside(PutinsideP_Num3_V,A,Putinside),
	 loc_at(A,Location5),
	 Releases).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:288
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:288
releases(putInside(PutinsideP_Num3_V,A,Putinside),
	 loc_at(A,Location5),
	 Releases).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:290
%; A state constraint says that if a physical object is inside
%; another physical object and the second physical object is
%; at a location, the first physical object is also at the location:
% [physobj1,physobj2,location,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:294
% HoldsAt(Inside(physobj1,physobj2),time) &
% HoldsAt(At(physobj2,location),time) ->
% HoldsAt(At(physobj1,location),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:296
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:296
holds_at(inside(Physobj1, Physobj2), Time), holds_at(at(Physobj2, Location), Time) ->
    holds_at(at(Physobj1, Location), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:296
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:296
reactive_rule([ holds(inside(Physobj1,Physobj2),Time),
		holds(loc_at(Physobj2,Location),Time)
	      ],
	      [holds(loc_at(Physobj1,Location),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:298
%; An effect axiom states that if an agent takes a physical
%; object out of another physical object,
%; the agent will be holding the first physical object:
% [agent,physobj1,physobj2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:302
% Initiates(TakeOutOf(agent,physobj1,physobj2),
%           Holding(agent,physobj1),
%           time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:304

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(takeOutOf(Agent, Physobj1, Physobj2),
                    holding(Agent, Physobj1),
                    Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:304
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:304
initiates(takeOutOf(TakeoutofP_Num3_V,
		    Holding,
		    Takeoutof),
	  holding(TakeoutofP_Num3_V,Holding),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:304
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:304
initiated(happens(takeOutOf(TakeoutofP_Num3_V,
			    Holding,
			    Takeoutof),
		  Maptime,
		  Happens),
	  holding(TakeoutofP_Num3_V,Holding),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:306
%; On
%; physobj1 is on physobj2.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:309
% fluent On(physobj,physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:310
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:310
fluent(on(physobj,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:310
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:310
fluents([on/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:310
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:310
fluents([on/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:310
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:310
meta_argtypes(on(physobj,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:310
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:310
meta_argtypes(on(physobj,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:310
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:310
mpred_prop(on(physobj,physobj),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:310
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:310
mpred_prop(on(physobj,physobj),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:310
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:310
meta_argtypes(on(physobj,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:310
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:310
meta_argtypes(on(physobj,physobj)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:311
%; agent places physobj1 on physobj2.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:312
% event PlaceOn(agent,physobj,physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:313
event(placeOn(agent,physobj,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:313
actions([placeOn/3]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:313
actions([placeOn/3]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:313
meta_argtypes(placeOn(agent,physobj,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:313
meta_argtypes(placeOn(agent,physobj,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:313
mpred_prop(placeOn(agent,physobj,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:313
mpred_prop(placeOn(agent,physobj,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:313
meta_argtypes(placeOn(agent,physobj,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:313
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:313
meta_argtypes(placeOn(agent,physobj,physobj)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:313
%; agent takes physobj1 off of physobj2.

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:314
% event TakeOffOf(agent,physobj,physobj)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:315
event(takeOffOf(agent,physobj,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:315
actions([takeOffOf/3]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:315
actions([takeOffOf/3]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:315
meta_argtypes(takeOffOf(agent,physobj,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:315
meta_argtypes(takeOffOf(agent,physobj,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:315
mpred_prop(takeOffOf(agent,physobj,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:315
mpred_prop(takeOffOf(agent,physobj,physobj),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:315
meta_argtypes(takeOffOf(agent,physobj,physobj)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:315
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:315
meta_argtypes(takeOffOf(agent,physobj,physobj)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:316
%; A state constraint says that a physical object cannot
%; be on itself:
% [physobj1,physobj2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:319
% HoldsAt(On(physobj1,physobj2),time) ->
% physobj1!=physobj2.
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:320
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:320
holds_at(on(Physobj1, Physobj2), Time) ->
    diff(Physobj1, Physobj2).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:320
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:320
reactive_rule([holds(on(Physobj1,Physobj2),Time)],
	      [diff(Physobj1,Physobj2)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:322
%; A state constraint says that if a physical object is
%; on another physical object, the second physical object
%; is not on the first physical object:
% [physobj1,physobj2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:326
% HoldsAt(On(physobj1,physobj2),time) ->
% !HoldsAt(On(physobj2,physobj1),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:327
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:327
holds_at(on(Physobj1, Physobj2), Time) ->
    holds_at(neg(on(Physobj2, Physobj1)), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:327
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:327
reactive_rule([holds(on(Physobj1,Physobj2),Time)],
	      [ holds(not(on(Physobj2,Physobj1)),
		      Time)
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:329
%; An effect axiom states that if an agent places a physical
%; object on another physical object, the first
%; physical object will be on the second physical object:
% [agent,physobj1,physobj2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:333
% Initiates(PlaceOn(agent,physobj1,physobj2),
%           On(physobj1,physobj2),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:334

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(placeOn(Agent, Physobj1, Physobj2),
                    on(Physobj1, Physobj2),
                    Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:334
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:334
initiates(placeOn(PlaceonP_Num3_V,A,Placeon),
	  on(A,Placeon),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:334
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:334
initiated(happens(placeOn(PlaceonP_Num3_V,A,Placeon),
		  Maptime,
		  Happens),
	  on(A,Placeon),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:336
%; An effect axiom states that if an agent places a physical
%; object on another physical object, the agent will
%; no longer be holding the first physical object:
% [agent,physobj1,physobj2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:340
% Terminates(PlaceOn(agent,physobj1,physobj2),
%            Holding(agent,physobj1),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:341

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(placeOn(Agent, Physobj1, Physobj2),
                     holding(Agent, Physobj1),
                     Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:341
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:341
terminates(placeOn(PlaceonP_Num3_V,Holding,Placeon),
	   holding(PlaceonP_Num3_V,Holding),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:341
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:341
terminated(happens(placeOn(PlaceonP_Num3_V,
			   Holding,
			   Placeon),
		   Maptime,
		   Happens),
	   holding(PlaceonP_Num3_V,Holding),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:343
%; A precondition axiom states that
%; for an agent to place a physical object on another
%; physical object,
%; the agent must be holding the first physical object
%; and there must be a location such that
%; the agent is at the location and
%; the second physical object is at the location:
%;[agent,physobj1,physobj2,time]
%;Happens(PlaceOn(agent,physobj1,physobj2),time) ->
%;HoldsAt(Holding(agent,physobj1),time) &
%;{location}
%; HoldsAt(At(agent,location),time) &
%; HoldsAt(At(physobj2,location),time).
%; An effect axiom states that
%; if an agent takes a physical object off of another
%; physical object, the first physical object
%; will no longer be on the second physical object:
% [agent,physobj1,physobj2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:362
% Terminates(TakeOffOf(agent,physobj1,physobj2),
%            On(physobj1,physobj2),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:363

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(takeOffOf(Agent, Physobj1, Physobj2),
                     on(Physobj1, Physobj2),
                     Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:363
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:363
terminates(takeOffOf(TakeoffofP_Num3_V,A,Takeoffof),
	   on(A,Takeoffof),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:363
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:363
terminated(happens(takeOffOf(TakeoffofP_Num3_V,
			     A,
			     Takeoffof),
		   Maptime,
		   Happens),
	   on(A,Takeoffof),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:365
%; An effect axiom states that if an agent takes a physical
%; object off of another physical object,
%; the agent will be holding the first physical object:
% [agent,physobj1,physobj2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:369
% Initiates(TakeOffOf(agent,physobj1,physobj2),
%           Holding(agent,physobj1),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:370

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(takeOffOf(Agent, Physobj1, Physobj2),
                    holding(Agent, Physobj1),
                    Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:370
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:370
initiates(takeOffOf(TakeoffofP_Num3_V,
		    Holding,
		    Takeoffof),
	  holding(TakeoffofP_Num3_V,Holding),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:370
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:370
initiated(happens(takeOffOf(TakeoffofP_Num3_V,
			    Holding,
			    Takeoffof),
		  Maptime,
		  Happens),
	  holding(TakeoffofP_Num3_V,Holding),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:372
%; A precondition axiom states that
%; for an agent to take a physical object off of another
%; physical object,
%; the first physical object must be on the second physical object
%; and there must be a location such that
%; the agent is at the location and
%; the first physical object is at the location:
%; the second physical object is at the location:
% [agent,physobj1,physobj2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:381
% Happens(TakeOffOf(agent,physobj1,physobj2),time) ->
% HoldsAt(On(physobj1,physobj2),time) &
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:383
% {location}% 
%  HoldsAt(At(agent,location),time) &
%  HoldsAt(At(physobj1,location),time) &
%  HoldsAt(At(physobj2,location),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386

 /*  exists([Location],
    happens(takeOffOf(Agent, Physobj1, Physobj2), Time) ->
       holds_at(on(Physobj1, Physobj2), Time),
       holds_at(at(Agent, Location), Time),
       holds_at(at(Physobj1, Location), Time),
       holds_at(at(Physobj2, Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386

 /*  not(happens(takeOffOf(Agent, Physobj1, Physobj2), Time)) :-
       (   not(holds_at(on(Physobj1, Physobj2), Time))
       ;   not(holds_at(at(Agent, Exists_Location), Time))
       ;   not(holds_at(at(Physobj1, Exists_Location), Time))
       ;   not(holds_at(at(Physobj2, Exists_Location), Time))
       ),
       some(Exists_Location,
            '$kolem_Fn_79'(Agent, Physobj1, Physobj2, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386

 /*  [(holds_at(neg(on(Physobj1, Physobj2)), Time);holds_at(neg(at(Agent, Exists_Location)), Time);holds_at(neg(at(Physobj1, Exists_Location)), Time);holds_at(neg(at(Physobj2, Exists_Location)), Time)), some(Exists_Location, '$kolem_Fn_79'(Agent, Physobj1, Physobj2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(takeOffOf(Agent, Physobj1, Physobj2),
                      Time))).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386
(holds_at(neg(on(A, On)), Time6);holds_at(neg(at(Kolem_Fn_79P_Num4_V, Location7)), Time6);holds_at(neg(at(A, Location7)), Time6);holds_at(neg(at(On, Location7)), Time6)), some(Location7, '$kolem_Fn_79'(Kolem_Fn_79P_Num4_V, A, On, Time6)) ->
    not(happens(takeOffOf(Kolem_Fn_79P_Num4_V, A, On),
                Time6)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386
 reactive_rule([  (at(not(on(A, On)), Time6);at(not(loc_at(Kolem_Fn_79P_Num4_V, Location7)), Time6);at(not(loc_at(A, Location7)), Time6);at(not(loc_at(On, Location7)), Time6)),
                   some(Location7,
                        '$kolem_Fn_79'(Kolem_Fn_79P_Num4_V,
                                       A,
                                       On,
                                       Time6))
                 ],
                 [ not(happens(takeOffOf(Kolem_Fn_79P_Num4_V,
                                         A,
                                         On),
                               Time6))
                 ]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386

 /*  holds_at(on(Physobj1, Physobj2), Time) :-
       happens(takeOffOf(Agent, Physobj1, Physobj2), Time),
       some(Exists_Location,
            '$kolem_Fn_79'(Agent, Physobj1, Physobj2, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386

 /*  [happens(takeOffOf(Agent, Physobj1, Physobj2), Time), some(Exists_Location, '$kolem_Fn_79'(Agent, Physobj1, Physobj2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(on(Physobj1, Physobj2), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386
happens(takeOffOf(TakeoffofP_Num3_V, A, Takeoffof), Maptime), some(_, '$kolem_Fn_79'(TakeoffofP_Num3_V, A, Takeoffof, Maptime)) ->
    holds_at(on(A, Takeoffof), Maptime).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386
reactive_rule([ happens(takeOffOf(TakeoffofP_Num3_V,
				  A,
				  Takeoffof),
			Maptime),
		some(_,
		     '$kolem_Fn_79'(TakeoffofP_Num3_V,
				    A,
				    Takeoffof,
				    Maptime))
	      ],
	      [holds(on(A,Takeoffof),Maptime)]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386

 /*  holds_at(at(Agent, Exists_Location), Time) :-
       happens(takeOffOf(Agent, Physobj1, Physobj2), Time),
       some(Exists_Location,
            '$kolem_Fn_79'(Agent, Physobj1, Physobj2, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386

 /*  [happens(takeOffOf(Agent, Physobj1, Physobj2), Time), some(Exists_Location, '$kolem_Fn_79'(Agent, Physobj1, Physobj2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Agent, Exists_Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386
happens(takeOffOf(TakeoffofP_Num3_V16, A, Takeoffof15), Maptime13), some(Location14, '$kolem_Fn_79'(TakeoffofP_Num3_V16, A, Takeoffof15, Maptime13)) ->
    holds_at(at(TakeoffofP_Num3_V16, Location14), Maptime13).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386
reactive_rule([ happens(takeOffOf(TakeoffofP_Num3_V16,
				  A,
				  Takeoffof15),
			Maptime13),
		some(Location14,
		     '$kolem_Fn_79'(TakeoffofP_Num3_V16,
				    A,
				    Takeoffof15,
				    Maptime13))
	      ],
	      [ holds(loc_at(TakeoffofP_Num3_V16,
			     Location14),
		      Maptime13)
	      ]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386

 /*  holds_at(at(Physobj1, Exists_Location), Time) :-
       happens(takeOffOf(Agent, Physobj1, Physobj2), Time),
       some(Exists_Location,
            '$kolem_Fn_79'(Agent, Physobj1, Physobj2, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386

 /*  [happens(takeOffOf(Agent, Physobj1, Physobj2), Time), some(Exists_Location, '$kolem_Fn_79'(Agent, Physobj1, Physobj2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Physobj1, Exists_Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386
happens(takeOffOf(TakeoffofP_Num3_V20, A, Takeoffof19), Maptime17), some(Location18, '$kolem_Fn_79'(TakeoffofP_Num3_V20, A, Takeoffof19, Maptime17)) ->
    holds_at(at(A, Location18), Maptime17).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386
reactive_rule([ happens(takeOffOf(TakeoffofP_Num3_V20,
				  A,
				  Takeoffof19),
			Maptime17),
		some(Location18,
		     '$kolem_Fn_79'(TakeoffofP_Num3_V20,
				    A,
				    Takeoffof19,
				    Maptime17))
	      ],
	      [holds(loc_at(A,Location18),Maptime17)]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386

 /*  holds_at(at(Physobj2, Exists_Location), Time) :-
       happens(takeOffOf(Agent, Physobj1, Physobj2), Time),
       some(Exists_Location,
            '$kolem_Fn_79'(Agent, Physobj1, Physobj2, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386

 /*  [happens(takeOffOf(Agent, Physobj1, Physobj2), Time), some(Exists_Location, '$kolem_Fn_79'(Agent, Physobj1, Physobj2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Physobj2, Exists_Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386
happens(takeOffOf(TakeoffofP_Num3_V24, A, Takeoffof23), Maptime21), some(Location22, '$kolem_Fn_79'(TakeoffofP_Num3_V24, A, Takeoffof23, Maptime21)) ->
    holds_at(at(Takeoffof23, Location22), Maptime21).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:386
reactive_rule([ happens(takeOffOf(TakeoffofP_Num3_V24,
				  A,
				  Takeoffof23),
			Maptime21),
		some(Location22,
		     '$kolem_Fn_79'(TakeoffofP_Num3_V24,
				    A,
				    Takeoffof23,
				    Maptime21))
	      ],
	      [ holds(loc_at(Takeoffof23,Location22),
		      Maptime21)
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:388
%; A releases axiom states that if an agent places a physical
%; object on another physical object,
%; the first physical object's location will be released
%; from inertia:
% [agent,physobj1,physobj2,location,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:393
% Releases(PlaceOn(agent,physobj1,physobj2),
%          At(physobj1,location),
%          time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:395

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          releases(placeOn(Agent, Physobj1, Physobj2),
                   at(Physobj1, Location),
                   Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:395
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:395
releases(placeOn(PlaceonP_Num3_V,A,Placeon),
	 at(A,Location5),
	 Releases).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:395
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:395
releases(placeOn(PlaceonP_Num3_V,A,Placeon),
	 loc_at(A,Location5),
	 Releases).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:395
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:395
releases(placeOn(PlaceonP_Num3_V,A,Placeon),
	 loc_at(A,Location5),
	 Releases).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:397
%; A state constraint says that if a physical object is on
%; another physical object and the second physical object is
%; at a location, the first physical object is also at the location:
% [physobj1,physobj2,location,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:401
% HoldsAt(On(physobj1,physobj2),time) &
% HoldsAt(At(physobj2,location),time) ->
% HoldsAt(At(physobj1,location),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:403
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:403
holds_at(on(Physobj1, Physobj2), Time), holds_at(at(Physobj2, Location), Time) ->
    holds_at(at(Physobj1, Location), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:403
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:403
reactive_rule([ holds(on(Physobj1,Physobj2),Time),
		holds(loc_at(Physobj2,Location),Time)
	      ],
	      [holds(loc_at(Physobj1,Location),Time)]).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:405
% fluent Near(agent,object)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:406
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:406
fluent(near(agent,object)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:406
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:406
fluents([near/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:406
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:406
fluents([near/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:406
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:406
meta_argtypes(near(agent,object)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:406
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:406
meta_argtypes(near(agent,object)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:406
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:406
mpred_prop(near(agent,object),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:406
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:406
mpred_prop(near(agent,object),fluent).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:406
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:406
meta_argtypes(near(agent,object)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:406
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:406
meta_argtypes(near(agent,object)).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:406
% event WalkFromTo(agent,object,object)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:407
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:407
event(walkFromTo(agent,object,object)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:407
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:407
actions([walkFromTo/3]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:407
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:407
actions([walkFromTo/3]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:407
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:407
meta_argtypes(walkFromTo(agent,object,object)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:407
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:407
meta_argtypes(walkFromTo(agent,object,object)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:407
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:407
mpred_prop(walkFromTo(agent,object,object),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:407
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:407
mpred_prop(walkFromTo(agent,object,object),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:407
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:407
meta_argtypes(walkFromTo(agent,object,object)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:407
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:407
meta_argtypes(walkFromTo(agent,object,object)).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:407
% event WalkFrom(agent,object)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:408
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:408
event(walkFrom(agent,object)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:408
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:408
actions([walkFrom/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:408
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:408
actions([walkFrom/2]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:408
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:408
meta_argtypes(walkFrom(agent,object)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:408
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:408
meta_argtypes(walkFrom(agent,object)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:408
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:408
mpred_prop(walkFrom(agent,object),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:408
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:408
mpred_prop(walkFrom(agent,object),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:408
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:408
meta_argtypes(walkFrom(agent,object)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:408
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:408
meta_argtypes(walkFrom(agent,object)).

% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:408
% event RunFromTo(agent,object,object)
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:409
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:409
event(runFromTo(agent,object,object)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:409
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:409
actions([runFromTo/3]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:409
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:409
actions([runFromTo/3]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:409
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:409
meta_argtypes(runFromTo(agent,object,object)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:409
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:409
meta_argtypes(runFromTo(agent,object,object)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:409
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:409
mpred_prop(runFromTo(agent,object,object),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:409
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:409
mpred_prop(runFromTo(agent,object,object),event).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:409
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:409
meta_argtypes(runFromTo(agent,object,object)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:409
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:409
meta_argtypes(runFromTo(agent,object,object)).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:410
% [agent,object1,object2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:411
% Initiates(WalkFromTo(agent,object1,object2),
%           Near(agent,object2),
%           time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:413

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(walkFromTo(Agent, Object1, Object2),
                    near(Agent, Object2),
                    Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:413
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:413
initiates(walkFromTo(WalkfromtoP_Num3_V,_,Walkfromto),
	  near(WalkfromtoP_Num3_V,Walkfromto),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:413
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:413
initiated(happens(walkFromTo(WalkfromtoP_Num3_V,
			     _,
			     Walkfromto),
		  Maptime,
		  Happens),
	  near(WalkfromtoP_Num3_V,Walkfromto),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:415
% [agent,object1,object2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:416
% Terminates(WalkFromTo(agent,object1,object2),
%            Near(agent,object1),
%            time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:418

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(walkFromTo(Agent, Object1, Object2),
                     near(Agent, Object1),
                     Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:418
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:418
terminates(walkFromTo(WalkfromtoP_Num3_V,
		      Near,
		      Walkfromto),
	   near(WalkfromtoP_Num3_V,Near),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:418
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:418
terminated(happens(walkFromTo(WalkfromtoP_Num3_V,
			      Near,
			      Walkfromto),
		   Maptime,
		   Happens),
	   near(WalkfromtoP_Num3_V,Near),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:420
% [agent,object1,object2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:421
% Happens(WalkFromTo(agent,object1,object2),time) ->
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:422
% {location}% 
% HoldsAt(At(agent,location),time) &
% HoldsAt(At(object1,location),time) &
% HoldsAt(At(object2,location),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425

 /*  exists([Location],
    happens(walkFromTo(Agent, Object1, Object2), Time) ->
       holds_at(at(Agent, Location), Time),
       holds_at(at(Object1, Location), Time),
       holds_at(at(Object2, Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425

 /*  not(happens(walkFromTo(Agent, Object1, Object2), Time)) :-
       (   not(holds_at(at(Agent, Exists_Location), Time))
       ;   not(holds_at(at(Object1, Exists_Location), Time))
       ;   not(holds_at(at(Object2, Exists_Location), Time))
       ),
       some(Exists_Location,
            '$kolem_Fn_80'(Agent, Object1, Object2, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425

 /*  [(holds_at(neg(at(Agent, Exists_Location)), Time);holds_at(neg(at(Object1, Exists_Location)), Time);holds_at(neg(at(Object2, Exists_Location)), Time)), some(Exists_Location, '$kolem_Fn_80'(Agent, Object1, Object2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(walkFromTo(Agent, Object1, Object2),
                      Time))).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425
(holds_at(neg(at(Kolem_Fn_80P_Num4_V, Location6)), Time7);holds_at(neg(at(A, Location6)), Time7);holds_at(neg(at(Walkfromto, Location6)), Time7)), some(Location6, '$kolem_Fn_80'(Kolem_Fn_80P_Num4_V, A, Walkfromto, Time7)) ->
    not(happens(walkFromTo(Kolem_Fn_80P_Num4_V, A, Walkfromto),
                Time7)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425
 reactive_rule([  (at(not(loc_at(Kolem_Fn_80P_Num4_V, Location6)), Time7);at(not(loc_at(A, Location6)), Time7);at(not(loc_at(Walkfromto, Location6)), Time7)),
                   some(Location6,
                        '$kolem_Fn_80'(Kolem_Fn_80P_Num4_V,
                                       A,
                                       Walkfromto,
                                       Time7))
                 ],
                 [ not(happens(walkFromTo(Kolem_Fn_80P_Num4_V,
                                          A,
                                          Walkfromto),
                               Time7))
                 ]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425

 /*  holds_at(at(Agent, Exists_Location), Time) :-
       happens(walkFromTo(Agent, Object1, Object2), Time),
       some(Exists_Location,
            '$kolem_Fn_80'(Agent, Object1, Object2, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425

 /*  [happens(walkFromTo(Agent, Object1, Object2), Time), some(Exists_Location, '$kolem_Fn_80'(Agent, Object1, Object2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Agent, Exists_Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425
happens(walkFromTo(WalkfromtoP_Num3_V, A, Walkfromto12), Maptime), some(Location11, '$kolem_Fn_80'(WalkfromtoP_Num3_V, A, Walkfromto12, Maptime)) ->
    holds_at(at(WalkfromtoP_Num3_V, Location11), Maptime).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425
reactive_rule([ happens(walkFromTo(WalkfromtoP_Num3_V,
				   A,
				   Walkfromto12),
			Maptime),
		some(Location11,
		     '$kolem_Fn_80'(WalkfromtoP_Num3_V,
				    A,
				    Walkfromto12,
				    Maptime))
	      ],
	      [ holds(loc_at(WalkfromtoP_Num3_V,Location11),
		      Maptime)
	      ]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425

 /*  holds_at(at(Object1, Exists_Location), Time) :-
       happens(walkFromTo(Agent, Object1, Object2), Time),
       some(Exists_Location,
            '$kolem_Fn_80'(Agent, Object1, Object2, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425

 /*  [happens(walkFromTo(Agent, Object1, Object2), Time), some(Exists_Location, '$kolem_Fn_80'(Agent, Object1, Object2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Object1, Exists_Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425
happens(walkFromTo(WalkfromtoP_Num3_V17, A, Walkfromto16), Maptime14), some(Location15, '$kolem_Fn_80'(WalkfromtoP_Num3_V17, A, Walkfromto16, Maptime14)) ->
    holds_at(at(A, Location15), Maptime14).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425
reactive_rule([ happens(walkFromTo(WalkfromtoP_Num3_V17,
				   A,
				   Walkfromto16),
			Maptime14),
		some(Location15,
		     '$kolem_Fn_80'(WalkfromtoP_Num3_V17,
				    A,
				    Walkfromto16,
				    Maptime14))
	      ],
	      [holds(loc_at(A,Location15),Maptime14)]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425

 /*  holds_at(at(Object2, Exists_Location), Time) :-
       happens(walkFromTo(Agent, Object1, Object2), Time),
       some(Exists_Location,
            '$kolem_Fn_80'(Agent, Object1, Object2, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425

 /*  [happens(walkFromTo(Agent, Object1, Object2), Time), some(Exists_Location, '$kolem_Fn_80'(Agent, Object1, Object2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Object2, Exists_Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425
happens(walkFromTo(WalkfromtoP_Num3_V21, A, Walkfromto20), Maptime18), some(Location19, '$kolem_Fn_80'(WalkfromtoP_Num3_V21, A, Walkfromto20, Maptime18)) ->
    holds_at(at(Walkfromto20, Location19), Maptime18).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:425
reactive_rule([ happens(walkFromTo(WalkfromtoP_Num3_V21,
				   A,
				   Walkfromto20),
			Maptime18),
		some(Location19,
		     '$kolem_Fn_80'(WalkfromtoP_Num3_V21,
				    A,
				    Walkfromto20,
				    Maptime18))
	      ],
	      [ holds(loc_at(Walkfromto20,Location19),
		      Maptime18)
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:427
% [agent,object1,object2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:428
% Initiates(RunFromTo(agent,object1,object2),
%           Near(agent,object2),
%           time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:430

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(runFromTo(Agent, Object1, Object2),
                    near(Agent, Object2),
                    Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:430
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:430
initiates(runFromTo(RunfromtoP_Num3_V,_,Runfromto),
	  near(RunfromtoP_Num3_V,Runfromto),
	  Initiates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:430
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:430
initiated(happens(runFromTo(RunfromtoP_Num3_V,
			    _,
			    Runfromto),
		  Maptime,
		  Happens),
	  near(RunfromtoP_Num3_V,Runfromto),
	  []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:432
% [agent,object1,object2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:433
% Terminates(RunFromTo(agent,object1,object2),
%            Near(agent,object1),
%            time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:435

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(runFromTo(Agent, Object1, Object2),
                     near(Agent, Object1),
                     Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:435
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:435
terminates(runFromTo(RunfromtoP_Num3_V,
		     Near,
		     Runfromto),
	   near(RunfromtoP_Num3_V,Near),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:435
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:435
terminated(happens(runFromTo(RunfromtoP_Num3_V,
			     Near,
			     Runfromto),
		   Maptime,
		   Happens),
	   near(RunfromtoP_Num3_V,Near),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:437
% [agent,object1,object2,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:438
% Happens(RunFromTo(agent,object1,object2),time) ->
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:439
% {location}% 
% HoldsAt(At(agent,location),time) &
% HoldsAt(At(object1,location),time) &
% HoldsAt(At(object2,location),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442

 /*  exists([Location],
    happens(runFromTo(Agent, Object1, Object2), Time) ->
       holds_at(at(Agent, Location), Time),
       holds_at(at(Object1, Location), Time),
       holds_at(at(Object2, Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442

 /*  not(happens(runFromTo(Agent, Object1, Object2), Time)) :-
       (   not(holds_at(at(Agent, Exists_Location), Time))
       ;   not(holds_at(at(Object1, Exists_Location), Time))
       ;   not(holds_at(at(Object2, Exists_Location), Time))
       ),
       some(Exists_Location,
            '$kolem_Fn_81'(Agent, Object1, Object2, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442

 /*  [(holds_at(neg(at(Agent, Exists_Location)), Time);holds_at(neg(at(Object1, Exists_Location)), Time);holds_at(neg(at(Object2, Exists_Location)), Time)), some(Exists_Location, '$kolem_Fn_81'(Agent, Object1, Object2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(runFromTo(Agent, Object1, Object2),
                      Time))).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442
(holds_at(neg(at(Kolem_Fn_81P_Num4_V, Location6)), Time7);holds_at(neg(at(A, Location6)), Time7);holds_at(neg(at(Runfromto, Location6)), Time7)), some(Location6, '$kolem_Fn_81'(Kolem_Fn_81P_Num4_V, A, Runfromto, Time7)) ->
    not(happens(runFromTo(Kolem_Fn_81P_Num4_V, A, Runfromto),
                Time7)).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442
 reactive_rule([  (at(not(loc_at(Kolem_Fn_81P_Num4_V, Location6)), Time7);at(not(loc_at(A, Location6)), Time7);at(not(loc_at(Runfromto, Location6)), Time7)),
                   some(Location6,
                        '$kolem_Fn_81'(Kolem_Fn_81P_Num4_V,
                                       A,
                                       Runfromto,
                                       Time7))
                 ],
                 [ not(happens(runFromTo(Kolem_Fn_81P_Num4_V,
                                         A,
                                         Runfromto),
                               Time7))
                 ]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442

 /*  holds_at(at(Agent, Exists_Location), Time) :-
       happens(runFromTo(Agent, Object1, Object2), Time),
       some(Exists_Location,
            '$kolem_Fn_81'(Agent, Object1, Object2, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442

 /*  [happens(runFromTo(Agent, Object1, Object2), Time), some(Exists_Location, '$kolem_Fn_81'(Agent, Object1, Object2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Agent, Exists_Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442
happens(runFromTo(RunfromtoP_Num3_V, A, Runfromto12), Maptime), some(Location11, '$kolem_Fn_81'(RunfromtoP_Num3_V, A, Runfromto12, Maptime)) ->
    holds_at(at(RunfromtoP_Num3_V, Location11), Maptime).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442
reactive_rule([ happens(runFromTo(RunfromtoP_Num3_V,
				  A,
				  Runfromto12),
			Maptime),
		some(Location11,
		     '$kolem_Fn_81'(RunfromtoP_Num3_V,
				    A,
				    Runfromto12,
				    Maptime))
	      ],
	      [ holds(loc_at(RunfromtoP_Num3_V,Location11),
		      Maptime)
	      ]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442

 /*  holds_at(at(Object1, Exists_Location), Time) :-
       happens(runFromTo(Agent, Object1, Object2), Time),
       some(Exists_Location,
            '$kolem_Fn_81'(Agent, Object1, Object2, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442

 /*  [happens(runFromTo(Agent, Object1, Object2), Time), some(Exists_Location, '$kolem_Fn_81'(Agent, Object1, Object2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Object1, Exists_Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442
happens(runFromTo(RunfromtoP_Num3_V17, A, Runfromto16), Maptime14), some(Location15, '$kolem_Fn_81'(RunfromtoP_Num3_V17, A, Runfromto16, Maptime14)) ->
    holds_at(at(A, Location15), Maptime14).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442
reactive_rule([ happens(runFromTo(RunfromtoP_Num3_V17,
				  A,
				  Runfromto16),
			Maptime14),
		some(Location15,
		     '$kolem_Fn_81'(RunfromtoP_Num3_V17,
				    A,
				    Runfromto16,
				    Maptime14))
	      ],
	      [holds(loc_at(A,Location15),Maptime14)]).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442

 /*  holds_at(at(Object2, Exists_Location), Time) :-
       happens(runFromTo(Agent, Object1, Object2), Time),
       some(Exists_Location,
            '$kolem_Fn_81'(Agent, Object1, Object2, Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442

 /*  [happens(runFromTo(Agent, Object1, Object2), Time), some(Exists_Location, '$kolem_Fn_81'(Agent, Object1, Object2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(at(Object2, Exists_Location), Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442
happens(runFromTo(RunfromtoP_Num3_V21, A, Runfromto20), Maptime18), some(Location19, '$kolem_Fn_81'(RunfromtoP_Num3_V21, A, Runfromto20, Maptime18)) ->
    holds_at(at(Runfromto20, Location19), Maptime18).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:442
reactive_rule([ happens(runFromTo(RunfromtoP_Num3_V21,
				  A,
				  Runfromto20),
			Maptime18),
		some(Location19,
		     '$kolem_Fn_81'(RunfromtoP_Num3_V21,
				    A,
				    Runfromto20,
				    Maptime18))
	      ],
	      [ holds(loc_at(Runfromto20,Location19),
		      Maptime18)
	      ]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:444
% [agent,object,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:445
% Terminates(WalkFrom(agent,object),
%            Near(agent,object),
%            time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:447

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(walkFrom(Agent, Object),
                     near(Agent, Object),
                     Time)).
 */
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:447
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:447
terminates(walkFrom(A,Walkfrom),
	   near(A,Walkfrom),
	   Terminates).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:447
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:447
terminated(happens(walkFrom(A,Walkfrom),
		   Maptime,
		   Happens),
	   near(A,Walkfrom),
	   []).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:449
% [agent,object,location,door,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:450
% HoldsAt(Near(agent,object),time) &
% HoldsAt(At(agent,location),time) &
% HoldsAt(At(object,location),time) &
% Side1(door)=location &
% Happens(WalkThroughDoor12(agent,door),time) ->
% Happens(WalkFrom(agent,object),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:455
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:455
holds_at(near(Agent, Object), Time), holds_at(at(Agent, Location), Time), holds_at(at(Object, Location), Time), equals(side1(Door), Location), happens(walkThroughDoor12(Agent, Door), Time) ->
    happens(walkFrom(Agent, Object), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:455
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:455
reactive_rule([ holds(near(Agent,Object),Time),
		holds(loc_at(Agent,Location),Time),
		holds(loc_at(Object,Location),Time),
		equals(side1(Door),Location),
		happens(walkThroughDoor12(Agent,Door),
			Time)
	      ],
	      [happens(walkFrom(Agent,Object),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:457
% [agent,object,location,door,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:458
% HoldsAt(Near(agent,object),time) &
% HoldsAt(At(agent,location),time) &
% HoldsAt(At(object,location),time) &
% Side2(door)=location &
% Happens(WalkThroughDoor21(agent,door),time) ->
% Happens(WalkFrom(agent,object),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:463
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:463
holds_at(near(Agent, Object), Time), holds_at(at(Agent, Location), Time), holds_at(at(Object, Location), Time), equals(side2(Door), Location), happens(walkThroughDoor21(Agent, Door), Time) ->
    happens(walkFrom(Agent, Object), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:463
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:463
reactive_rule([ holds(near(Agent,Object),Time),
		holds(loc_at(Agent,Location),Time),
		holds(loc_at(Object,Location),Time),
		equals(side2(Door),Location),
		happens(walkThroughDoor21(Agent,Door),
			Time)
	      ],
	      [happens(walkFrom(Agent,Object),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:465
% [agent,object,room,staircase,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:466
% HoldsAt(Near(agent,object),time) &
% HoldsAt(At(agent,room),time) &
% HoldsAt(At(object,room),time) &
% Side1(staircase)=room &
% Happens(WalkUpStaircase(agent,staircase),time) ->
% Happens(WalkFrom(agent,object),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:471
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:471
holds_at(near(Agent, Object), Time), holds_at(at(Agent, Room), Time), holds_at(at(Object, Room), Time), equals(side1(Staircase), Room), happens(walkUpStaircase(Agent, Staircase), Time) ->
    happens(walkFrom(Agent, Object), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:471
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:471
reactive_rule([ holds(near(Agent,Object),Time),
		holds(loc_at(Agent,Room),Time),
		holds(loc_at(Object,Room),Time),
		equals(side1(Staircase),Room),
		happens(walkUpStaircase(Agent,Staircase),
			Time)
	      ],
	      [happens(walkFrom(Agent,Object),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:473
% [agent,object,room,staircase,time]
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:474
% HoldsAt(Near(agent,object),time) &
% HoldsAt(At(agent,room),time) &
% HoldsAt(At(object,room),time) &
% Side2(staircase)=room &
% Happens(WalkDownStaircase(agent,staircase),time) ->
% Happens(WalkFrom(agent,object),time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:479
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:479
holds_at(near(Agent, Object), Time), holds_at(at(Agent, Room), Time), holds_at(at(Object, Room), Time), equals(side2(Staircase), Room), happens(walkDownStaircase(Agent, Staircase), Time) ->
    happens(walkFrom(Agent, Object), Time).
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:479
% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:479
reactive_rule([ holds(near(Agent,Object),Time),
		holds(loc_at(Agent,Room),Time),
		holds(loc_at(Object,Room),Time),
		equals(side2(Staircase),Room),
		happens(walkDownStaircase(Agent,Staircase),
			Time)
	      ],
	      [happens(walkFrom(Agent,Object),Time)]).


% From /pack/logicmoo_ec/ext/ec_sources/ecnet/OTSpace.e:481
%; End of file.
