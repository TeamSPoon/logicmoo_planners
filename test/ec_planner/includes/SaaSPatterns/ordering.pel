:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(pfc).
% Wed, 01 Apr 2020 20:00:41 GMT
% From ../includes/SaaSPatterns/ordering.pel:4
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/includes/SaaSPatterns/input.e',5).

 /*  loading(load_e_pl,
   	'/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/includes/SaaSPatterns/ordering.e').
 */


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/includes/SaaSPatterns/ordering.e:0
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/includes/SaaSPatterns/input.e',5).
% [rule,time]
 % Happens(E_MatchRuleParametters(rule), time) | Happens(E_DontMatchRuleParametters(rule), time) -> time = 0.
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/includes/SaaSPatterns/ordering.e',1).

 /*  happens(e_matchRuleParametters(Rule), Time);happens(e_dontMatchRuleParametters(Rule), Time) ->
       equals(Time, 0).
 */

 /*  not(happens(e_matchRuleParametters(Rule), Time)) :-
       not(equals(Time, 0)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/includes/SaaSPatterns/ordering.e',1).

 /*  [not(equals(Time, 0))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(e_matchRuleParametters(Rule), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/includes/SaaSPatterns/ordering.e',1).
axiom(not(happens(e_matchRuleParametters(Rule), Time)),
    [not(equals(Time, 0))]).

 /*  not(happens(e_dontMatchRuleParametters(Rule), Time)) :-
       not(equals(Time, 0)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/includes/SaaSPatterns/ordering.e',1).

 /*  [not(equals(Time, 0))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(e_dontMatchRuleParametters(Rule), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/includes/SaaSPatterns/ordering.e',1).
axiom(not(happens(e_dontMatchRuleParametters(Rule), Time)),
    [not(equals(Time, 0))]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/includes/SaaSPatterns/ordering.e:2
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/includes/SaaSPatterns/ordering.e',3).
% [rule,time]
 % Happens(EDeny(rule), time) | Happens(Epermit(rule), time) | Happens(ERuleDoesNotApply(rule), time) -> time = 1.

 /*  happens(eDeny(Rule), Time);happens(epermit(Rule), Time);happens(eRuleDoesNotApply(Rule), Time) ->
       equals(Time, 1).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/includes/SaaSPatterns/ordering.e',3).

 /*  not(happens(eDeny(Rule), Time)) :-
       not(equals(Time, 1)).
 */

 /*  [not(equals(Time, 1))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(eDeny(Rule), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/includes/SaaSPatterns/ordering.e',3).
axiom(not(happens(eDeny(Rule), Time)),
    [not(equals(Time, 1))]).

 /*  not(happens(epermit(Rule), Time)) :-
       not(equals(Time, 1)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/includes/SaaSPatterns/ordering.e',3).

 /*  [not(equals(Time, 1))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(epermit(Rule), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/includes/SaaSPatterns/ordering.e',3).
axiom(not(happens(epermit(Rule), Time)),
    [not(equals(Time, 1))]).

 /*  not(happens(eRuleDoesNotApply(Rule), Time)) :-
       not(equals(Time, 1)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/includes/SaaSPatterns/ordering.e',3).

 /*  [not(equals(Time, 1))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(eRuleDoesNotApply(Rule), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/includes/SaaSPatterns/ordering.e',3).
axiom(not(happens(eRuleDoesNotApply(Rule), Time)),
    [not(equals(Time, 1))]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/includes/SaaSPatterns/ordering.e:4
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/includes/SaaSPatterns/ordering.e',5).
%;[policy,time] Happens(E_policyPermit(policy), time) | Happens(E_policyDeny(policy), time) | Happens(E_PolicyDoesNotApply(policy),time) -> time = 2.
%;[policyset,time] Happens(E_policysetPermit(policyset), time) | Happens(E_policysetDeny(policyset), time) | Happens(E_policysetDontApply(policyset),time) -> time = 3.
