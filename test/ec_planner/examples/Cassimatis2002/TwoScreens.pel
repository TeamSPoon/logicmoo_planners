:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(pfc).
% Wed, 01 Apr 2020 20:00:28 GMT
% From ../examples/Cassimatis2002/TwoScreens.pel:4
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/PolySpace.e',116).

 /*  loading(load_e_pl,
   	'/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e').
 */
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @phdthesis{Cassimatis:2002,
%;   author = "Nicholas L. Cassimatis",
%;   year = "2002",
%;   title = "Polyscheme: A Cognitive Architecture for Integrating Multiple Representation and Inference Schemes",
%;   address = "Cambridge, MA",
%;   school = "Program in Media Arts and Sciences, School of Architecture and Planning, Massachusetts Institute of Technology",
%; }
%;

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:19
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',20).
% load foundations/Root.e
:- load_e('foundations/Root.e', changed).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:20
% load foundations/EC.e
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',20).
:- load_e('foundations/EC.e', changed).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:21
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',22).
% load examples/Cassimatis2002/PolySpace.e
:- load_e('examples/Cassimatis2002/PolySpace.e', changed).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:23
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',24).
% grid G1
==> t(grid,g1).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:24
% object X,Y,Screen1,Screen2
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',24).
==> t(object,x).
==> t(object,y).
==> t(object,screen1).
==> t(object,screen2).
%; perceptions:


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:27
% Shape(X,Round).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',27).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], shape(x, round)).
 */
axiom(shape(x, round),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:28
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',29).
% Color(X,Red).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], color(x, red)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',29).
axiom(color(x, red),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:29
% Shape(Y,Round).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',29).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], shape(y, round)).
 */
axiom(shape(y, round),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:30
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',31).
% Color(Y,Red).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], color(y, red)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',31).
axiom(color(y, red),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:31
% Shape(Screen1,Square).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',31).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], shape(screen1, square)).
 */
axiom(shape(screen1, square),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:32
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',33).
% Color(Screen1,Green).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], color(screen1, green)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',33).
axiom(color(screen1, green),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:33
% Shape(Screen2,Square).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',33).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], shape(screen2, square)).
 */
axiom(shape(screen2, square),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:34
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',35).
% Color(Screen2,Green).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], color(screen2, green)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',35).
axiom(color(screen2, green),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:35
% [time]
 % HoldsAt(Location(G1,Screen1,2,0),time).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',35).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(location(g1, screen1, 2, 0), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',35).
axiom(holds_at(location(g1, screen1, 2, 0), Time),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:36
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',37).
% [time]
 % HoldsAt(Location(G1,Screen2,4,0),time).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(location(g1, screen2, 4, 0), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',37).
axiom(holds_at(location(g1, screen2, 4, 0), Time),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:37
% HoldsAt(Location(G1,X,1,1),0).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',37).

 /*  [] ->
       ta(Ta_Param,
          tvs1=[start],
          tvs2=[start],
          holds_at(location(g1, x, 1, 1), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',37).
axiom(holds_at(location(g1, x, 1, 1), start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:38
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',39).
% HoldsAt(Location(G1,Y,5,1),4).

 /*  [b(start, Start4), toffset(start, 4, Start4), ignore(start+4==Start4)] ->
       ta(Ta_Param,
          tvs1=[start+4],
          tvs2=[Start4, start],
          holds_at(location(g1, y, 5, 1), Start4)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',39).
axiom(holds_at(location(g1, y, 5, 1), Start4),
    [b(start, Start4), toffset(start, 4, Start4)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:40
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',41).
% [xcoord,ycoord,time]
% xcoord!=% 2 & xcoord!=4 & !(xcoord=1 & ycoord=1 & time=0) ->
% !HoldsAt(Location(G1,X,xcoord,ycoord),time) |
% xcoord=5 & ycoord=1 & time=4 & Equal(X,Y).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:43
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',41).

 /*  diff(Xcoord, 2), diff(Xcoord, 4), not((equals(Xcoord, 1), equals(Ycoord, 1), equals(Time, 0))) ->
       (   holds_at(neg(location(g1, x, Xcoord, Ycoord)), Time)
       ;   equals(Xcoord, 5),
           equals(Ycoord, 1),
           equals(Time, 4),
           equal(x, y)
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',41).

 /*  holds_at(neg(location(g1, x, Xcoord, Ycoord)), Time) :-
       (   not(equals(Xcoord, 5))
       ;   not(equals(Ycoord, 1))
       ;   not(equals(Time, 4))
       ;   not(equal(x, y))
       ),
       diff(Xcoord, 2),
       diff(Xcoord, 4),
       (   not(equals(Xcoord, 1))
       ;   not(equals(Ycoord, 1))
       ;   not(equals(Time, 0))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',41).

 /*  [(not(equals(Xcoord, 5));not(equals(Ycoord, 1));not(equals(Time, 4));not(equal(x, y))), diff(Xcoord, 2), diff(Xcoord, 4),  (not(equals(Xcoord, 1));not(equals(Ycoord, 1));not(equals(Time, 0)))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(location(g1, x, Xcoord, Ycoord)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',41).
axiom(holds_at(neg(location(g1, x, Xcoord, Ycoord)), Time),
   
    [  (not(equals(Xcoord, 5));not(equals(Ycoord, 1));not(equals(Time, 4));not(equal(x, y))),
      diff(Xcoord, 2),
      diff(Xcoord, 4),
       (not(equals(Xcoord, 1));not(equals(Ycoord, 1));not(equals(Time, 0)))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',41).

 /*  equal(x, y) :-
       not(holds_at(neg(location(g1, x, Xcoord, Ycoord)), Time)),
       diff(Xcoord, 2),
       diff(Xcoord, 4),
       (   not(equals(Xcoord, 1))
       ;   not(equals(Ycoord, 1))
       ;   not(equals(Time, 0))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',41).

 /*  [holds_at(location(g1, x, Xcoord, Ycoord), Time), diff(Xcoord, 2), diff(Xcoord, 4),  (not(equals(Xcoord, 1));not(equals(Ycoord, 1));not(equals(Time, 0)))] ->
       ta(Time, tvs1=[Time], tvs2=[Time], equal(x, y)).
 */
axiom(equal(x, y),
   
    [ holds_at(location(g1, x, Xcoord, Ycoord), Time),
      diff(Xcoord, 2),
      diff(Xcoord, 4),
       (not(equals(Xcoord, 1));not(equals(Ycoord, 1));not(equals(Time, 0)))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:45
% [xcoord,ycoord,time]
% xcoord!=% 2 & xcoord!=4 & !(xcoord=5 & ycoord=1 & time=4) ->
% !HoldsAt(Location(G1,Y,xcoord,ycoord),time) |
% xcoord=1 & ycoord=1 & time=0 & Equal(X,Y).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:48
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',47).

 /*  diff(Xcoord, 2), diff(Xcoord, 4), not((equals(Xcoord, 5), equals(Ycoord, 1), equals(Time, 4))) ->
       (   holds_at(neg(location(g1, y, Xcoord, Ycoord)), Time)
       ;   equals(Xcoord, 1),
           equals(Ycoord, 1),
           equals(Time, 0),
           equal(x, y)
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',47).

 /*  holds_at(neg(location(g1, y, Xcoord, Ycoord)), Time) :-
       (   not(equals(Xcoord, 1))
       ;   not(equals(Ycoord, 1))
       ;   not(equals(Time, 0))
       ;   not(equal(x, y))
       ),
       diff(Xcoord, 2),
       diff(Xcoord, 4),
       (   not(equals(Xcoord, 5))
       ;   not(equals(Ycoord, 1))
       ;   not(equals(Time, 4))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',47).

 /*  [(not(equals(Xcoord, 1));not(equals(Ycoord, 1));not(equals(Time, 0));not(equal(x, y))), diff(Xcoord, 2), diff(Xcoord, 4),  (not(equals(Xcoord, 5));not(equals(Ycoord, 1));not(equals(Time, 4)))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(location(g1, y, Xcoord, Ycoord)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',47).
axiom(holds_at(neg(location(g1, y, Xcoord, Ycoord)), Time),
   
    [  (not(equals(Xcoord, 1));not(equals(Ycoord, 1));not(equals(Time, 0));not(equal(x, y))),
      diff(Xcoord, 2),
      diff(Xcoord, 4),
       (not(equals(Xcoord, 5));not(equals(Ycoord, 1));not(equals(Time, 4)))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',47).

 /*  equal(x, y) :-
       not(holds_at(neg(location(g1, y, Xcoord, Ycoord)), Time)),
       diff(Xcoord, 2),
       diff(Xcoord, 4),
       (   not(equals(Xcoord, 5))
       ;   not(equals(Ycoord, 1))
       ;   not(equals(Time, 4))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',47).

 /*  [holds_at(location(g1, y, Xcoord, Ycoord), Time), diff(Xcoord, 2), diff(Xcoord, 4),  (not(equals(Xcoord, 5));not(equals(Ycoord, 1));not(equals(Time, 4)))] ->
       ta(Time, tvs1=[Time], tvs2=[Time], equal(x, y)).
 */
axiom(equal(x, y),
   
    [ holds_at(location(g1, y, Xcoord, Ycoord), Time),
      diff(Xcoord, 2),
      diff(Xcoord, 4),
       (not(equals(Xcoord, 5));not(equals(Ycoord, 1));not(equals(Time, 4)))
    ]).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:50
% range time 0 4
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',50).
==> range(time,0,4).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:51
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',52).
% range xcoord 0 5
==> range(xcoord,0,5).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:52
% range ycoord 0 1
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',52).
==> range(ycoord,0,1).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e:53
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Cassimatis2002/TwoScreens.e',54).
% range offset 0 0
==> range(offset,0,0).
%; End of file.
