:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(pfc).
% Wed, 01 Apr 2020 20:00:38 GMT
% From ../examples/ReiterCriscuolo1981/NixonDiamond2.pel:4
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond1.e',62).

 /*  loading(load_e_pl,
   	'/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e').
 */
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; conflicting defaults: method (D)
%; \fullciteA[p. 274]{ReiterCriscuolo:1981}
%; \fullciteA[pp. 98--99]{McCarthy:1986}
%; \fullciteA[p. 18]{BrewkaDixKonolige:1997}
%;
%; @inproceedings{ReiterCriscuolo:1981,
%;   author = "Raymond Reiter and Giovanni Criscuolo",
%;   year = "1981",
%;   title = "On interacting defaults",
%;   booktitle = "\uppercase{P}roceedings of the \uppercase{S}eventh \uppercase{I}nternational \uppercase{J}oint \uppercase{C}onference on \uppercase{A}rtificial \uppercase{I}ntelligence",
%;   volume = "1",
%;   pages = "270--276",
%;   address = "Los Altos, CA",
%;   publisher = "William Kaufmann",
%; }
%;
%; @article{McCarthy:1986,
%;   author = "John McCarthy",
%;   year = "1986",
%;   title = "Applications of circumscription to formalizing common-sense knowledge",
%;   journal = "Artificial Intelligence",
%;   volume = "28",
%;   pages = "89--116".
%; }
%;
%; @book{BrewkaDixKonolige:1997,
%;   author = "Gerhard Brewka and J{\"{u}}rgen Dix and Kurt Konolige",
%;   year = "1997",
%;   title = "Nonmonotonic Reasoning: An Overview",
%;   address = "Stanford, CA",
%;   publisher = "CSLI",
%; }
%;

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e:44
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',45).
% load foundations/Root.e
:- load_e('foundations/Root.e', changed).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e:45
% load foundations/EC.e
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',45).
:- load_e('foundations/EC.e', changed).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e:47
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',48).
% sort x
==> sort(x).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e:49
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',50).
% predicate Republican(x)
predicate(republican(x)).
==> mpred_prop(republican(x),predicate).
==> meta_argtypes(republican(x)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e:50
% predicate Quaker(x)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',50).
predicate(quaker(x)).
==> mpred_prop(quaker(x),predicate).
==> meta_argtypes(quaker(x)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e:51
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',52).
% predicate Pacifist(x)
predicate(pacifist(x)).
==> mpred_prop(pacifist(x),predicate).
==> meta_argtypes(pacifist(x)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e:52
% predicate Ab1(x)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',52).
predicate(ab1(x)).
==> mpred_prop(ab1(x),predicate).
==> meta_argtypes(ab1(x)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e:53
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',54).
% predicate Ab2(x)
predicate(ab2(x)).
==> mpred_prop(ab2(x),predicate).
==> meta_argtypes(ab2(x)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e:55
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',56).
% x John
==> t(x,john).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e:57
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',58).
% Republican(John).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], republican(john)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',58).
axiom(republican(john),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e:58
% Quaker(John).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',58).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], quaker(john)).
 */
axiom(quaker(john),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e:60
% [x]
 % Republican(x) & !Ab1(x) -> !Pacifist(x).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',60).

 /*  republican(X), not(ab1(X, Ab1_Ret)) ->
       not(pacifist(X)).
 */

 /*  not(pacifist(X)) :-
       republican(X),
       not(ab1(X, Ab1_Ret)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',60).

 /*  [republican(X), not(ab1(X, Ab1_Ret))] ->
       ta(Ta_Param, tvs1=[], tvs2=[], not(pacifist(X))).
 */
axiom(not(pacifist(X)),
    [republican(X), not(ab1(X, Ab1_Ret))]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',60).

 /*  not(republican(X)) :-
       not(ab1(X, Ab1_Ret)),
       pacifist(X).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',60).

 /*  [not(ab1(X, Ab1_Ret)), pacifist(X)] ->
       ta(Ta_Param3, tvs1=[], tvs2=[], not(republican(X))).
 */
axiom(not(republican(X)),
    [not(ab1(X, Ab1_Ret)), pacifist(X)]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',60).

 /*  ab1(X, Ab1_Ret) :-
       republican(X),
       pacifist(X).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',60).

 /*  [republican(X), pacifist(X)] ->
       ta(Ta_Param4, tvs1=[], tvs2=[], ab1(X, Ab1_Ret)).
 */
axiom(ab1(X, Ab1_Ret),
    [republican(X), pacifist(X)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e:61
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',62).
% [x]
 % Quaker(x) & !Ab2(x) -> Pacifist(x).

 /*  quaker(X), not(ab2(X, Ab2_Ret)) ->
       pacifist(X).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',62).

 /*  pacifist(X) :-
       quaker(X),
       not(ab2(X, Ab2_Ret)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',62).

 /*  [quaker(X), not(ab2(X, Ab2_Ret))] ->
       ta(Ta_Param, tvs1=[], tvs2=[], pacifist(X)).
 */
axiom(pacifist(X),
    [quaker(X), not(ab2(X, Ab2_Ret))]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',62).

 /*  not(quaker(X)) :-
       not(ab2(X, Ab2_Ret)),
       not(pacifist(X)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',62).

 /*  [not(ab2(X, Ab2_Ret)), not(pacifist(X))] ->
       ta(Ta_Param3, tvs1=[], tvs2=[], not(quaker(X))).
 */
axiom(not(quaker(X)),
    [not(ab2(X, Ab2_Ret)), not(pacifist(X))]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',62).

 /*  ab2(X, Ab2_Ret) :-
       quaker(X),
       not(pacifist(X)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',62).

 /*  [quaker(X), not(pacifist(X))] ->
       ta(Ta_Param4, tvs1=[], tvs2=[], ab2(X, Ab2_Ret)).
 */
axiom(ab2(X, Ab2_Ret),
    [quaker(X), not(pacifist(X))]).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e:62
% Theta: 
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',62).
next_axiom_uses(theta).
 


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e:62
% [x]
 % Republican(x) -> Ab2(x).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',62).

 /*  axiom_uses(theta) ->
       ( republican(X)->ab2(X, Ab2_Ret)
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',62).

 /*  ab2(X, Ab2_Ret) :-
       republican(X),
       axiom_uses(theta).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',62).

 /*  fix_axiom_head(Axiom_head_Ret) ->
       [axiom_uses(theta), ->, axiom_uses(theta, Axiom_head_Ret)].
 */

 /*  [republican(X), axiom_uses(theta, Axiom_head_Ret)] ->
       ta(Axiom_head_Ret, tvs1=[], tvs2=[], ab2(X, Ab2_Ret)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',62).
axiom(ab2(X, Ab2_Ret),
    [republican(X), axiom_uses(theta, Axiom_head_Ret)]).

 /*  not(republican(X)) :-
       not(ab2(X, Ab2_Ret)),
       axiom_uses(theta).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',62).

 /*  fix_axiom_head(Axiom_head_Ret3) ->
       [axiom_uses(theta), ->, axiom_uses(theta, Axiom_head_Ret3)].
 */

 /*  [not(ab2(X, Ab2_Ret)), axiom_uses(theta, Axiom_head_Ret3)] ->
       ta(Axiom_head_Ret3, tvs1=[], tvs2=[], not(republican(X))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',62).
axiom(not(republican(X)),
    [not(ab2(X, Ab2_Ret)), axiom_uses(theta, Axiom_head_Ret3)]).

 /*  not(axiom_uses(theta)) :-
       not(ab2(X, Ab2_Ret)),
       republican(X).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',62).

 /*  fix_axiom_head(Axiom_head_Ret4) ->
       [not(axiom_uses(theta)), ->, not(axiom_uses(theta, Axiom_head_Ret4))].
 */

 /*  [not(ab2(X, Ab2_Ret)), republican(X)] ->
       ta(Axiom_head_Ret4,
          tvs1=[],
          tvs2=[],
          not(axiom_uses(theta, Axiom_head_Ret4))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',62).
axiom(not(axiom_uses(theta, Axiom_head_Ret4)),
    [not(ab2(X, Ab2_Ret)), republican(X)]).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e:64
% range time 0 0
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',64).
==> range(time,0,0).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e:65
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',66).
% range offset 1 1
==> range(offset,1,1).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e:67
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',68).
% completion Theta Ab1
==> completion(theta).
==> completion(ab1).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e:68
% completion Theta Ab2
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/ReiterCriscuolo1981/NixonDiamond2.e',68).
==> completion(theta).
==> completion(ab2).
%; End of file.
