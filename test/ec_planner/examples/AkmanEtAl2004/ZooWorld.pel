:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(pfc).
% Wed, 01 Apr 2020 20:00:18 GMT
% From ../examples/AkmanEtAl2004/ZooWorld.pel:4
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooTest6.e',52).

 /*  loading(load_e_pl,
   	'/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e').
 */
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Akman:2004,
%;   author = "Varol Akman and Selim T. Erdogan and Joohyung Lee and Vladimir Lifschitz and Hudson Turner",
%;   year = "2004",
%;   title = "Representing the zoo world and the traffic world in the language of the causal calculator",
%;   journal = "Artificial Intelligence",
%;   volume = "153",
%;   pages = "105--140",
%; }
%;

% sort position: integer
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',21).
==> subsort(position,integer).

% sort location
==> sort(location).

% sort cage: location
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',23).
==> subsort(cage,location).

% sort gate
==> sort(gate).

% sort animal
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',25).
==> sort(animal).

% sort elephant: animal
==> subsort(elephant,animal).

% sort horse: animal
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',27).
==> subsort(horse,animal).

% sort dog: animal
==> subsort(dog,animal).

% sort human: animal
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',29).
==> subsort(human,animal).

% sort species
==> sort(species).

% function Loc(position): location
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',32).
function(loc(position)).
==> mpred_prop(loc(position),function).
==> meta_argtypes(loc(position)).
predicate(locPred(position,location)).
==> mpred_prop(locPred(position,location),predicate).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',32).
==> meta_argtypes(locPred(position,location)).

 /*  fix_axiom_head(Time) ->
       
       [ functional_predicate(loc, locPred),
          (->),
         holds_at(functional_predicate(loc, locPred), Time)
       ].
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',32).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(functional_predicate(loc, locPred), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',32).
axiom(holds_at(functional_predicate(loc, locPred), Time),
    []).
==> resultIsa(loc,location).

% function Side1(gate): position
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',32).
function(side1(gate)).
==> mpred_prop(side1(gate),function).
==> meta_argtypes(side1(gate)).
predicate(side1Pred(gate,position)).
==> mpred_prop(side1Pred(gate,position),predicate).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',32).
==> meta_argtypes(side1Pred(gate,position)).

 /*  fix_axiom_head(Time) ->
       
       [ functional_predicate(side1, side1Pred),
          (->),
         holds_at(functional_predicate(side1, side1Pred), Time)
       ].
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',32).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(functional_predicate(side1, side1Pred), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',32).
axiom(holds_at(functional_predicate(side1, side1Pred), Time),
    []).
==> resultIsa(side1,position).

% function Side2(gate): position
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',34).
function(side2(gate)).
==> mpred_prop(side2(gate),function).
==> meta_argtypes(side2(gate)).
predicate(side2Pred(gate,position)).
==> mpred_prop(side2Pred(gate,position),predicate).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',34).
==> meta_argtypes(side2Pred(gate,position)).

 /*  fix_axiom_head(Time) ->
       
       [ functional_predicate(side2, side2Pred),
          (->),
         holds_at(functional_predicate(side2, side2Pred), Time)
       ].
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',34).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(functional_predicate(side2, side2Pred), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',34).
axiom(holds_at(functional_predicate(side2, side2Pred), Time),
    []).
==> resultIsa(side2,position).

% function Species(animal): species
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',34).
function(species(animal)).
==> mpred_prop(species(animal),function).
==> meta_argtypes(species(animal)).
predicate(speciesPred(animal,species)).
==> mpred_prop(speciesPred(animal,species),predicate).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',34).
==> meta_argtypes(speciesPred(animal,species)).

 /*  fix_axiom_head(Time) ->
       
       [ functional_predicate(species, speciesPred),
          (->),
         holds_at(functional_predicate(species, speciesPred), Time)
       ].
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',34).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(functional_predicate(species, speciesPred), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',34).
axiom(holds_at(functional_predicate(species, speciesPred), Time),
    []).
==> resultIsa(species,species).

% predicate Accessible(position,position,time)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',37).
predicate(accessible(position,position,time)).
==> mpred_prop(accessible(position,position,time),predicate).
==> meta_argtypes(accessible(position,position,time)).

% predicate Adult(animal)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',37).
predicate(adult(animal)).
==> mpred_prop(adult(animal),predicate).
==> meta_argtypes(adult(animal)).

% predicate Large(animal)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',39).
predicate(large(animal)).
==> mpred_prop(large(animal),predicate).
==> meta_argtypes(large(animal)).

% predicate LargeSpecies(species)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',39).
predicate(largeSpecies(species)).
==> mpred_prop(largeSpecies(species),predicate).
==> meta_argtypes(largeSpecies(species)).

% predicate Neighbor(position,position)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',41).
predicate(neighbor(position,position)).
==> mpred_prop(neighbor(position,position),predicate).
==> meta_argtypes(neighbor(position,position)).

% predicate Sides(position,position,gate)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',41).
predicate(sides(position,position,gate)).
==> mpred_prop(sides(position,position,gate),predicate).
==> meta_argtypes(sides(position,position,gate)).

% event Close(human,gate)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',44).
event(close(human,gate)).
==> mpred_prop(close(human,gate),event).
==> meta_argtypes(close(human,gate)).

% event GetOff(human,animal)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',44).
event(getOff(human,animal)).
==> mpred_prop(getOff(human,animal),event).
==> meta_argtypes(getOff(human,animal)).

% event Mount(human,animal)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',46).
event(mount(human,animal)).
==> mpred_prop(mount(human,animal),event).
==> meta_argtypes(mount(human,animal)).

% event Move(animal,position)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',46).
event(move(animal,position)).
==> mpred_prop(move(animal,position),event).
==> meta_argtypes(move(animal,position)).

% event Open(human,gate)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',48).
event(open(human,gate)).
==> mpred_prop(open(human,gate),event).
==> meta_argtypes(open(human,gate)).

% event ThrowOff(animal,human)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',48).
event(throwOff(animal,human)).
==> mpred_prop(throwOff(animal,human),event).
==> meta_argtypes(throwOff(animal,human)).

% fluent AbnormalEncroachment(human)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',51).
fluent(abnormalEncroachment(human)).
==> mpred_prop(abnormalEncroachment(human),fluent).
==> meta_argtypes(abnormalEncroachment(human)).

% noninertial AbnormalEncroachment
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',51).
==> noninertial(abnormalEncroachment).

% fluent DoneBy(event,animal)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',53).
fluent(doneBy(event,animal)).
==> mpred_prop(doneBy(event,animal),fluent).
==> meta_argtypes(doneBy(event,animal)).

% noninertial DoneBy
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',53).
==> noninertial(doneBy).

% fluent Mounted(human,animal)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',55).
fluent(mounted(human,animal)).
==> mpred_prop(mounted(human,animal),fluent).
==> meta_argtypes(mounted(human,animal)).

% fluent MountFails(human)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',55).
fluent(mountFails(human)).
==> mpred_prop(mountFails(human),fluent).
==> meta_argtypes(mountFails(human)).

% noninertial MountFails
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',57).
==> noninertial(mountFails).

% fluent Moves(animal)
fluent(moves(animal)).
==> mpred_prop(moves(animal),fluent).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',57).
==> meta_argtypes(moves(animal)).

% noninertial Moves
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',59).
==> noninertial(moves).

% fluent Opened(gate)
fluent(opened(gate)).
==> mpred_prop(opened(gate),fluent).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',59).
==> meta_argtypes(opened(gate)).

% fluent Pos(animal,position)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',61).
fluent(pos(animal,position)).
==> mpred_prop(pos(animal,position),fluent).
==> meta_argtypes(pos(animal,position)).

% fluent PosDeterminingFluent(human,position)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',61).
fluent(posDeterminingFluent(human,position)).
==> mpred_prop(posDeterminingFluent(human,position),fluent).
==> meta_argtypes(posDeterminingFluent(human,position)).

% noninertial PosDeterminingFluent
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',63).
==> noninertial(posDeterminingFluent).

% fluent ThrowOffFails(animal,human)
fluent(throwOffFails(animal,human)).
==> mpred_prop(throwOffFails(animal,human),fluent).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',63).
==> meta_argtypes(throwOffFails(animal,human)).

% noninertial ThrowOffFails
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',65).
==> noninertial(throwOffFails).

% species HumanSpecies, ElephantSpecies, HorseSpecies, DogSpecies
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',67).
==> t(species,humanSpecies).
==> t(species,elephantSpecies).
==> t(species,horseSpecies).
==> t(species,dogSpecies).

% location Outside
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',67).
==> t(location,outside).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:69
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',70).
% LargeSpecies(HumanSpecies).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], largeSpecies(humanSpecies)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',70).
axiom(largeSpecies(humanSpecies),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:70
% LargeSpecies(ElephantSpecies).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',70).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], largeSpecies(elephantSpecies)).
 */
axiom(largeSpecies(elephantSpecies),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:71
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',72).
% LargeSpecies(HorseSpecies).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], largeSpecies(horseSpecies)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',72).
axiom(largeSpecies(horseSpecies),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:72
% !LargeSpecies(DogSpecies).
 %  not(largeSpecies(dogSpecies)).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',72).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], not(largeSpecies(dogSpecies))).
 */
axiom(not(largeSpecies(dogSpecies)),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:74
% [event,animal,time]
% HoldsAt(DoneBy(event,animal),time) <->
% (Happens(event,time) &
%  (({gate} event=Close(animal,gate)) |
%   ({animal1} event=GetOff(animal,animal1))|
%   ({animal1} event=Mount(animal,animal1))|
%   ({position} event=Move(animal,position))|
%   ({gate} event=Open(animal,gate)) |
%   ({human1} event=ThrowOff(animal,human1)))).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:82
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',76).

 /*  holds_at(doneBy(Event, Animal), Time) <->
       happens(Event, Time),
       (   exists([Gate],
                  equals(Event, close(Animal, Gate)))
       ;   exists([Animal1],
                  equals(Event, getOff(Animal, Animal1)))
       ;   exists([Animal15],
                  equals(Event, mount(Animal, Animal15)))
       ;   exists([Position],
                  equals(Event, move(Animal, Position)))
       ;   exists([Gate7],
                  equals(Event, open(Animal, Gate7)))
       ;   exists([Human1],
                  equals(Event, throwOff(Animal, Human1)))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',76).

 /*  [holds_at, doneBy] <->
       
       [ happens,
          (;),
         exists,
         equals,
         close,
          (;),
         exists,
         equals,
         getOff,
          (;),
         exists,
         equals,
         mount,
          (;),
         exists,
         equals,
         move,
          (;),
         exists,
         equals,
         open,
         exists,
         equals,
         throwOff
       ].
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',76).

 /*  holds_at(doneBy(Event, Animal), Time) ->
       happens(Event, Time),
       (   exists([Gate],
                  equals(Event, close(Animal, Gate)))
       ;   exists([Animal1],
                  equals(Event, getOff(Animal, Animal1)))
       ;   exists([Animal15],
                  equals(Event, mount(Animal, Animal15)))
       ;   exists([Position],
                  equals(Event, move(Animal, Position)))
       ;   exists([Gate7],
                  equals(Event, open(Animal, Gate7)))
       ;   exists([Human1],
                  equals(Event, throwOff(Animal, Human1)))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',76).

 /*  not(holds_at(doneBy(Event, Animal), Time)) :-
       (   not(happens(Event, Time))
       ;   not(equals(Event, close(Animal, Gate))),
           not(equals(Event, getOff(Animal, Animal1))),
           not(equals(Event, mount(Animal, Animal15))),
           not(equals(Event, move(Animal, Position))),
           not(equals(Event, open(Animal, Gate7))),
           not(equals(Event, throwOff(Animal, Human1)))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',76).

 /*  [(not(happens(Event, Time));not(equals(Event, close(Animal, Gate))), not(equals(Event, getOff(Animal, Animal1))), not(equals(Event, mount(Animal, Animal15))), not(equals(Event, move(Animal, Position))), not(equals(Event, open(Animal, Gate7))), not(equals(Event, throwOff(Animal, Human1))))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(doneBy(Event, Animal)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',76).
axiom(holds_at(neg(doneBy(Event, Animal)), Time),
   
    [  (not(happens(Event, Time));not(equals(Event, close(Animal, Gate))), not(equals(Event, getOff(Animal, Animal1))), not(equals(Event, mount(Animal, Animal15))), not(equals(Event, move(Animal, Position))), not(equals(Event, open(Animal, Gate7))), not(equals(Event, throwOff(Animal, Human1))))
    ]).

 /*  happens(Event, Time) :-
       holds_at(doneBy(Event, Animal), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',76).

 /*  [holds_at(doneBy(Event, Animal), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          happens(Event, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',76).
axiom(happens(Event, Time),
    [holds_at(doneBy(Event, Animal), Time)]).

 /*  happens(Event, Time), (exists([Gate], equals(Event, close(Animal, Gate)));exists([Animal1], equals(Event, getOff(Animal, Animal1)));exists([Animal15], equals(Event, mount(Animal, Animal15)));exists([Position], equals(Event, move(Animal, Position)));exists([Gate7], equals(Event, open(Animal, Gate7)));exists([Human1], equals(Event, throwOff(Animal, Human1)))) ->
       holds_at(doneBy(Event, Animal), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',76).

 /*  holds_at(doneBy(Event, Animal), Time) :-
       happens(Event, Time),
       (   equals(Event, close(Animal, Gate))
       ;   equals(Event, getOff(Animal, Animal1))
       ;   equals(Event, mount(Animal, Animal15))
       ;   equals(Event, move(Animal, Position))
       ;   equals(Event, open(Animal, Gate7))
       ;   equals(Event, throwOff(Animal, Human1))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',76).

 /*  [happens(Event, Time),  (equals(Event, close(Animal, Gate));equals(Event, getOff(Animal, Animal1));equals(Event, mount(Animal, Animal15));equals(Event, move(Animal, Position));equals(Event, open(Animal, Gate7));equals(Event, throwOff(Animal, Human1)))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(doneBy(Event, Animal), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',76).
axiom(holds_at(doneBy(Event, Animal), Time),
   
    [ happens(Event, Time),
       (equals(Event, close(Animal, Gate));equals(Event, getOff(Animal, Animal1));equals(Event, mount(Animal, Animal15));equals(Event, move(Animal, Position));equals(Event, open(Animal, Gate7));equals(Event, throwOff(Animal, Human1)))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',76).

 /*  not(happens(Event, Time)) :-
       (   equals(Event, close(Animal, Gate))
       ;   equals(Event, getOff(Animal, Animal1))
       ;   equals(Event, mount(Animal, Animal15))
       ;   equals(Event, move(Animal, Position))
       ;   equals(Event, open(Animal, Gate7))
       ;   equals(Event, throwOff(Animal, Human1))
       ),
       not(holds_at(doneBy(Event, Animal), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',76).

 /*  [(equals(Event, close(Animal, Gate));equals(Event, getOff(Animal, Animal1));equals(Event, mount(Animal, Animal15));equals(Event, move(Animal, Position));equals(Event, open(Animal, Gate7));equals(Event, throwOff(Animal, Human1))), holds_at(neg(doneBy(Event, Animal)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(Event, Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',76).
axiom(not(happens(Event, Time)),
   
    [  (equals(Event, close(Animal, Gate));equals(Event, getOff(Animal, Animal1));equals(Event, mount(Animal, Animal15));equals(Event, move(Animal, Position));equals(Event, open(Animal, Gate7));equals(Event, throwOff(Animal, Human1))),
      holds_at(neg(doneBy(Event, Animal)), Time)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:84
% [event1,event2,animal,time]
% HoldsAt(DoneBy(event1,animal),time) &
% HoldsAt(DoneBy(event2,animal),time) ->
% event1=event2.
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:87
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',86).

 /*  holds_at(doneBy(Event1, Animal), Time), holds_at(doneBy(Event2, Animal), Time) ->
       equals(Event1, Event2).
 */

 /*  not(holds_at(doneBy(Event1, Animal), Time)) :-
       holds_at(doneBy(Event2, Animal), Time),
       not(equals(Event1, Event2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',86).

 /*  [holds_at(doneBy(Event2, Animal), Time), not(equals(Event1, Event2))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(doneBy(Event1, Animal)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',86).
axiom(holds_at(neg(doneBy(Event1, Animal)), Time),
   
    [ holds_at(doneBy(Event2, Animal), Time),
      not(equals(Event1, Event2))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',86).

 /*  not(holds_at(doneBy(Event2, Animal), Time)) :-
       holds_at(doneBy(Event1, Animal), Time),
       not(equals(Event1, Event2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',86).

 /*  [holds_at(doneBy(Event1, Animal), Time), not(equals(Event1, Event2))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(doneBy(Event2, Animal)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',86).
axiom(holds_at(neg(doneBy(Event2, Animal)), Time),
   
    [ holds_at(doneBy(Event1, Animal), Time),
      not(equals(Event2, Event1))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:89
% [animal]
 % Large(animal) <-> (Adult(animal) & LargeSpecies(Species(animal))).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',89).

 /*  large(Animal) <->
       adult(Animal),
       largeSpecies(species(Animal)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',89).

 /*  [large] <->
       [adult, largeSpecies, species].
 */

 /*  large(Animal) ->
       adult(Animal),
       largeSpecies(species(Animal)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',89).

 /*  not(large(Animal)) :-
       (   not(adult(Animal))
       ;   not(largeSpecies(species(Animal)))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',89).

 /*  [(not(adult(Animal));not(largeSpecies(species(Animal))))] ->
       ta(Ta_Param, tvs1=[], tvs2=[], not(large(Animal))).
 */
axiom(not(large(Animal)),
    [(not(adult(Animal));not(largeSpecies(species(Animal))))]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',89).

 /*  adult(Animal) :-
       large(Animal).
 */

 /*  [large(Animal)] ->
       ta(Ta_Param2, tvs1=[], tvs2=[], adult(Animal)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',89).
axiom(adult(Animal),
    [large(Animal)]).

 /*  largeSpecies(species(Animal)) :-
       large(Animal).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',89).

 /*  [large(Animal)] ->
       ta(Ta_Param3, tvs1=[], tvs2=[], largeSpecies(species(Animal))).
 */
axiom(largeSpecies(species(Animal)),
    [large(Animal)]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',89).

 /*  adult(Animal), largeSpecies(species(Animal)) ->
       large(Animal).
 */

 /*  large(Animal) :-
       adult(Animal),
       largeSpecies(species(Animal)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',89).

 /*  [adult(Animal), largeSpecies(species(Animal))] ->
       ta(Ta_Param4, tvs1=[], tvs2=[], large(Animal)).
 */
axiom(large(Animal),
    [adult(Animal), largeSpecies(species(Animal))]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',89).

 /*  not(adult(Animal)) :-
       largeSpecies(species(Animal)),
       not(large(Animal)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',89).

 /*  [largeSpecies(species(Animal)), not(large(Animal))] ->
       ta(Ta_Param5, tvs1=[], tvs2=[], not(adult(Animal))).
 */
axiom(not(adult(Animal)),
    [largeSpecies(species(Animal)), not(large(Animal))]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',89).

 /*  not(largeSpecies(species(Animal))) :-
       adult(Animal),
       not(large(Animal)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',89).

 /*  [adult(Animal), not(large(Animal))] ->
       ta(Ta_Param6,
          tvs1=[],
          tvs2=[],
          not(largeSpecies(species(Animal)))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',89).
axiom(not(largeSpecies(species(Animal))),
    [adult(Animal), not(large(Animal))]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:91
% [position]
 
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:91
% {position1} % position1!=% position & Neighbor(position,position1).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',91).

 /*  exists([Position1],
     diff(Position1, Position),
      neighbor(Position, Position1)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',91).

 /*  neighbor(Position, Position1) :-
       some(Position1, '$kolem_Fn_101'(Position)).
 */

 /*  [some(Position1, '$kolem_Fn_101'(Position))] ->
       ta(Ta_Param,
          tvs1=[],
          tvs2=[],
          neighbor(Position, Position1)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',91).
axiom(neighbor(Position, Position1),
    [some(Position1, '$kolem_Fn_101'(Position))]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:93
% [position]
 % !Neighbor(position,position).
 %  not(neighbor(Position,Position)).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',93).

 /*  [] ->
       ta(Ta_Param,
          tvs1=[],
          tvs2=[],
          not(neighbor(Position, Position))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',93).
axiom(not(neighbor(Position, Position)),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:95
% [position1,position2]
% Neighbor(position1,position2) ->
% Neighbor(position2,position1).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:97

 /*  neighbor(Position1, Position2) ->
       neighbor(Position2, Position1).
 */


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:99
% [cage]
 % cage!=% Outside.
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',99).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], diff(Cage, outside)).
 */
axiom(diff(Cage, outside),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:101
% [position1,position2,gate]
% Sides(position1,position2,gate) <->
% ((Side1(gate)=position1 &
%   Side2(gate)=position2) |
%  (Side2(gate)=position1 &
%   Side1(gate)=position2)).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:106
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',103).

 /*  sides(Position1, Position2, Gate) <->
       (   equals(side1(Gate), Position1),
           equals(side2(Gate), Position2)
       ;   equals(side2(Gate), Position1),
           equals(side1(Gate), Position2)
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',103).

 /*  [sides] <->
       [;, equals, side1, equals, side2, equals, side2, equals, side1].
 */

 /*  sides(Position1, Position2, Gate) ->
       (   equals(side1(Gate), Position1),
           equals(side2(Gate), Position2)
       ;   equals(side2(Gate), Position1),
           equals(side1(Gate), Position2)
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',103).

 /*  not(sides(Position1, Position2, Gate)) :-
       (   not(equals(side1(Gate), Position1))
       ;   not(equals(side2(Gate), Position2))
       ),
       (   not(equals(side2(Gate), Position1))
       ;   not(equals(side1(Gate), Position2))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',103).

 /*  [(not(equals(side1(Gate), Position1));not(equals(side2(Gate), Position2))),  (not(equals(side2(Gate), Position1));not(equals(side1(Gate), Position2)))] ->
       ta(Ta_Param,
          tvs1=[],
          tvs2=[],
          not(sides(Position1, Position2, Gate))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',103).
axiom(not(sides(Position1, Position2, Gate)),
   
    [  (not(equals(side1(Gate), Position1));not(equals(side2(Gate), Position2))),
       (not(equals(side2(Gate), Position1));not(equals(side1(Gate), Position2)))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',103).

 /*  equals(side1(Gate), Position1), equals(side2(Gate), Position2);equals(side2(Gate), Position1), equals(side1(Gate), Position2) ->
       sides(Position1, Position2, Gate).
 */

 /*  sides(Position1, Position2, Gate) :-
       (   equals(side1(Gate), Position1),
           equals(side2(Gate), Position2)
       ;   equals(side2(Gate), Position1),
           equals(side1(Gate), Position2)
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',103).

 /*  [(equals(side1(Gate), Position1), equals(side2(Gate), Position2);equals(side2(Gate), Position1), equals(side1(Gate), Position2))] ->
       ta(Ta_Param4,
          tvs1=[],
          tvs2=[],
          sides(Position1, Position2, Gate)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',103).
axiom(sides(Position1, Position2, Gate),
   
    [  (equals(side1(Gate), Position1), equals(side2(Gate), Position2);equals(side2(Gate), Position1), equals(side1(Gate), Position2))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:108
% [gate]
 % Loc(Side1(gate))!=Loc(Side2(gate)).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',108).

 /*  [] ->
       ta(Ta_Param,
          tvs1=[],
          tvs2=[],
          diff(loc(side1(Gate)), loc(side2(Gate)))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',108).
axiom(diff(loc(side1(Gate)), loc(side2(Gate))),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:110
% [position1,position2,gate1,gate2]
% Sides(position1,position2,gate1) &
% Sides(position1,position2,gate2) ->
% gate1=gate2.
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:113
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',112).

 /*  sides(Position1, Position2, Gate1), sides(Position1, Position2, Gate2) ->
       equals(Gate1, Gate2).
 */

 /*  not(sides(Position1, Position2, Gate1)) :-
       sides(Position1, Position2, Gate2),
       not(equals(Gate1, Gate2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',112).

 /*  [sides(Position1, Position2, Gate2), not(equals(Gate1, Gate2))] ->
       ta(Ta_Param,
          tvs1=[],
          tvs2=[],
          not(sides(Position1, Position2, Gate1))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',112).
axiom(not(sides(Position1, Position2, Gate1)),
   
    [ sides(Position1, Position2, Gate2),
      not(equals(Gate1, Gate2))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',112).

 /*  not(sides(Position1, Position2, Gate2)) :-
       sides(Position1, Position2, Gate1),
       not(equals(Gate1, Gate2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',112).

 /*  [sides(Position1, Position2, Gate1), not(equals(Gate1, Gate2))] ->
       ta(Ta_Param5,
          tvs1=[],
          tvs2=[],
          not(sides(Position1, Position2, Gate2))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',112).
axiom(not(sides(Position1, Position2, Gate2)),
   
    [ sides(Position1, Position2, Gate1),
      not(equals(Gate2, Gate1))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:115
% [position1,position2,gate]
% Sides(position1,position2,gate) ->
% Neighbor(position1,position2).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:117

 /*  sides(Position1, Position2, Gate) ->
       neighbor(Position1, Position2).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',117).

 /*  neighbor(Position1, Position2) :-
       sides(Position1, Position2, Gate).
 */

 /*  [sides(Position1, Position2, Gate)] ->
       ta(Ta_Param,
          tvs1=[],
          tvs2=[],
          neighbor(Position1, Position2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',117).
axiom(neighbor(Position1, Position2),
    [sides(Position1, Position2, Gate)]).

 /*  not(sides(Position1, Position2, Gate)) :-
       not(neighbor(Position1, Position2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',117).

 /*  [not(neighbor(Position1, Position2))] ->
       ta(Ta_Param4,
          tvs1=[],
          tvs2=[],
          not(sides(Position1, Position2, Gate))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',117).
axiom(not(sides(Position1, Position2, Gate)),
    [not(neighbor(Position1, Position2))]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:119
% [position1,position2]
% Loc(position1) != Loc(position2) &
% Neighbor(position1,position2) ->
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:122
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',121).
% {gate}%  Sides(position1,position2,gate).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',123).

 /*  exists([Gate],
    diff(loc(Position1), loc(Position2)), neighbor(Position1, Position2) ->
       sides(Position1, Position2, Gate)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',123).

 /*  sides(Position1, Position2, Gate) :-
       ( diff(loc(Position1), loc(Position2)),
         neighbor(Position1, Position2)
       ),
       some(Gate, '$kolem_Fn_102'(Position1, Position2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',123).

 /*  [diff(loc(Position1), loc(Position2)), neighbor(Position1, Position2), some(Gate, '$kolem_Fn_102'(Position1, Position2))] ->
       ta(Ta_Param,
          tvs1=[],
          tvs2=[],
          sides(Position1, Position2, Gate)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',123).
axiom(sides(Position1, Position2, Gate),
   
    [ diff(loc(Position1), loc(Position2)),
      neighbor(Position1, Position2),
      some(Gate, '$kolem_Fn_102'(Position1, Position2))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',123).

 /*  not(neighbor(Position1, Position2)) :-
       diff(loc(Position1), loc(Position2)),
       not(sides(Position1, Position2, Gate)),
       some(Gate, '$kolem_Fn_102'(Position1, Position2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',123).

 /*  [diff(loc(Position1), loc(Position2)), not(sides(Position1, Position2, Gate)), some(Gate, '$kolem_Fn_102'(Position1, Position2))] ->
       ta(Ta_Param5,
          tvs1=[],
          tvs2=[],
          not(neighbor(Position1, Position2))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',123).
axiom(not(neighbor(Position1, Position2)),
   
    [ diff(loc(Position1), loc(Position2)),
      not(sides(Position1, Position2, Gate)),
      some(Gate, '$kolem_Fn_102'(Position1, Position2))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:124
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',125).
% [animal,position1,position2,time]
% HoldsAt(Pos(animal,position1),time) &
% HoldsAt(Pos(animal,position2),time) ->
% position1=position2.
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:127
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',125).

 /*  holds_at(pos(Animal, Position1), Time), holds_at(pos(Animal, Position2), Time) ->
       equals(Position1, Position2).
 */

 /*  not(holds_at(pos(Animal, Position1), Time)) :-
       holds_at(pos(Animal, Position2), Time),
       not(equals(Position1, Position2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',125).

 /*  [holds_at(pos(Animal, Position2), Time), not(equals(Position1, Position2))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(pos(Animal, Position1)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',125).
axiom(holds_at(neg(pos(Animal, Position1)), Time),
   
    [ holds_at(pos(Animal, Position2), Time),
      not(equals(Position1, Position2))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',125).

 /*  not(holds_at(pos(Animal, Position2), Time)) :-
       holds_at(pos(Animal, Position1), Time),
       not(equals(Position1, Position2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',125).

 /*  [holds_at(pos(Animal, Position1), Time), not(equals(Position1, Position2))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(pos(Animal, Position2)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',125).
axiom(holds_at(neg(pos(Animal, Position2)), Time),
   
    [ holds_at(pos(Animal, Position1), Time),
      not(equals(Position2, Position1))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:129
% [animal,time]
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:130
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',131).
% {position} % HoldsAt(Pos(animal,position),time).

 /*  exists([Position],
    holds_at(pos(Animal,Position),Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',131).

 /*  holds_at(pos(Animal, Position), Time) :-
       some(Position, '$kolem_Fn_103'(Animal, Time)).
 */

 /*  [some(Position, '$kolem_Fn_103'(Animal, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(pos(Animal, Position), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',131).
axiom(holds_at(pos(Animal, Position), Time),
    [some(Position, '$kolem_Fn_103'(Animal, Time))]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:132
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',133).
% [animal1,animal2,position,time]
% (animal1!=animal2 &
%  Large(animal1) &
%  Large(animal2) &
%  HoldsAt(Pos(animal1,position),time) &
%  HoldsAt(Pos(animal2,position),time)) ->
% (({human} human=animal1 & HoldsAt(Mounted(human,animal2),time)) |
%  ({human} human=animal2 & HoldsAt(Mounted(human,animal1),time))).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:139
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',133).

 /*  diff(Animal1, Animal2), large(Animal1), large(Animal2), holds_at(pos(Animal1, Position), Time), holds_at(pos(Animal2, Position), Time) ->
       (   exists([Human],
                   (equals(Human, Animal1), holds_at(mounted(Human, Animal2), Time)))
       ;   exists([Human5],
                   (equals(Human5, Animal2), holds_at(mounted(Human5, Animal1), Time)))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',133).

 /*  not(large(Animal1)) :-
       ( large(Animal2),
         holds_at(pos(Animal1, Position), Time),
         holds_at(pos(Animal2, Position), Time)
       ),
       diff(Animal1, Animal2),
       (   not(equals(Human, Animal1))
       ;   not(holds_at(mounted(Human, Animal2), Time))
       ),
       (   not(equals(Human5, Animal2))
       ;   not(holds_at(mounted(Human5, Animal1), Time))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',133).

 /*  fix_axiom_head(Time) ->
       
       [  (not(equals(Human, Animal1));not(holds_at(mounted(Human, Animal2), Time))),
          (->),
          (not(equals(Human, Animal1));holds_at(neg(mounted(Human, Animal2)), Time))
       ].
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',133).

 /*  fix_axiom_head(Time) ->
       
       [  (not(equals(Human5, Animal2));not(holds_at(mounted(Human5, Animal1), Time))),
          (->),
          (not(equals(Human5, Animal2));holds_at(neg(mounted(Human5, Animal1)), Time))
       ].
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',133).

 /*  [large(Animal2), holds_at(pos(Animal1, Position), Time), holds_at(pos(Animal2, Position), Time), diff(Animal1, Animal2),  (not(equals(Human, Animal1));holds_at(neg(mounted(Human, Animal2)), Time)),  (not(equals(Human5, Animal2));holds_at(neg(mounted(Human5, Animal1)), Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(large(Animal1))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',133).
axiom(not(large(Animal1)),
   
    [ large(Animal2),
      holds_at(pos(Animal1, Position), Time),
      holds_at(pos(Animal2, Position), Time),
      diff(Animal1, Animal2),
       (not(equals(Animal1, Human));holds_at(neg(mounted(Human, Animal2)), Time)),
       (not(equals(Human5, Animal2));holds_at(neg(mounted(Human5, Animal1)), Time))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',133).

 /*  not(large(Animal2)) :-
       ( holds_at(pos(Animal1, Position), Time),
         holds_at(pos(Animal2, Position), Time)
       ),
       large(Animal1),
       diff(Animal1, Animal2),
       (   not(equals(Human, Animal1))
       ;   not(holds_at(mounted(Human, Animal2), Time))
       ),
       (   not(equals(Human5, Animal2))
       ;   not(holds_at(mounted(Human5, Animal1), Time))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',133).

 /*  fix_axiom_head(Time) ->
       
       [  (not(equals(Human, Animal1));not(holds_at(mounted(Human, Animal2), Time))),
          (->),
          (not(equals(Human, Animal1));holds_at(neg(mounted(Human, Animal2)), Time))
       ].
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',133).

 /*  fix_axiom_head(Time) ->
       
       [  (not(equals(Human5, Animal2));not(holds_at(mounted(Human5, Animal1), Time))),
          (->),
          (not(equals(Human5, Animal2));holds_at(neg(mounted(Human5, Animal1)), Time))
       ].
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',133).

 /*  [holds_at(pos(Animal1, Position), Time), holds_at(pos(Animal2, Position), Time), large(Animal1), diff(Animal1, Animal2),  (not(equals(Human, Animal1));holds_at(neg(mounted(Human, Animal2)), Time)),  (not(equals(Human5, Animal2));holds_at(neg(mounted(Human5, Animal1)), Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(large(Animal2))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',133).
axiom(not(large(Animal2)),
   
    [ holds_at(pos(Animal1, Position), Time),
      holds_at(pos(Animal2, Position), Time),
      large(Animal1),
      diff(Animal2, Animal1),
       (not(equals(Human, Animal1));holds_at(neg(mounted(Human, Animal2)), Time)),
       (not(equals(Animal2, Human5));holds_at(neg(mounted(Human5, Animal1)), Time))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',133).

 /*  not(holds_at(pos(Animal1, Position), Time)) :-
       holds_at(pos(Animal2, Position), Time),
       large(Animal2),
       large(Animal1),
       diff(Animal1, Animal2),
       (   not(equals(Human, Animal1))
       ;   not(holds_at(mounted(Human, Animal2), Time))
       ),
       (   not(equals(Human5, Animal2))
       ;   not(holds_at(mounted(Human5, Animal1), Time))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',133).

 /*  [holds_at(pos(Animal2, Position), Time), large(Animal2), large(Animal1), diff(Animal1, Animal2),  (not(equals(Human, Animal1));holds_at(neg(mounted(Human, Animal2)), Time)),  (not(equals(Human5, Animal2));holds_at(neg(mounted(Human5, Animal1)), Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(pos(Animal1, Position)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',133).
axiom(holds_at(neg(pos(Animal1, Position)), Time),
   
    [ holds_at(pos(Animal2, Position), Time),
      large(Animal2),
      large(Animal1),
      diff(Animal1, Animal2),
       (not(equals(Animal1, Human));holds_at(neg(mounted(Human, Animal2)), Time)),
       (not(equals(Human5, Animal2));holds_at(neg(mounted(Human5, Animal1)), Time))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',133).

 /*  not(holds_at(pos(Animal2, Position), Time)) :-
       holds_at(pos(Animal1, Position), Time),
       large(Animal2),
       large(Animal1),
       diff(Animal1, Animal2),
       (   not(equals(Human, Animal1))
       ;   not(holds_at(mounted(Human, Animal2), Time))
       ),
       (   not(equals(Human5, Animal2))
       ;   not(holds_at(mounted(Human5, Animal1), Time))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',133).

 /*  [holds_at(pos(Animal1, Position), Time), large(Animal2), large(Animal1), diff(Animal1, Animal2),  (not(equals(Human, Animal1));holds_at(neg(mounted(Human, Animal2)), Time)),  (not(equals(Human5, Animal2));holds_at(neg(mounted(Human5, Animal1)), Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(pos(Animal2, Position)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',133).
axiom(holds_at(neg(pos(Animal2, Position)), Time),
   
    [ holds_at(pos(Animal1, Position), Time),
      large(Animal2),
      large(Animal1),
      diff(Animal2, Animal1),
       (not(equals(Human, Animal1));holds_at(neg(mounted(Human, Animal2)), Time)),
       (not(equals(Animal2, Human5));holds_at(neg(mounted(Human5, Animal1)), Time))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',133).

 /*  holds_at(mounted(Human, Animal2), Time) :-
       (   not(equals(Human5, Animal2))
       ;   not(holds_at(mounted(Human5, Animal1), Time))
       ),
       diff(Animal1, Animal2),
       large(Animal1),
       large(Animal2),
       holds_at(pos(Animal1, Position), Time),
       holds_at(pos(Animal2, Position), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',133).

 /*  [(not(equals(Human5, Animal2));holds_at(neg(mounted(Human5, Animal1)), Time)), diff(Animal1, Animal2), large(Animal1), large(Animal2), holds_at(pos(Animal1, Position), Time), holds_at(pos(Animal2, Position), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(mounted(Human, Animal2), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',133).
axiom(holds_at(mounted(Human, Animal2), Time),
   
    [  (not(equals(Animal2, Human5));holds_at(neg(mounted(Human5, Animal1)), Time)),
      diff(Animal2, Animal1),
      large(Animal1),
      large(Animal2),
      holds_at(pos(Animal1, Position), Time),
      holds_at(pos(Animal2, Position), Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',133).

 /*  holds_at(mounted(Human5, Animal1), Time) :-
       (   not(equals(Human, Animal1))
       ;   not(holds_at(mounted(Human, Animal2), Time))
       ),
       diff(Animal1, Animal2),
       large(Animal1),
       large(Animal2),
       holds_at(pos(Animal1, Position), Time),
       holds_at(pos(Animal2, Position), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',133).

 /*  [(not(equals(Human, Animal1));holds_at(neg(mounted(Human, Animal2)), Time)), diff(Animal1, Animal2), large(Animal1), large(Animal2), holds_at(pos(Animal1, Position), Time), holds_at(pos(Animal2, Position), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(mounted(Human5, Animal1), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',133).
axiom(holds_at(mounted(Human5, Animal1), Time),
   
    [  (not(equals(Animal1, Human));holds_at(neg(mounted(Human, Animal2)), Time)),
      diff(Animal1, Animal2),
      large(Animal1),
      large(Animal2),
      holds_at(pos(Animal1, Position), Time),
      holds_at(pos(Animal2, Position), Time)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:141
% [human,position1,position2,time]
% HoldsAt(PosDeterminingFluent(human,position1),time) &
% HoldsAt(PosDeterminingFluent(human,position2),time) ->
% position1=position2.
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:144
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',143).

 /*  holds_at(posDeterminingFluent(Human, Position1), Time), holds_at(posDeterminingFluent(Human, Position2), Time) ->
       equals(Position1, Position2).
 */

 /*  not(holds_at(posDeterminingFluent(Human, Position1), Time)) :-
       holds_at(posDeterminingFluent(Human, Position2), Time),
       not(equals(Position1, Position2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',143).

 /*  [holds_at(posDeterminingFluent(Human, Position2), Time), not(equals(Position1, Position2))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(posDeterminingFluent(Human, Position1)),
                   Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',143).
axiom(holds_at(neg(posDeterminingFluent(Human, Position1)), Time),
   
    [ holds_at(posDeterminingFluent(Human, Position2), Time),
      not(equals(Position1, Position2))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',143).

 /*  not(holds_at(posDeterminingFluent(Human, Position2), Time)) :-
       holds_at(posDeterminingFluent(Human, Position1), Time),
       not(equals(Position1, Position2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',143).

 /*  [holds_at(posDeterminingFluent(Human, Position1), Time), not(equals(Position1, Position2))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(posDeterminingFluent(Human, Position2)),
                   Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',143).
axiom(holds_at(neg(posDeterminingFluent(Human, Position2)), Time),
   
    [ holds_at(posDeterminingFluent(Human, Position1), Time),
      not(equals(Position2, Position1))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:146
% [animal,position,time]
% Initiates(Move(animal,position),Pos(animal,position),time).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',148).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(move(Animal, Position),
                    pos(Animal, Position),
                    Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',148).
axiom(initiates(move(Animal, Position), pos(Animal, Position), Time),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:149
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',150).
% [animal,position1,position2,time]
% HoldsAt(Pos(animal,position1),time) ->
% Terminates(Move(animal,position2),Pos(animal,position1),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:151

 /*  [holds_at(pos(Animal, Position1), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(move(Animal, Position2),
                     pos(Animal, Position1),
                     Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',150).
axiom(terminates(move(Animal, Position2), pos(Animal, Position1), Time),
    [holds_at(pos(Animal, Position1), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:153
% [animal,position,time]
% Happens(Move(animal,position),time) ->
% !HoldsAt(Pos(animal,position),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:155

 /*  happens(move(Animal, Position), Time) ->
       holds_at(neg(pos(Animal, Position)), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',155).

 /*  holds_at(neg(pos(Animal, Position)), Time) :-
       happens(move(Animal, Position), Time).
 */

 /*  [holds_at(metreqs(move(Animal, Position)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          requires(move(Animal, Position), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',155).
axiom(requires(move(Animal, Position), Time),
    [holds_at(metreqs(move(Animal, Position)), Time)]).

 /*  [holds_at(neg(pos(Animal, Position)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(metreqs(move(Animal, Position)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',155).
axiom(holds_at(metreqs(move(Animal, Position)), Time),
    [holds_at(neg(pos(Animal, Position)), Time)]).

 /*  not(happens(move(Animal, Position), Time)) :-
       not(holds_at(neg(pos(Animal, Position)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',155).

 /*  [holds_at(pos(Animal, Position), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(move(Animal, Position), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',155).
axiom(not(happens(move(Animal, Position), Time)),
    [holds_at(pos(Animal, Position), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:157
% [human,position,time]
% Happens(Move(human,position),time) ->
% !{animal} HoldsAt(Mounted(human,animal),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:159

 /*  happens(move(Human, Position), Time) ->
       not(exists([Animal],
                  holds_at(mounted(Human, Animal), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',159).

 /*  not(holds_at(mounted(Human, Animal), Time)) :-
       happens(move(Human, Position), Time).
 */

 /*  [holds_at(metreqs(move(Human, Position)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          requires(move(Human, Position), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',159).
axiom(requires(move(Human, Position), Time),
    [holds_at(metreqs(move(Human, Position)), Time)]).

 /*  [holds_at(neg(mounted(Human, Animal)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(metreqs(move(Human, Position)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',159).
axiom(holds_at(metreqs(move(Human, Position)), Time),
    [holds_at(neg(mounted(Human, Animal)), Time)]).

 /*  not(happens(move(Human, Position), Time)) :-
       holds_at(mounted(Human, Animal), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',159).

 /*  [holds_at(mounted(Human, Animal), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(move(Human, Position), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',159).
axiom(not(happens(move(Human, Position), Time)),
    [holds_at(mounted(Human, Animal), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:161
% [human,gate,time]
% Initiates(Open(human,gate),Opened(gate),time).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',163).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(open(Human, Gate), opened(Gate), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',163).
axiom(initiates(open(Human, Gate), opened(Gate), Time),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:164
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',165).
% [human,gate,time]
% Happens(Open(human,gate),time) ->
% !HoldsAt(Opened(gate),time) &
% (!{animal} HoldsAt(Mounted(human,animal),time)) &
% ({position}
%  (Side1(gate)=position | Side2(gate)=position) &
%  HoldsAt(Pos(human,position),time)).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:170
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',165).

 /*  happens(open(Human, Gate), Time) ->
       holds_at(neg(opened(Gate)), Time),
       not(exists([Animal],
                  holds_at(mounted(Human, Animal), Time))),
       exists([Position],
               ((equals(side1(Gate), Position);equals(side2(Gate), Position)), holds_at(pos(Human, Position), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',165).

 /*  not(happens(open(Human, Gate), Time)) :-
       (   not(holds_at(neg(opened(Gate)), Time))
       ;   holds_at(mounted(Human, Animal), Time)
       ;   not(equals(side1(Gate), Position)),
           not(equals(side2(Gate), Position))
       ;   not(holds_at(pos(Human, Position), Time))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',165).

 /*  [(holds_at(opened(Gate), Time);holds_at(mounted(Human, Animal), Time);not(equals(side1(Gate), Position)), not(equals(side2(Gate), Position));holds_at(neg(pos(Human, Position)), Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(open(Human, Gate), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',165).
axiom(not(happens(open(Human, Gate), Time)),
   
    [  (holds_at(opened(Gate), Time);holds_at(mounted(Human, Animal), Time);not(equals(side1(Gate), Position)), not(equals(side2(Gate), Position));holds_at(neg(pos(Human, Position)), Time))
    ]).

 /*  holds_at(neg(opened(Gate)), Time) :-
       happens(open(Human, Gate), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',165).

 /*  [holds_at(metreqs(open(Human, Gate)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          requires(open(Human, Gate), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',165).
axiom(requires(open(Human, Gate), Time),
    [holds_at(metreqs(open(Human, Gate)), Time)]).

 /*  [holds_at(neg(opened(Gate)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(metreqs(open(Human, Gate)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',165).
axiom(holds_at(metreqs(open(Human, Gate)), Time),
    [holds_at(neg(opened(Gate)), Time)]).

 /*  not(holds_at(mounted(Human, Animal), Time)) :-
       happens(open(Human, Gate), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',165).

 /*  [holds_at(metreqs(open(Human, Gate)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          requires(open(Human, Gate), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',165).
axiom(requires(open(Human, Gate), Time),
    [holds_at(metreqs(open(Human, Gate)), Time)]).

 /*  [holds_at(neg(mounted(Human, Animal)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(metreqs(open(Human, Gate)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',165).
axiom(holds_at(metreqs(open(Human, Gate)), Time),
    [holds_at(neg(mounted(Human, Animal)), Time)]).

 /*  holds_at(pos(Human, Position), Time) :-
       happens(open(Human, Gate), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',165).

 /*  [holds_at(metreqs(open(Human, Gate)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          requires(open(Human, Gate), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',165).
axiom(requires(open(Human, Gate), Time),
    [holds_at(metreqs(open(Human, Gate)), Time)]).

 /*  [holds_at(pos(Human, Position), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(metreqs(open(Human, Gate)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',165).
axiom(holds_at(metreqs(open(Human, Gate)), Time),
    [holds_at(pos(Human, Position), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:172
% [human,gate,time]
% Terminates(Close(human,gate),Opened(gate),time).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',174).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(close(Human, Gate), opened(Gate), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',174).
axiom(terminates(close(Human, Gate), opened(Gate), Time),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:175
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',176).
% [human,gate,time]
% Happens(Close(human,gate),time) ->
% HoldsAt(Opened(gate),time) &
% (!{animal} HoldsAt(Mounted(human,animal),time)) &
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:179
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',176).
% {position}% 
% (Side1(gate)=position | Side2(gate)=position) &
% HoldsAt(Pos(human,position),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:181
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',180).

 /*  exists([Position],
    happens(close(Human, Gate), Time) ->
       holds_at(opened(Gate), Time),
       not(exists([Animal],
                  holds_at(mounted(Human, Animal), Time))),
       (   equals(side1(Gate), Position)
       ;   equals(side2(Gate), Position)
       ),
       holds_at(pos(Human, Position), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',180).

 /*  not(happens(close(Human, Gate), Time)) :-
       (   not(holds_at(opened(Gate), Time))
       ;   holds_at(mounted(Human, Animal), Time)
       ;   not(equals(side1(Gate), Position)),
           not(equals(side2(Gate), Position))
       ;   not(holds_at(pos(Human, Position), Time))
       ),
       some(Position,
            '$kolem_Fn_109'(Human, Gate, Time, Animal)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',180).

 /*  [(holds_at(neg(opened(Gate)), Time);holds_at(mounted(Human, Animal), Time);not(equals(side1(Gate), Position)), not(equals(side2(Gate), Position));holds_at(neg(pos(Human, Position)), Time)), some(Position, '$kolem_Fn_109'(Human, Gate, Time, Animal))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(close(Human, Gate), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',180).
axiom(not(happens(close(Human, Gate), Time)),
   
    [  (holds_at(neg(opened(Gate)), Time);holds_at(mounted(Human, Animal), Time);not(equals(side1(Gate), Position)), not(equals(side2(Gate), Position));holds_at(neg(pos(Human, Position)), Time)),
      some(Position,
           '$kolem_Fn_109'(Human, Gate, Time, Animal))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',180).

 /*  holds_at(opened(Gate), Time) :-
       happens(close(Human, Gate), Time),
       some(Position,
            '$kolem_Fn_109'(Human, Gate, Time, Animal)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',180).

 /*  [happens(close(Human, Gate), Time), some(Position, '$kolem_Fn_109'(Human, Gate, Time, Animal))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(opened(Gate), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',180).
axiom(holds_at(opened(Gate), Time),
   
    [ happens(close(Human, Gate), Time),
      some(Position,
           '$kolem_Fn_109'(Human, Gate, Time, Animal))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',180).

 /*  not(holds_at(mounted(Human, Animal), Time)) :-
       happens(close(Human, Gate), Time),
       some(Position,
            '$kolem_Fn_109'(Human, Gate, Time, Animal)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',180).

 /*  [happens(close(Human, Gate), Time), some(Position, '$kolem_Fn_109'(Human, Gate, Time, Animal))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(mounted(Human, Animal)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',180).
axiom(holds_at(neg(mounted(Human, Animal)), Time),
   
    [ happens(close(Human, Gate), Time),
      some(Position,
           '$kolem_Fn_109'(Human, Gate, Time, Animal))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',180).

 /*  holds_at(pos(Human, Position), Time) :-
       happens(close(Human, Gate), Time),
       some(Position,
            '$kolem_Fn_109'(Human, Gate, Time, Animal)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',180).

 /*  [happens(close(Human, Gate), Time), some(Position, '$kolem_Fn_109'(Human, Gate, Time, Animal))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(pos(Human, Position), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',180).
axiom(holds_at(pos(Human, Position), Time),
   
    [ happens(close(Human, Gate), Time),
      some(Position,
           '$kolem_Fn_109'(Human, Gate, Time, Animal))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:183
% [human,animal,position,time]
% HoldsAt(Mounted(human,animal),time) &
% HoldsAt(Pos(animal,position),time) ->
% HoldsAt(Pos(human,position),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:186
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',185).

 /*  holds_at(mounted(Human, Animal), Time), holds_at(pos(Animal, Position), Time) ->
       holds_at(pos(Human, Position), Time).
 */

 /*  holds_at(pos(Human, Position), Time) :-
       holds_at(mounted(Human, Animal), Time),
       holds_at(pos(Animal, Position), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',185).

 /*  [holds_at(mounted(Human, Animal), Time), holds_at(pos(Animal, Position), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(pos(Human, Position), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',185).
axiom(holds_at(pos(Human, Position), Time),
   
    [ holds_at(mounted(Human, Animal), Time),
      holds_at(pos(Animal, Position), Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',185).

 /*  not(holds_at(mounted(Human, Animal), Time)) :-
       holds_at(pos(Animal, Position), Time),
       not(holds_at(pos(Human, Position), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',185).

 /*  [holds_at(pos(Animal, Position), Time), holds_at(neg(pos(Human, Position)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(mounted(Human, Animal)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',185).
axiom(holds_at(neg(mounted(Human, Animal)), Time),
   
    [ holds_at(pos(Animal, Position), Time),
      holds_at(neg(pos(Human, Position)), Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',185).

 /*  not(holds_at(pos(Animal, Position), Time)) :-
       holds_at(mounted(Human, Animal), Time),
       not(holds_at(pos(Human, Position), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',185).

 /*  [holds_at(mounted(Human, Animal), Time), holds_at(neg(pos(Human, Position)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(pos(Animal, Position)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',185).
axiom(holds_at(neg(pos(Animal, Position)), Time),
   
    [ holds_at(mounted(Human, Animal), Time),
      holds_at(neg(pos(Human, Position)), Time)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:188
% [animal,time]
% HoldsAt(Moves(animal),time) <->
% ({position}
%  HoldsAt(Pos(animal,position),time) &
%  !HoldsAt(Pos(animal,position),time+1)).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:192
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',190).

 /*  holds_at(moves(Animal), Time) <->
       exists([Position],
               (holds_at(pos(Animal, Position), Time), holds_at(neg(pos(Animal, Position)), Time+1))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',190).

 /*  [holds_at, moves] <->
       [exists, holds_at, pos, holds_at, neg, pos, +].
 */

 /*  holds_at(moves(Animal), Time) ->
       exists([Position],
               (holds_at(pos(Animal, Position), Time), holds_at(neg(pos(Animal, Position)), Time+1))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',190).

 /*  not(holds_at(moves(Animal), Time)) :-
       (   not(holds_at(pos(Animal, Position), Time))
       ;   not(holds_at(neg(pos(Animal, Position)), Time+1))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',190).

 /*  [(holds_at(neg(pos(Animal, Position)), Time);holds_at(pos(Animal, Position), Time3)), b(Time, Time3), ignore(Time+1==Time3)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time3],
          holds_at(neg(moves(Animal)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',190).
axiom(holds_at(neg(moves(Animal)), Time),
   
    [  (holds_at(neg(pos(Animal, Position)), Time);holds_at(pos(Animal, Position), Time3)),
      b(Time, Time3)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',190).

 /*  holds_at(pos(Animal, Position), Time) :-
       holds_at(moves(Animal), Time).
 */

 /*  [holds_at(moves(Animal), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(pos(Animal, Position), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',190).
axiom(holds_at(pos(Animal, Position), Time),
    [holds_at(moves(Animal), Time)]).

 /*  holds_at(neg(pos(Animal, Position)), Time+1) :-
       holds_at(moves(Animal), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',190).

 /*  [holds_at(moves(Animal), Time), b(Time, Time4), ignore(Time+1==Time4)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time4],
          holds_at(neg(pos(Animal, Position)), Time4)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',190).
axiom(holds_at(neg(pos(Animal, Position)), Time4),
    [holds_at(moves(Animal), Time), b(Time, Time4)]).

 /*  exists([Position],  (holds_at(pos(Animal, Position), Time), holds_at(neg(pos(Animal, Position)), Time+1))) ->
       holds_at(moves(Animal), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',190).

 /*  holds_at(moves(Animal), Time) :-
       holds_at(pos(Animal, Position), Time),
       holds_at(neg(pos(Animal, Position)), Time+1).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',190).

 /*  [holds_at(pos(Animal, Position), Time), holds_at(neg(pos(Animal, Position)), Time5), b(Time, Time5), ignore(Time+1==Time5)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time5],
          holds_at(moves(Animal), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',190).
axiom(holds_at(moves(Animal), Time),
   
    [ holds_at(pos(Animal, Position), Time),
      holds_at(neg(pos(Animal, Position)), Time5),
      b(Time, Time5)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',190).

 /*  not(holds_at(pos(Animal, Position), Time)) :-
       holds_at(neg(pos(Animal, Position)), Time+1),
       not(holds_at(moves(Animal), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',190).

 /*  [holds_at(neg(pos(Animal, Position)), Time6), holds_at(neg(moves(Animal)), Time), b(Time, Time6), ignore(Time+1==Time6)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time6],
          holds_at(neg(pos(Animal, Position)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',190).
axiom(holds_at(neg(pos(Animal, Position)), Time),
   
    [ holds_at(neg(pos(Animal, Position)), Time6),
      holds_at(neg(moves(Animal)), Time),
      b(Time, Time6)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',190).

 /*  not(holds_at(neg(pos(Animal, Position)), Time+1)) :-
       holds_at(pos(Animal, Position), Time),
       not(holds_at(moves(Animal), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',190).

 /*  [holds_at(pos(Animal, Position), Time), holds_at(neg(moves(Animal)), Time), b(Time, Time7), ignore(Time+1==Time7)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time7],
          holds_at(pos(Animal, Position), Time7)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',190).
axiom(holds_at(pos(Animal, Position), Time7),
   
    [ holds_at(pos(Animal, Position), Time),
      holds_at(neg(moves(Animal)), Time),
      b(Time, Time7)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:194
% [human,time]
% HoldsAt(MountFails(human),time) <->
% ({animal}
%   Happens(Mount(human,animal),time) &
%   HoldsAt(Moves(animal),time)).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:198
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',196).

 /*  holds_at(mountFails(Human), Time) <->
       exists([Animal],
               (happens(mount(Human, Animal), Time), holds_at(moves(Animal), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',196).

 /*  [holds_at, mountFails] <->
       [exists, happens, mount, holds_at, moves].
 */

 /*  holds_at(mountFails(Human), Time) ->
       exists([Animal],
               (happens(mount(Human, Animal), Time), holds_at(moves(Animal), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',196).

 /*  not(holds_at(mountFails(Human), Time)) :-
       (   not(happens(mount(Human, Animal), Time))
       ;   not(holds_at(moves(Animal), Time))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',196).

 /*  [(not(happens(mount(Human, Animal), Time));holds_at(neg(moves(Animal)), Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(mountFails(Human)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',196).
axiom(holds_at(neg(mountFails(Human)), Time),
   
    [  (not(happens(mount(Human, Animal), Time));holds_at(neg(moves(Animal)), Time))
    ]).

 /*  happens(mount(Human, Animal), Time) :-
       holds_at(mountFails(Human), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',196).

 /*  [holds_at(mountFails(Human), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          happens(mount(Human, Animal), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',196).
axiom(happens(mount(Human, Animal), Time),
    [holds_at(mountFails(Human), Time)]).

 /*  holds_at(moves(Animal), Time) :-
       holds_at(mountFails(Human), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',196).

 /*  [holds_at(mountFails(Human), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(moves(Animal), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',196).
axiom(holds_at(moves(Animal), Time),
    [holds_at(mountFails(Human), Time)]).

 /*  exists([Animal],  (happens(mount(Human, Animal), Time), holds_at(moves(Animal), Time))) ->
       holds_at(mountFails(Human), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',196).

 /*  holds_at(mountFails(Human), Time) :-
       happens(mount(Human, Animal), Time),
       holds_at(moves(Animal), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',196).

 /*  [happens(mount(Human, Animal), Time), holds_at(moves(Animal), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(mountFails(Human), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',196).
axiom(holds_at(mountFails(Human), Time),
   
    [ happens(mount(Human, Animal), Time),
      holds_at(moves(Animal), Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',196).

 /*  not(happens(mount(Human, Animal), Time)) :-
       holds_at(moves(Animal), Time),
       not(holds_at(mountFails(Human), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',196).

 /*  [holds_at(moves(Animal), Time), holds_at(neg(mountFails(Human)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(mount(Human, Animal), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',196).
axiom(not(happens(mount(Human, Animal), Time)),
   
    [ holds_at(moves(Animal), Time),
      holds_at(neg(mountFails(Human)), Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',196).

 /*  not(holds_at(moves(Animal), Time)) :-
       happens(mount(Human, Animal), Time),
       not(holds_at(mountFails(Human), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',196).

 /*  [happens(mount(Human, Animal), Time), holds_at(neg(mountFails(Human)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(moves(Animal)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',196).
axiom(holds_at(neg(moves(Animal)), Time),
   
    [ happens(mount(Human, Animal), Time),
      holds_at(neg(mountFails(Human)), Time)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:200
% [human,animal,position,time]
% !HoldsAt(Moves(animal),time) ->
% Releases(Mount(human,animal),Pos(human,position),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:202

 /*  [holds_at(neg(moves(Animal)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          releases(mount(Human, Animal),
                   pos(Human, Position),
                   Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',202).
axiom(releases(mount(Human, Animal), pos(Human, Position), Time),
    [holds_at(neg(moves(Animal)), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:204
% [human,animal,time]
% !HoldsAt(Moves(animal),time) ->
% Initiates(Mount(human,animal),Mounted(human,animal),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:206

 /*  [holds_at(neg(moves(Animal)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(mount(Human, Animal),
                    mounted(Human, Animal),
                    Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',206).
axiom(initiates(mount(Human, Animal), mounted(Human, Animal), Time),
    [holds_at(neg(moves(Animal)), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:208
% [human,animal,position,time]
% HoldsAt(Pos(animal,position),time) &
% HoldsAt(Moves(animal),time) ->
% Initiates(Mount(human,animal),Pos(human,position),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:211
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',210).

 /*  [holds_at(pos(Animal, Position), Time), holds_at(moves(Animal), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(mount(Human, Animal),
                    pos(Human, Position),
                    Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',210).
axiom(initiates(mount(Human, Animal), pos(Human, Position), Time),
   
    [ holds_at(pos(Animal, Position), Time),
      holds_at(moves(Animal), Time)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:213
% [human,animal,position,time]
% HoldsAt(Pos(human,position),time) &
% HoldsAt(Moves(animal),time) ->
% Terminates(Mount(human,animal),Pos(human,position),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:216
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',215).

 /*  [holds_at(pos(Human, Position), Time), holds_at(moves(Animal), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(mount(Human, Animal),
                     pos(Human, Position),
                     Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',215).
axiom(terminates(mount(Human, Animal), pos(Human, Position), Time),
   
    [ holds_at(pos(Human, Position), Time),
      holds_at(moves(Animal), Time)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:218
% [human,animal,time]
% Happens(Mount(human,animal),time) ->
% Large(animal).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:220

 /*  happens(mount(Human, Animal), Time) ->
       large(Animal).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',220).

 /*  large(Animal) :-
       happens(mount(Human, Animal), Time).
 */

 /*  [holds_at(metreqs(mount(Human, Animal)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          requires(mount(Human, Animal), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',220).
axiom(requires(mount(Human, Animal), Time),
    [holds_at(metreqs(mount(Human, Animal)), Time)]).

 /*  [large(Animal)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(metreqs(mount(Human, Animal)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',220).
axiom(holds_at(metreqs(mount(Human, Animal)), Time),
    [large(Animal)]).

 /*  not(happens(mount(Human, Animal), Time)) :-
       not(large(Animal)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',220).

 /*  [not(large(Animal))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(mount(Human, Animal), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',220).
axiom(not(happens(mount(Human, Animal), Time)),
    [not(large(Animal))]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:222
% [human,animal,time]
% HoldsAt(Mounted(human,animal),time) ->
% Large(animal).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:224

 /*  holds_at(mounted(Human, Animal), Time) ->
       large(Animal).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',224).

 /*  large(Animal) :-
       holds_at(mounted(Human, Animal), Time).
 */

 /*  [holds_at(mounted(Human, Animal), Time)] ->
       ta(Time, tvs1=[Time], tvs2=[Time], large(Animal)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',224).
axiom(large(Animal),
    [holds_at(mounted(Human, Animal), Time)]).

 /*  not(holds_at(mounted(Human, Animal), Time)) :-
       not(large(Animal)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',224).

 /*  [not(large(Animal))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(mounted(Human, Animal)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',224).
axiom(holds_at(neg(mounted(Human, Animal)), Time),
    [not(large(Animal))]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:226
% [human1,human2,time]
% Happens(Mount(human1,human2),time) ->
% !Large(human1).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:228

 /*  happens(mount(Human1, Human2), Time) ->
       not(large(Human1)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',228).

 /*  not(large(Human1)) :-
       happens(mount(Human1, Human2), Time).
 */

 /*  [holds_at(metreqs(mount(Human1, Human2)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          requires(mount(Human1, Human2), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',228).
axiom(requires(mount(Human1, Human2), Time),
    [holds_at(metreqs(mount(Human1, Human2)), Time)]).

 /*  [not(large(Human1))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(metreqs(mount(Human1, Human2)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',228).
axiom(holds_at(metreqs(mount(Human1, Human2)), Time),
    [not(large(Human1))]).

 /*  not(happens(mount(Human1, Human2), Time)) :-
       large(Human1).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',228).

 /*  [large(Human1)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(mount(Human1, Human2), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',228).
axiom(not(happens(mount(Human1, Human2), Time)),
    [large(Human1)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:230
% [human1,human2,time]
% HoldsAt(Mounted(human1,human2),time) ->
% !Large(human1).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:232

 /*  holds_at(mounted(Human1, Human2), Time) ->
       not(large(Human1)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',232).

 /*  not(large(Human1)) :-
       holds_at(mounted(Human1, Human2), Time).
 */

 /*  [holds_at(mounted(Human1, Human2), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(large(Human1))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',232).
axiom(not(large(Human1)),
    [holds_at(mounted(Human1, Human2), Time)]).

 /*  not(holds_at(mounted(Human1, Human2), Time)) :-
       large(Human1).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',232).

 /*  [large(Human1)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(mounted(Human1, Human2)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',232).
axiom(holds_at(neg(mounted(Human1, Human2)), Time),
    [large(Human1)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:234
% [human,animal,time]
% Happens(Mount(human,animal),time) ->
% !{human1} human1!=human & HoldsAt(Mounted(human1,animal),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:236

 /*  happens(mount(Human, Animal), Time) ->
       not(exists([Human1],
                   (diff(Human1, Human), holds_at(mounted(Human1, Animal), Time)))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',236).

 /*  not(holds_at(mounted(Human1, Animal), Time)) :-
       diff(Human1, Human),
       happens(mount(Human, Animal), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',236).

 /*  [diff(Human1, Human), happens(mount(Human, Animal), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(mounted(Human1, Animal)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',236).
axiom(holds_at(neg(mounted(Human1, Animal)), Time),
   
    [ diff(Human1, Human),
      happens(mount(Human, Animal), Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',236).

 /*  not(happens(mount(Human, Animal), Time)) :-
       diff(Human1, Human),
       holds_at(mounted(Human1, Animal), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',236).

 /*  [diff(Human1, Human), holds_at(mounted(Human1, Animal), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(mount(Human, Animal), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',236).
axiom(not(happens(mount(Human, Animal), Time)),
   
    [ diff(Human, Human1),
      holds_at(mounted(Human1, Animal), Time)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:238
% [human1,human2,animal,time]
% HoldsAt(Mounted(human1,animal),time) &
% HoldsAt(Mounted(human2,animal),time) ->
% human1=human2.
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:241
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',240).

 /*  holds_at(mounted(Human1, Animal), Time), holds_at(mounted(Human2, Animal), Time) ->
       equals(Human1, Human2).
 */

 /*  not(holds_at(mounted(Human1, Animal), Time)) :-
       holds_at(mounted(Human2, Animal), Time),
       not(equals(Human1, Human2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',240).

 /*  [holds_at(mounted(Human2, Animal), Time), not(equals(Human1, Human2))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(mounted(Human1, Animal)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',240).
axiom(holds_at(neg(mounted(Human1, Animal)), Time),
   
    [ holds_at(mounted(Human2, Animal), Time),
      not(equals(Human1, Human2))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',240).

 /*  not(holds_at(mounted(Human2, Animal), Time)) :-
       holds_at(mounted(Human1, Animal), Time),
       not(equals(Human1, Human2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',240).

 /*  [holds_at(mounted(Human1, Animal), Time), not(equals(Human1, Human2))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(mounted(Human2, Animal)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',240).
axiom(holds_at(neg(mounted(Human2, Animal)), Time),
   
    [ holds_at(mounted(Human1, Animal), Time),
      not(equals(Human2, Human1))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:243
% [human,animal,time]
% Happens(Mount(human,animal),time) ->
% !{human1} human1!=human & HoldsAt(Mounted(human1,human),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:245

 /*  happens(mount(Human, Animal), Time) ->
       not(exists([Human1],
                   (diff(Human1, Human), holds_at(mounted(Human1, Human), Time)))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',245).

 /*  not(holds_at(mounted(Human1, Human), Time)) :-
       diff(Human1, Human),
       happens(mount(Human, Animal), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',245).

 /*  [diff(Human1, Human), happens(mount(Human, Animal), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(mounted(Human1, Human)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',245).
axiom(holds_at(neg(mounted(Human1, Human)), Time),
   
    [ diff(Human1, Human),
      happens(mount(Human, Animal), Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',245).

 /*  not(happens(mount(Human, Animal), Time)) :-
       diff(Human1, Human),
       holds_at(mounted(Human1, Human), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',245).

 /*  [diff(Human1, Human), holds_at(mounted(Human1, Human), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(mount(Human, Animal), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',245).
axiom(not(happens(mount(Human, Animal), Time)),
   
    [ diff(Human, Human1),
      holds_at(mounted(Human1, Human), Time)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:247
% [human1,human2,time]
% Happens(Mount(human1,human2),time) ->
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:249
% {animal}%  HoldsAt(Mounted(human2,animal),time).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',249).

 /*  exists([Animal],
    happens(mount(Human1, Human2), Time) ->
       holds_at(mounted(Human2, Animal), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',249).

 /*  holds_at(mounted(Human2, Animal), Time) :-
       happens(mount(Human1, Human2), Time),
       some(Animal, '$kolem_Fn_117'(Human1, Human2, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',249).

 /*  [happens(mount(Human1, Human2), Time), some(Animal, '$kolem_Fn_117'(Human1, Human2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(mounted(Human2, Animal), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',249).
axiom(holds_at(mounted(Human2, Animal), Time),
   
    [ happens(mount(Human1, Human2), Time),
      some(Animal, '$kolem_Fn_117'(Human1, Human2, Time))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',249).

 /*  not(happens(mount(Human1, Human2), Time)) :-
       not(holds_at(mounted(Human2, Animal), Time)),
       some(Animal, '$kolem_Fn_117'(Human1, Human2, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',249).

 /*  [holds_at(neg(mounted(Human2, Animal)), Time), some(Animal, '$kolem_Fn_117'(Human1, Human2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(mount(Human1, Human2), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',249).
axiom(not(happens(mount(Human1, Human2), Time)),
   
    [ holds_at(neg(mounted(Human2, Animal)), Time),
      some(Animal, '$kolem_Fn_117'(Human1, Human2, Time))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:251
% [human1,human2,time]
% HoldsAt(Mounted(human1,human2),time) ->
% !{animal} HoldsAt(Mounted(human2,animal),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:253

 /*  holds_at(mounted(Human1, Human2), Time) ->
       not(exists([Animal],
                  holds_at(mounted(Human2, Animal), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',253).

 /*  not(holds_at(mounted(Human2, Animal), Time)) :-
       holds_at(mounted(Human1, Human2), Time).
 */

 /*  [holds_at(mounted(Human1, Human2), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(mounted(Human2, Animal)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',253).
axiom(holds_at(neg(mounted(Human2, Animal)), Time),
    [holds_at(mounted(Human1, Human2), Time)]).

 /*  not(holds_at(mounted(Human1, Human2), Time)) :-
       holds_at(mounted(Human2, Animal), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',253).

 /*  [holds_at(mounted(Human2, Animal), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(mounted(Human1, Human2)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',253).
axiom(holds_at(neg(mounted(Human1, Human2)), Time),
    [holds_at(mounted(Human2, Animal), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:255
% [human,animal,time]
% Happens(Mount(human,animal),time) ->
% !{animal1} HoldsAt(Mounted(human,animal1),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:257

 /*  happens(mount(Human, Animal), Time) ->
       not(exists([Animal1],
                  holds_at(mounted(Human, Animal1), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',257).

 /*  not(holds_at(mounted(Human, Animal1), Time)) :-
       happens(mount(Human, Animal), Time).
 */

 /*  [holds_at(metreqs(mount(Human, Animal)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          requires(mount(Human, Animal), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',257).
axiom(requires(mount(Human, Animal), Time),
    [holds_at(metreqs(mount(Human, Animal)), Time)]).

 /*  [holds_at(neg(mounted(Human, Animal1)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(metreqs(mount(Human, Animal)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',257).
axiom(holds_at(metreqs(mount(Human, Animal)), Time),
    [holds_at(neg(mounted(Human, Animal1)), Time)]).

 /*  not(happens(mount(Human, Animal), Time)) :-
       holds_at(mounted(Human, Animal1), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',257).

 /*  [holds_at(mounted(Human, Animal1), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(mount(Human, Animal), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',257).
axiom(not(happens(mount(Human, Animal), Time)),
    [holds_at(mounted(Human, Animal1), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:259
% [human,animal,time]
% !HoldsAt(Moves(animal),time) ->
% Terminates(GetOff(human,animal),Mounted(human,animal),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:261

 /*  [holds_at(neg(moves(Animal)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(getOff(Human, Animal),
                     mounted(Human, Animal),
                     Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',261).
axiom(terminates(getOff(Human, Animal), mounted(Human, Animal), Time),
    [holds_at(neg(moves(Animal)), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:263
% [human,animal,position,time]
% !HoldsAt(Moves(animal),time) &
% HoldsAt(PosDeterminingFluent(human,position),time) ->
% Initiates(GetOff(human,animal),Pos(human,position),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:266
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',265).

 /*  [holds_at(neg(moves(Animal)), Time), holds_at(posDeterminingFluent(Human, Position), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(getOff(Human, Animal),
                    pos(Human, Position),
                    Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',265).
axiom(initiates(getOff(Human, Animal), pos(Human, Position), Time),
   
    [ holds_at(neg(moves(Animal)), Time),
      holds_at(posDeterminingFluent(Human, Position), Time)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:268
% [human,animal,position,time]
% !HoldsAt(Moves(animal),time) &
% HoldsAt(Pos(human,position),time) ->
% Terminates(GetOff(human,animal),Pos(human,position),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:271
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',270).

 /*  [holds_at(neg(moves(Animal)), Time), holds_at(pos(Human, Position), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(getOff(Human, Animal),
                     pos(Human, Position),
                     Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',270).
axiom(terminates(getOff(Human, Animal), pos(Human, Position), Time),
   
    [ holds_at(neg(moves(Animal)), Time),
      holds_at(pos(Human, Position), Time)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:273
% [human,animal,position1,position2,time]
% !HoldsAt(Moves(animal),time) &
% HoldsAt(Pos(human,position1),time) &
% position1!=position2 ->
% Terminates(GetOff(human,animal),Pos(human,position2),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:277
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',275).

 /*  [holds_at(neg(moves(Animal)), Time), holds_at(pos(Human, Position1), Time), diff(Position1, Position2)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(getOff(Human, Animal),
                     pos(Human, Position2),
                     Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',275).
axiom(terminates(getOff(Human, Animal), pos(Human, Position2), Time),
   
    [ holds_at(neg(moves(Animal)), Time),
      holds_at(pos(Human, Position1), Time),
      diff(Position2, Position1)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:279
% [human,animal,time]
% Happens(GetOff(human,animal),time) ->
% HoldsAt(Mounted(human,animal),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:281

 /*  happens(getOff(Human, Animal), Time) ->
       holds_at(mounted(Human, Animal), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',281).

 /*  holds_at(mounted(Human, Animal), Time) :-
       happens(getOff(Human, Animal), Time).
 */

 /*  [holds_at(metreqs(getOff(Human, Animal)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          requires(getOff(Human, Animal), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',281).
axiom(requires(getOff(Human, Animal), Time),
    [holds_at(metreqs(getOff(Human, Animal)), Time)]).

 /*  [holds_at(mounted(Human, Animal), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(metreqs(getOff(Human, Animal)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',281).
axiom(holds_at(metreqs(getOff(Human, Animal)), Time),
    [holds_at(mounted(Human, Animal), Time)]).

 /*  not(happens(getOff(Human, Animal), Time)) :-
       not(holds_at(mounted(Human, Animal), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',281).

 /*  [holds_at(neg(mounted(Human, Animal)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(getOff(Human, Animal), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',281).
axiom(not(happens(getOff(Human, Animal), Time)),
    [holds_at(neg(mounted(Human, Animal)), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:283
% [animal1,human,time]
% HoldsAt(ThrowOffFails(animal1,human),time) <->
% ({position,animal2}
%  animal2!=human &
%  HoldsAt(PosDeterminingFluent(human,position),time) &
%  Large(animal2) &
%  HoldsAt(Pos(animal2,position),time+1)).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:289
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',285).

 /*  holds_at(throwOffFails(Animal1, Human), Time) <->
       exists([Position, Animal2],
               (diff(Animal2, Human), holds_at(posDeterminingFluent(Human, Position), Time), large(Animal2), holds_at(pos(Animal2, Position), Time+1))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',285).

 /*  [holds_at, throwOffFails] <->
       [exists, diff, holds_at, posDeterminingFluent, large, holds_at, pos, +].
 */

 /*  holds_at(throwOffFails(Animal1, Human), Time) ->
       exists([Position, Animal2],
               (diff(Animal2, Human), holds_at(posDeterminingFluent(Human, Position), Time), large(Animal2), holds_at(pos(Animal2, Position), Time+1))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',285).

 /*  not(holds_at(throwOffFails(Animal1, Human), Time)) :-
       (   not(diff(Animal2, Human))
       ;   not(holds_at(posDeterminingFluent(Human, Position),
                        Time))
       ;   not(large(Animal2))
       ;   not(holds_at(pos(Animal2, Position), Time+1))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',285).

 /*  [(equals(Animal2, Human);holds_at(neg(posDeterminingFluent(Human, Position)), Time);not(large(Animal2));holds_at(neg(pos(Animal2, Position)), Time5)), b(Time, Time5), ignore(Time+1==Time5)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time5],
          holds_at(neg(throwOffFails(Animal1, Human)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',285).
axiom(holds_at(neg(throwOffFails(Animal1, Human)), Time),
   
    [  (equals(Human, Animal2);holds_at(neg(posDeterminingFluent(Human, Position)), Time);not(large(Animal2));holds_at(neg(pos(Animal2, Position)), Time5)),
      b(Time, Time5)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',285).

 /*  holds_at(posDeterminingFluent(Human, Position), Time) :-
       holds_at(throwOffFails(Animal1, Human), Time).
 */

 /*  [holds_at(throwOffFails(Animal1, Human), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(posDeterminingFluent(Human, Position), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',285).
axiom(holds_at(posDeterminingFluent(Human, Position), Time),
    [holds_at(throwOffFails(Animal1, Human), Time)]).

 /*  large(Animal2) :-
       holds_at(throwOffFails(Animal1, Human), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',285).

 /*  [holds_at(throwOffFails(Animal1, Human), Time)] ->
       ta(Time, tvs1=[Time], tvs2=[Time], large(Animal2)).
 */
axiom(large(Animal2),
    [holds_at(throwOffFails(Animal1, Human), Time)]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',285).

 /*  holds_at(pos(Animal2, Position), Time+1) :-
       holds_at(throwOffFails(Animal1, Human), Time).
 */

 /*  [holds_at(throwOffFails(Animal1, Human), Time), b(Time, Time6), ignore(Time+1==Time6)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time6],
          holds_at(pos(Animal2, Position), Time6)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',285).
axiom(holds_at(pos(Animal2, Position), Time6),
   
    [ holds_at(throwOffFails(Animal1, Human), Time),
      b(Time, Time6)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',285).

 /*  exists([Position, Animal2],  (diff(Animal2, Human), holds_at(posDeterminingFluent(Human, Position), Time), large(Animal2), holds_at(pos(Animal2, Position), Time+1))) ->
       holds_at(throwOffFails(Animal1, Human), Time).
 */

 /*  holds_at(throwOffFails(Animal1, Human), Time) :-
       diff(Animal2, Human),
       holds_at(posDeterminingFluent(Human, Position), Time),
       large(Animal2),
       holds_at(pos(Animal2, Position), Time+1).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',285).

 /*  [diff(Animal2, Human), holds_at(posDeterminingFluent(Human, Position), Time), large(Animal2), holds_at(pos(Animal2, Position), Time7), b(Time, Time7), ignore(Time+1==Time7)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time7],
          holds_at(throwOffFails(Animal1, Human), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',285).
axiom(holds_at(throwOffFails(Animal1, Human), Time),
   
    [ diff(Human, Animal2),
      holds_at(posDeterminingFluent(Human, Position), Time),
      large(Animal2),
      holds_at(pos(Animal2, Position), Time7),
      b(Time, Time7)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',285).

 /*  not(holds_at(posDeterminingFluent(Human, Position), Time)) :-
       ( large(Animal2),
         holds_at(pos(Animal2, Position), Time+1)
       ),
       diff(Animal2, Human),
       not(holds_at(throwOffFails(Animal1, Human), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',285).

 /*  [large(Animal2), holds_at(pos(Animal2, Position), Time8), diff(Animal2, Human), holds_at(neg(throwOffFails(Animal1, Human)), Time), b(Time, Time8), ignore(Time+1==Time8)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time8],
          holds_at(neg(posDeterminingFluent(Human, Position)),
                   Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',285).
axiom(holds_at(neg(posDeterminingFluent(Human, Position)), Time),
   
    [ large(Animal2),
      holds_at(pos(Animal2, Position), Time8),
      diff(Human, Animal2),
      holds_at(neg(throwOffFails(Animal1, Human)), Time),
      b(Time, Time8)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',285).

 /*  not(large(Animal2)) :-
       holds_at(pos(Animal2, Position), Time+1),
       holds_at(posDeterminingFluent(Human, Position), Time),
       diff(Animal2, Human),
       not(holds_at(throwOffFails(Animal1, Human), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',285).

 /*  [holds_at(pos(Animal2, Position), Time9), holds_at(posDeterminingFluent(Human, Position), Time), diff(Animal2, Human), holds_at(neg(throwOffFails(Animal1, Human)), Time), b(Time, Time9), ignore(Time+1==Time9)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time9],
          not(large(Animal2))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',285).
axiom(not(large(Animal2)),
   
    [ holds_at(pos(Animal2, Position), Time9),
      holds_at(posDeterminingFluent(Human, Position), Time),
      diff(Animal2, Human),
      holds_at(neg(throwOffFails(Animal1, Human)), Time),
      b(Time, Time9)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',285).

 /*  not(holds_at(pos(Animal2, Position), Time+1)) :-
       large(Animal2),
       holds_at(posDeterminingFluent(Human, Position), Time),
       diff(Animal2, Human),
       not(holds_at(throwOffFails(Animal1, Human), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',285).

 /*  [large(Animal2), holds_at(posDeterminingFluent(Human, Position), Time), diff(Animal2, Human), holds_at(neg(throwOffFails(Animal1, Human)), Time), b(Time, Time10), ignore(Time+1==Time10)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time10],
          holds_at(neg(pos(Animal2, Position)), Time10)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',285).
axiom(holds_at(neg(pos(Animal2, Position)), Time10),
   
    [ large(Animal2),
      holds_at(posDeterminingFluent(Human, Position), Time),
      diff(Animal2, Human),
      holds_at(neg(throwOffFails(Animal1, Human)), Time),
      b(Time, Time10)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:291
% [animal,human,position,time]
% HoldsAt(PosDeterminingFluent(human,position),time) &
% !HoldsAt(ThrowOffFails(animal,human),time) ->
% Initiates(ThrowOff(animal,human),Pos(human,position),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:294
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',293).

 /*  [holds_at(posDeterminingFluent(Human, Position), Time), holds_at(neg(throwOffFails(Animal, Human)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(throwOff(Animal, Human),
                    pos(Human, Position),
                    Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',293).
axiom(initiates(throwOff(Animal, Human), pos(Human, Position), Time),
   
    [ holds_at(posDeterminingFluent(Human, Position), Time),
      holds_at(neg(throwOffFails(Animal, Human)), Time)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:296
% [animal,human,position,time]
% HoldsAt(Pos(human,position),time) &
% !HoldsAt(ThrowOffFails(animal,human),time) ->
% Terminates(ThrowOff(animal,human),Pos(human,position),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:299
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',298).

 /*  [holds_at(pos(Human, Position), Time), holds_at(neg(throwOffFails(Animal, Human)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(throwOff(Animal, Human),
                     pos(Human, Position),
                     Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',298).
axiom(terminates(throwOff(Animal, Human), pos(Human, Position), Time),
   
    [ holds_at(pos(Human, Position), Time),
      holds_at(neg(throwOffFails(Animal, Human)), Time)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:301
% [animal,human,position1,position2,time]
% !HoldsAt(ThrowOffFails(animal,human),time) &
% HoldsAt(Pos(human,position1),time) &
% !HoldsAt(PosDeterminingFluent(human,position2),time) &
% position1!=position2 ->
% Terminates(ThrowOff(animal,human),Pos(human,position2),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:306
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',303).

 /*  [holds_at(neg(throwOffFails(Animal, Human)), Time), holds_at(pos(Human, Position1), Time), holds_at(neg(posDeterminingFluent(Human, Position2)), Time), diff(Position1, Position2)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(throwOff(Animal, Human),
                     pos(Human, Position2),
                     Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',303).
axiom(terminates(throwOff(Animal, Human), pos(Human, Position2), Time),
   
    [ holds_at(neg(throwOffFails(Animal, Human)), Time),
      holds_at(pos(Human, Position1), Time),
      holds_at(neg(posDeterminingFluent(Human, Position2)),
               Time),
      diff(Position2, Position1)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:308
% [human,time]
% (!{animal} Happens(ThrowOff(animal,human),time) |
%            Happens(GetOff(human,animal),time)) ->
% HoldsAt(PosDeterminingFluent(human,1),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:311
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',310).

 /*  not(exists([Animal],  (happens(throwOff(Animal, Human), Time);happens(getOff(Human, Animal), Time)))) ->
       holds_at(posDeterminingFluent(Human, 1), Time).
 */

 /*  holds_at(posDeterminingFluent(Human, 1), Time) :-
       not(happens(throwOff(Animal, Human), Time)),
       not(happens(getOff(Human, Animal), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',310).

 /*  [not(happens(throwOff(Animal, Human), Time)), not(happens(getOff(Human, Animal), Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(posDeterminingFluent(Human, 1), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',310).
axiom(holds_at(posDeterminingFluent(Human, 1), Time),
   
    [ not(happens(throwOff(Animal, Human), Time)),
      not(happens(getOff(Human, Animal), Time))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',310).

 /*  happens(throwOff(Animal, Human), Time) :-
       not(happens(getOff(Human, Animal), Time)),
       not(holds_at(posDeterminingFluent(Human, 1), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',310).

 /*  [not(happens(getOff(Human, Animal), Time)), holds_at(neg(posDeterminingFluent(Human, 1)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          happens(throwOff(Animal, Human), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',310).
axiom(happens(throwOff(Animal, Human), Time),
   
    [ not(happens(getOff(Human, Animal), Time)),
      holds_at(neg(posDeterminingFluent(Human, 1)), Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',310).

 /*  happens(getOff(Human, Animal), Time) :-
       not(happens(throwOff(Animal, Human), Time)),
       not(holds_at(posDeterminingFluent(Human, 1), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',310).

 /*  [not(happens(throwOff(Animal, Human), Time)), holds_at(neg(posDeterminingFluent(Human, 1)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          happens(getOff(Human, Animal), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',310).
axiom(happens(getOff(Human, Animal), Time),
   
    [ not(happens(throwOff(Animal, Human), Time)),
      holds_at(neg(posDeterminingFluent(Human, 1)), Time)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:313
% [human,position,animal1,animal2,time]
% HoldsAt(PosDeterminingFluent(human,position),time) &
% HoldsAt(ThrowOffFails(animal1,human),time) &
% HoldsAt(Pos(animal2,position),time) ->
% Initiates(ThrowOff(animal1,human),Mounted(human,animal2),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:317
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',315).

 /*  [holds_at(posDeterminingFluent(Human, Position), Time), holds_at(throwOffFails(Animal1, Human), Time), holds_at(pos(Animal2, Position), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(throwOff(Animal1, Human),
                    mounted(Human, Animal2),
                    Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',315).
axiom(initiates(throwOff(Animal1, Human), mounted(Human, Animal2), Time),
   
    [ holds_at(posDeterminingFluent(Human, Position), Time),
      holds_at(throwOffFails(Animal1, Human), Time),
      holds_at(pos(Animal2, Position), Time)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:319
% [human,animal,time]
% !HoldsAt(ThrowOffFails(animal,human),time) ->
% Terminates(ThrowOff(animal,human),Mounted(human,animal),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:321

 /*  [holds_at(neg(throwOffFails(Animal, Human)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(throwOff(Animal, Human),
                     mounted(Human, Animal),
                     Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',321).
axiom(terminates(throwOff(Animal, Human), mounted(Human, Animal), Time),
    [holds_at(neg(throwOffFails(Animal, Human)), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:323
% [animal,human,time]
% Happens(ThrowOff(animal,human),time) ->
% HoldsAt(Mounted(human,animal),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:325

 /*  happens(throwOff(Animal, Human), Time) ->
       holds_at(mounted(Human, Animal), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',325).

 /*  holds_at(mounted(Human, Animal), Time) :-
       happens(throwOff(Animal, Human), Time).
 */

 /*  [holds_at(metreqs(throwOff(Animal, Human)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          requires(throwOff(Animal, Human), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',325).
axiom(requires(throwOff(Animal, Human), Time),
    [holds_at(metreqs(throwOff(Animal, Human)), Time)]).

 /*  [holds_at(mounted(Human, Animal), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(metreqs(throwOff(Animal, Human)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',325).
axiom(holds_at(metreqs(throwOff(Animal, Human)), Time),
    [holds_at(mounted(Human, Animal), Time)]).

 /*  not(happens(throwOff(Animal, Human), Time)) :-
       not(holds_at(mounted(Human, Animal), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',325).

 /*  [holds_at(neg(mounted(Human, Animal)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(throwOff(Animal, Human), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',325).
axiom(not(happens(throwOff(Animal, Human), Time)),
    [holds_at(neg(mounted(Human, Animal)), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:327
% [animal,human,time]
% Happens(ThrowOff(animal,human),time) ->
% !Happens(GetOff(human,animal),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:329

 /*  happens(throwOff(Animal, Human), Time) ->
       not(happens(getOff(Human, Animal), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',329).

 /*  not(happens(getOff(Human, Animal), Time)) :-
       happens(throwOff(Animal, Human), Time).
 */

 /*  [happens(throwOff(Animal, Human), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(getOff(Human, Animal), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',329).
axiom(not(happens(getOff(Human, Animal), Time)),
    [happens(throwOff(Animal, Human), Time)]).

 /*  not(happens(throwOff(Animal, Human), Time)) :-
       happens(getOff(Human, Animal), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',329).

 /*  [happens(getOff(Human, Animal), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(throwOff(Animal, Human), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',329).
axiom(not(happens(throwOff(Animal, Human), Time)),
    [happens(getOff(Human, Animal), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:331
% [animal,human,time]
% Happens(GetOff(human,animal),time) ->
% !Happens(ThrowOff(animal,human),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:333

 /*  happens(getOff(Human, Animal), Time) ->
       not(happens(throwOff(Animal, Human), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',333).

 /*  not(happens(throwOff(Animal, Human), Time)) :-
       happens(getOff(Human, Animal), Time).
 */

 /*  [happens(getOff(Human, Animal), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(throwOff(Animal, Human), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',333).
axiom(not(happens(throwOff(Animal, Human), Time)),
    [happens(getOff(Human, Animal), Time)]).

 /*  not(happens(getOff(Human, Animal), Time)) :-
       happens(throwOff(Animal, Human), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',333).

 /*  [happens(throwOff(Animal, Human), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(getOff(Human, Animal), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',333).
axiom(not(happens(getOff(Human, Animal), Time)),
    [happens(throwOff(Animal, Human), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:335
% [position1,position2,time]
% Accessible(position1,position2,time) <->
% (Neighbor(position1,position2) &
%  !{gate} Sides(position1,position2,gate) &
%          !HoldsAt(Opened(gate),time)).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:339
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',337).

 /*  accessible(Position1, Position2, Time) <->
       not(exists([Gate],
                   (neighbor(Position1, Position2), sides(Position1, Position2, Gate), holds_at(neg(opened(Gate)), Time)))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',337).

 /*  [accessible] <->
       [not, exists, neighbor, sides, holds_at, neg, opened].
 */

 /*  accessible(Position1, Position2, Time) ->
       not(exists([Gate],
                   (neighbor(Position1, Position2), sides(Position1, Position2, Gate), holds_at(neg(opened(Gate)), Time)))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',337).

 /*  not(neighbor(Position1, Position2)) :-
       ( sides(Position1, Position2, Gate),
         holds_at(neg(opened(Gate)), Time)
       ),
       accessible(Position1, Position2, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',337).

 /*  [sides(Position1, Position2, Gate), holds_at(neg(opened(Gate)), Time), accessible(Position1, Position2, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(neighbor(Position1, Position2))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',337).
axiom(not(neighbor(Position1, Position2)),
   
    [ sides(Position1, Position2, Gate),
      holds_at(neg(opened(Gate)), Time),
      accessible(Position1, Position2, Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',337).

 /*  not(sides(Position1, Position2, Gate)) :-
       holds_at(neg(opened(Gate)), Time),
       neighbor(Position1, Position2),
       accessible(Position1, Position2, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',337).

 /*  [holds_at(neg(opened(Gate)), Time), neighbor(Position1, Position2), accessible(Position1, Position2, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(sides(Position1, Position2, Gate))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',337).
axiom(not(sides(Position1, Position2, Gate)),
   
    [ holds_at(neg(opened(Gate)), Time),
      neighbor(Position1, Position2),
      accessible(Position1, Position2, Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',337).

 /*  not(holds_at(neg(opened(Gate)), Time)) :-
       sides(Position1, Position2, Gate),
       neighbor(Position1, Position2),
       accessible(Position1, Position2, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',337).

 /*  [sides(Position1, Position2, Gate), neighbor(Position1, Position2), accessible(Position1, Position2, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(opened(Gate), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',337).
axiom(holds_at(opened(Gate), Time),
   
    [ sides(Position1, Position2, Gate),
      neighbor(Position1, Position2),
      accessible(Position1, Position2, Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',337).

 /*  not(accessible(Position1, Position2, Time)) :-
       neighbor(Position1, Position2),
       sides(Position1, Position2, Gate),
       holds_at(neg(opened(Gate)), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',337).

 /*  [neighbor(Position1, Position2), sides(Position1, Position2, Gate), holds_at(neg(opened(Gate)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(accessible(Position1, Position2, Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',337).
axiom(not(accessible(Position1, Position2, Time)),
   
    [ neighbor(Position1, Position2),
      sides(Position1, Position2, Gate),
      holds_at(neg(opened(Gate)), Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',337).

 /*  not(exists([Gate],  (neighbor(Position1, Position2), sides(Position1, Position2, Gate), holds_at(neg(opened(Gate)), Time)))) ->
       accessible(Position1, Position2, Time).
 */

 /*  accessible(Position1, Position2, Time) :-
       (   not(neighbor(Position1, Position2))
       ;   not(sides(Position1, Position2, Gate))
       ;   not(holds_at(neg(opened(Gate)), Time))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',337).

 /*  fix_axiom_head(Time) ->
       
       [  (not(neighbor(Position1, Position2));not(sides(Position1, Position2, Gate));not(holds_at(neg(opened(Gate)), Time))),
          (->),
          (not(neighbor(Position1, Position2));not(sides(Position1, Position2, Gate));holds_at(opened(Gate), Time))
       ].
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',337).

 /*  [(not(neighbor(Position1, Position2));not(sides(Position1, Position2, Gate));holds_at(opened(Gate), Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          accessible(Position1, Position2, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',337).
axiom(accessible(Position1, Position2, Time),
   
    [  (not(neighbor(Position1, Position2));not(sides(Position1, Position2, Gate));holds_at(opened(Gate), Time))
    ]).

 /*  neighbor(Position1, Position2) :-
       not(accessible(Position1, Position2, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',337).

 /*  [not(accessible(Position1, Position2, Time))] ->
       ta(Ta_Param,
          tvs1=[],
          tvs2=[],
          neighbor(Position1, Position2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',337).
axiom(neighbor(Position1, Position2),
    [not(accessible(Position1, Position2, Time))]).

 /*  sides(Position1, Position2, Gate) :-
       not(accessible(Position1, Position2, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',337).

 /*  [not(accessible(Position1, Position2, Time))] ->
       ta(Ta_Param5,
          tvs1=[],
          tvs2=[],
          sides(Position1, Position2, Gate)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',337).
axiom(sides(Position1, Position2, Gate),
    [not(accessible(Position1, Position2, Time))]).

 /*  holds_at(neg(opened(Gate)), Time) :-
       not(accessible(Position1, Position2, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',337).

 /*  [not(accessible(Position1, Position2, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(opened(Gate)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',337).
axiom(holds_at(neg(opened(Gate)), Time),
    [not(accessible(Position1, Position2, Time))]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:341
% [animal,position1,position2,time]
% (position1!=position2 &
%  HoldsAt(Pos(animal,position1),time) &
%  HoldsAt(Pos(animal,position2),time+1)) ->
% Accessible(position1,position2,time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:345
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',343).

 /*  diff(Position1, Position2), holds_at(pos(Animal, Position1), Time), holds_at(pos(Animal, Position2), Time+1) ->
       accessible(Position1, Position2, Time).
 */

 /*  accessible(Position1, Position2, Time) :-
       diff(Position1, Position2),
       holds_at(pos(Animal, Position1), Time),
       holds_at(pos(Animal, Position2), Time+1).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',343).

 /*  [diff(Position1, Position2), holds_at(pos(Animal, Position1), Time), holds_at(pos(Animal, Position2), Time4), b(Time, Time4), ignore(Time+1==Time4)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time4],
          accessible(Position1, Position2, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',343).
axiom(accessible(Position1, Position2, Time),
   
    [ diff(Position1, Position2),
      holds_at(pos(Animal, Position1), Time),
      holds_at(pos(Animal, Position2), Time4),
      b(Time, Time4)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',343).

 /*  not(holds_at(pos(Animal, Position1), Time)) :-
       holds_at(pos(Animal, Position2), Time+1),
       diff(Position1, Position2),
       not(accessible(Position1, Position2, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',343).

 /*  [holds_at(pos(Animal, Position2), Time5), diff(Position1, Position2), not(accessible(Position1, Position2, Time)), b(Time, Time5), ignore(Time+1==Time5)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time5],
          holds_at(neg(pos(Animal, Position1)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',343).
axiom(holds_at(neg(pos(Animal, Position1)), Time),
   
    [ holds_at(pos(Animal, Position2), Time5),
      diff(Position1, Position2),
      not(accessible(Position1, Position2, Time)),
      b(Time, Time5)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',343).

 /*  not(holds_at(pos(Animal, Position2), Time+1)) :-
       holds_at(pos(Animal, Position1), Time),
       diff(Position1, Position2),
       not(accessible(Position1, Position2, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',343).

 /*  [holds_at(pos(Animal, Position1), Time), diff(Position1, Position2), not(accessible(Position1, Position2, Time)), b(Time, Time6), ignore(Time+1==Time6)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time6],
          holds_at(neg(pos(Animal, Position2)), Time6)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',343).
axiom(holds_at(neg(pos(Animal, Position2)), Time6),
   
    [ holds_at(pos(Animal, Position1), Time),
      diff(Position2, Position1),
      not(accessible(Position1, Position2, Time)),
      b(Time, Time6)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:347
% [human,time]
% HoldsAt(AbnormalEncroachment(human),time) <->
% (HoldsAt(MountFails(human),time) |
%  ({position,animal1,animal2}
%    HoldsAt(PosDeterminingFluent(human,position),time) &
%    !HoldsAt(ThrowOffFails(animal2,human),time) &
%    Happens(ThrowOff(animal2,human),time) &
%    animal1!=human &
%    Large(animal1) &
%    HoldsAt(Pos(animal1,position),time) &
%    !HoldsAt(Pos(animal1,position),time+1))).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:357
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  holds_at(abnormalEncroachment(Human), Time) <->
       (   holds_at(mountFails(Human), Time)
       ;   exists([Position, Animal1, Animal2],
                   (holds_at(posDeterminingFluent(Human, Position), Time), holds_at(neg(throwOffFails(Animal2, Human)), Time), happens(throwOff(Animal2, Human), Time), diff(Animal1, Human), large(Animal1), holds_at(pos(Animal1, Position), Time), holds_at(neg(pos(Animal1, Position)), Time+1)))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  [holds_at, abnormalEncroachment] <->
       
       [  (;),
         holds_at,
         mountFails,
         exists,
         holds_at,
         posDeterminingFluent,
         holds_at,
         neg,
         throwOffFails,
         happens,
         throwOff,
         diff,
         large,
         holds_at,
         pos,
         holds_at,
         neg,
         pos,
          (+)
       ].
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  holds_at(abnormalEncroachment(Human), Time) ->
       (   holds_at(mountFails(Human), Time)
       ;   exists([Position, Animal1, Animal2],
                   (holds_at(posDeterminingFluent(Human, Position), Time), holds_at(neg(throwOffFails(Animal2, Human)), Time), happens(throwOff(Animal2, Human), Time), diff(Animal1, Human), large(Animal1), holds_at(pos(Animal1, Position), Time), holds_at(neg(pos(Animal1, Position)), Time+1)))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  not(holds_at(abnormalEncroachment(Human), Time)) :-
       not(holds_at(mountFails(Human), Time)),
       (   not(holds_at(posDeterminingFluent(Human, Position),
                        Time))
       ;   not(holds_at(neg(throwOffFails(Animal2, Human)), Time))
       ;   not(happens(throwOff(Animal2, Human), Time))
       ;   not(diff(Animal1, Human))
       ;   not(large(Animal1))
       ;   not(holds_at(pos(Animal1, Position), Time))
       ;   not(holds_at(neg(pos(Animal1, Position)), Time+1))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  [holds_at(neg(mountFails(Human)), Time),  (holds_at(neg(posDeterminingFluent(Human, Position)), Time);holds_at(throwOffFails(Animal2, Human), Time);not(happens(throwOff(Animal2, Human), Time));equals(Animal1, Human);not(large(Animal1));holds_at(neg(pos(Animal1, Position)), Time);holds_at(pos(Animal1, Position), Time5)), b(Time, Time5), ignore(Time+1==Time5)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time5],
          holds_at(neg(abnormalEncroachment(Human)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).
axiom(holds_at(neg(abnormalEncroachment(Human)), Time),
   
    [ holds_at(neg(mountFails(Human)), Time),
       (holds_at(neg(posDeterminingFluent(Human, Position)), Time);holds_at(throwOffFails(Animal2, Human), Time);not(happens(throwOff(Animal2, Human), Time));equals(Human, Animal1);not(large(Animal1));holds_at(neg(pos(Animal1, Position)), Time);holds_at(pos(Animal1, Position), Time5)),
      b(Time, Time5)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  holds_at(mountFails(Human), Time) :-
       (   not(holds_at(posDeterminingFluent(Human, Position),
                        Time))
       ;   not(holds_at(neg(throwOffFails(Animal2, Human)), Time))
       ;   not(happens(throwOff(Animal2, Human), Time))
       ;   not(diff(Animal1, Human))
       ;   not(large(Animal1))
       ;   not(holds_at(pos(Animal1, Position), Time))
       ;   not(holds_at(neg(pos(Animal1, Position)), Time+1))
       ),
       holds_at(abnormalEncroachment(Human), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  [(holds_at(neg(posDeterminingFluent(Human, Position)), Time);holds_at(throwOffFails(Animal2, Human), Time);not(happens(throwOff(Animal2, Human), Time));equals(Animal1, Human);not(large(Animal1));holds_at(neg(pos(Animal1, Position)), Time);holds_at(pos(Animal1, Position), Time6)), holds_at(abnormalEncroachment(Human), Time), b(Time, Time6), ignore(Time+1==Time6)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time6],
          holds_at(mountFails(Human), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).
axiom(holds_at(mountFails(Human), Time),
   
    [  (holds_at(neg(posDeterminingFluent(Human, Position)), Time);holds_at(throwOffFails(Animal2, Human), Time);not(happens(throwOff(Animal2, Human), Time));equals(Human, Animal1);not(large(Animal1));holds_at(neg(pos(Animal1, Position)), Time);holds_at(pos(Animal1, Position), Time6)),
      holds_at(abnormalEncroachment(Human), Time),
      b(Time, Time6)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  holds_at(posDeterminingFluent(Human, Position), Time) :-
       not(holds_at(mountFails(Human), Time)),
       holds_at(abnormalEncroachment(Human), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  [holds_at(neg(mountFails(Human)), Time), holds_at(abnormalEncroachment(Human), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(posDeterminingFluent(Human, Position), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).
axiom(holds_at(posDeterminingFluent(Human, Position), Time),
   
    [ holds_at(neg(mountFails(Human)), Time),
      holds_at(abnormalEncroachment(Human), Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  holds_at(neg(throwOffFails(Animal2, Human)), Time) :-
       not(holds_at(mountFails(Human), Time)),
       holds_at(abnormalEncroachment(Human), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  [holds_at(neg(mountFails(Human)), Time), holds_at(abnormalEncroachment(Human), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(throwOffFails(Animal2, Human)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).
axiom(holds_at(neg(throwOffFails(Animal2, Human)), Time),
   
    [ holds_at(neg(mountFails(Human)), Time),
      holds_at(abnormalEncroachment(Human), Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  happens(throwOff(Animal2, Human), Time) :-
       not(holds_at(mountFails(Human), Time)),
       holds_at(abnormalEncroachment(Human), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  [holds_at(neg(mountFails(Human)), Time), holds_at(abnormalEncroachment(Human), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          happens(throwOff(Animal2, Human), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).
axiom(happens(throwOff(Animal2, Human), Time),
   
    [ holds_at(neg(mountFails(Human)), Time),
      holds_at(abnormalEncroachment(Human), Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  large(Animal1) :-
       not(holds_at(mountFails(Human), Time)),
       holds_at(abnormalEncroachment(Human), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  [holds_at(neg(mountFails(Human)), Time), holds_at(abnormalEncroachment(Human), Time)] ->
       ta(Time, tvs1=[Time], tvs2=[Time], large(Animal1)).
 */
axiom(large(Animal1),
   
    [ holds_at(neg(mountFails(Human)), Time),
      holds_at(abnormalEncroachment(Human), Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  holds_at(pos(Animal1, Position), Time) :-
       not(holds_at(mountFails(Human), Time)),
       holds_at(abnormalEncroachment(Human), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  [holds_at(neg(mountFails(Human)), Time), holds_at(abnormalEncroachment(Human), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(pos(Animal1, Position), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).
axiom(holds_at(pos(Animal1, Position), Time),
   
    [ holds_at(neg(mountFails(Human)), Time),
      holds_at(abnormalEncroachment(Human), Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  holds_at(neg(pos(Animal1, Position)), Time+1) :-
       not(holds_at(mountFails(Human), Time)),
       holds_at(abnormalEncroachment(Human), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  [holds_at(neg(mountFails(Human)), Time), holds_at(abnormalEncroachment(Human), Time), b(Time, Time7), ignore(Time+1==Time7)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time7],
          holds_at(neg(pos(Animal1, Position)), Time7)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).
axiom(holds_at(neg(pos(Animal1, Position)), Time7),
   
    [ holds_at(neg(mountFails(Human)), Time),
      holds_at(abnormalEncroachment(Human), Time),
      b(Time, Time7)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  holds_at(mountFails(Human), Time);exists([Position, Animal1, Animal2],  (holds_at(posDeterminingFluent(Human, Position), Time), holds_at(neg(throwOffFails(Animal2, Human)), Time), happens(throwOff(Animal2, Human), Time), diff(Animal1, Human), large(Animal1), holds_at(pos(Animal1, Position), Time), holds_at(neg(pos(Animal1, Position)), Time+1))) ->
       holds_at(abnormalEncroachment(Human), Time).
 */

 /*  holds_at(abnormalEncroachment(Human), Time) :-
       (   holds_at(mountFails(Human), Time)
       ;   holds_at(posDeterminingFluent(Human, Position), Time),
           holds_at(neg(throwOffFails(Animal2, Human)), Time),
           happens(throwOff(Animal2, Human), Time),
           diff(Animal1, Human),
           large(Animal1),
           holds_at(pos(Animal1, Position), Time),
           holds_at(neg(pos(Animal1, Position)), Time+1)
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  [(holds_at(mountFails(Human), Time);holds_at(posDeterminingFluent(Human, Position), Time), holds_at(neg(throwOffFails(Animal2, Human)), Time), happens(throwOff(Animal2, Human), Time), diff(Animal1, Human), large(Animal1), holds_at(pos(Animal1, Position), Time), holds_at(neg(pos(Animal1, Position)), Time8)), b(Time, Time8), ignore(Time+1==Time8)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time8],
          holds_at(abnormalEncroachment(Human), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).
axiom(holds_at(abnormalEncroachment(Human), Time),
   
    [  (holds_at(mountFails(Human), Time);holds_at(posDeterminingFluent(Human, Position), Time), holds_at(neg(throwOffFails(Animal2, Human)), Time), happens(throwOff(Animal2, Human), Time), diff(Human, Animal1), large(Animal1), holds_at(pos(Animal1, Position), Time), holds_at(neg(pos(Animal1, Position)), Time8)),
      b(Time, Time8)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  not(holds_at(mountFails(Human), Time)) :-
       not(holds_at(abnormalEncroachment(Human), Time)).
 */

 /*  [holds_at(neg(abnormalEncroachment(Human)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(mountFails(Human)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).
axiom(holds_at(neg(mountFails(Human)), Time),
    [holds_at(neg(abnormalEncroachment(Human)), Time)]).

 /*  not(holds_at(posDeterminingFluent(Human, Position), Time)) :-
       ( holds_at(neg(throwOffFails(Animal2, Human)), Time),
         happens(throwOff(Animal2, Human), Time),
         diff(Animal1, Human),
         large(Animal1),
         holds_at(pos(Animal1, Position), Time),
         holds_at(neg(pos(Animal1, Position)), Time+1)
       ),
       not(holds_at(abnormalEncroachment(Human), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  [holds_at(neg(throwOffFails(Animal2, Human)), Time), happens(throwOff(Animal2, Human), Time), diff(Animal1, Human), large(Animal1), holds_at(pos(Animal1, Position), Time), holds_at(neg(pos(Animal1, Position)), Time9), holds_at(neg(abnormalEncroachment(Human)), Time), b(Time, Time9), ignore(Time+1==Time9)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time9],
          holds_at(neg(posDeterminingFluent(Human, Position)),
                   Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).
axiom(holds_at(neg(posDeterminingFluent(Human, Position)), Time),
   
    [ holds_at(neg(throwOffFails(Animal2, Human)), Time),
      happens(throwOff(Animal2, Human), Time),
      diff(Human, Animal1),
      large(Animal1),
      holds_at(pos(Animal1, Position), Time),
      holds_at(neg(pos(Animal1, Position)), Time9),
      holds_at(neg(abnormalEncroachment(Human)), Time),
      b(Time, Time9)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  not(holds_at(neg(throwOffFails(Animal2, Human)), Time)) :-
       ( happens(throwOff(Animal2, Human), Time),
         diff(Animal1, Human),
         large(Animal1),
         holds_at(pos(Animal1, Position), Time),
         holds_at(neg(pos(Animal1, Position)), Time+1)
       ),
       holds_at(posDeterminingFluent(Human, Position), Time),
       not(holds_at(abnormalEncroachment(Human), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  [happens(throwOff(Animal2, Human), Time), diff(Animal1, Human), large(Animal1), holds_at(pos(Animal1, Position), Time), holds_at(neg(pos(Animal1, Position)), Time10), holds_at(posDeterminingFluent(Human, Position), Time), holds_at(neg(abnormalEncroachment(Human)), Time), b(Time, Time10), ignore(Time+1==Time10)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time10],
          holds_at(throwOffFails(Animal2, Human), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).
axiom(holds_at(throwOffFails(Animal2, Human), Time),
   
    [ happens(throwOff(Animal2, Human), Time),
      diff(Human, Animal1),
      large(Animal1),
      holds_at(pos(Animal1, Position), Time),
      holds_at(neg(pos(Animal1, Position)), Time10),
      holds_at(posDeterminingFluent(Human, Position), Time),
      holds_at(neg(abnormalEncroachment(Human)), Time),
      b(Time, Time10)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  not(happens(throwOff(Animal2, Human), Time)) :-
       ( diff(Animal1, Human),
         large(Animal1),
         holds_at(pos(Animal1, Position), Time),
         holds_at(neg(pos(Animal1, Position)), Time+1)
       ),
       holds_at(neg(throwOffFails(Animal2, Human)), Time),
       holds_at(posDeterminingFluent(Human, Position), Time),
       not(holds_at(abnormalEncroachment(Human), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  [diff(Animal1, Human), large(Animal1), holds_at(pos(Animal1, Position), Time), holds_at(neg(pos(Animal1, Position)), Time11), holds_at(neg(throwOffFails(Animal2, Human)), Time), holds_at(posDeterminingFluent(Human, Position), Time), holds_at(neg(abnormalEncroachment(Human)), Time), b(Time, Time11), ignore(Time+1==Time11)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time11],
          not(happens(throwOff(Animal2, Human), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).
axiom(not(happens(throwOff(Animal2, Human), Time)),
   
    [ diff(Human, Animal1),
      large(Animal1),
      holds_at(pos(Animal1, Position), Time),
      holds_at(neg(pos(Animal1, Position)), Time11),
      holds_at(neg(throwOffFails(Animal2, Human)), Time),
      holds_at(posDeterminingFluent(Human, Position), Time),
      holds_at(neg(abnormalEncroachment(Human)), Time),
      b(Time, Time11)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  not(large(Animal1)) :-
       ( holds_at(pos(Animal1, Position), Time),
         holds_at(neg(pos(Animal1, Position)), Time+1)
       ),
       diff(Animal1, Human),
       happens(throwOff(Animal2, Human), Time),
       holds_at(neg(throwOffFails(Animal2, Human)), Time),
       holds_at(posDeterminingFluent(Human, Position), Time),
       not(holds_at(abnormalEncroachment(Human), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  [holds_at(pos(Animal1, Position), Time), holds_at(neg(pos(Animal1, Position)), Time12), diff(Animal1, Human), happens(throwOff(Animal2, Human), Time), holds_at(neg(throwOffFails(Animal2, Human)), Time), holds_at(posDeterminingFluent(Human, Position), Time), holds_at(neg(abnormalEncroachment(Human)), Time), b(Time, Time12), ignore(Time+1==Time12)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time12],
          not(large(Animal1))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).
axiom(not(large(Animal1)),
   
    [ holds_at(pos(Animal1, Position), Time),
      holds_at(neg(pos(Animal1, Position)), Time12),
      diff(Animal1, Human),
      happens(throwOff(Animal2, Human), Time),
      holds_at(neg(throwOffFails(Animal2, Human)), Time),
      holds_at(posDeterminingFluent(Human, Position), Time),
      holds_at(neg(abnormalEncroachment(Human)), Time),
      b(Time, Time12)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  not(holds_at(pos(Animal1, Position), Time)) :-
       holds_at(neg(pos(Animal1, Position)), Time+1),
       large(Animal1),
       diff(Animal1, Human),
       happens(throwOff(Animal2, Human), Time),
       holds_at(neg(throwOffFails(Animal2, Human)), Time),
       holds_at(posDeterminingFluent(Human, Position), Time),
       not(holds_at(abnormalEncroachment(Human), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  [holds_at(neg(pos(Animal1, Position)), Time13), large(Animal1), diff(Animal1, Human), happens(throwOff(Animal2, Human), Time), holds_at(neg(throwOffFails(Animal2, Human)), Time), holds_at(posDeterminingFluent(Human, Position), Time), holds_at(neg(abnormalEncroachment(Human)), Time), b(Time, Time13), ignore(Time+1==Time13)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time13],
          holds_at(neg(pos(Animal1, Position)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).
axiom(holds_at(neg(pos(Animal1, Position)), Time),
   
    [ holds_at(neg(pos(Animal1, Position)), Time13),
      large(Animal1),
      diff(Animal1, Human),
      happens(throwOff(Animal2, Human), Time),
      holds_at(neg(throwOffFails(Animal2, Human)), Time),
      holds_at(posDeterminingFluent(Human, Position), Time),
      holds_at(neg(abnormalEncroachment(Human)), Time),
      b(Time, Time13)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  not(holds_at(neg(pos(Animal1, Position)), Time+1)) :-
       holds_at(pos(Animal1, Position), Time),
       large(Animal1),
       diff(Animal1, Human),
       happens(throwOff(Animal2, Human), Time),
       holds_at(neg(throwOffFails(Animal2, Human)), Time),
       holds_at(posDeterminingFluent(Human, Position), Time),
       not(holds_at(abnormalEncroachment(Human), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).

 /*  [holds_at(pos(Animal1, Position), Time), large(Animal1), diff(Animal1, Human), happens(throwOff(Animal2, Human), Time), holds_at(neg(throwOffFails(Animal2, Human)), Time), holds_at(posDeterminingFluent(Human, Position), Time), holds_at(neg(abnormalEncroachment(Human)), Time), b(Time, Time14), ignore(Time+1==Time14)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time14],
          holds_at(pos(Animal1, Position), Time14)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',349).
axiom(holds_at(pos(Animal1, Position), Time14),
   
    [ holds_at(pos(Animal1, Position), Time),
      large(Animal1),
      diff(Animal1, Human),
      happens(throwOff(Animal2, Human), Time),
      holds_at(neg(throwOffFails(Animal2, Human)), Time),
      holds_at(posDeterminingFluent(Human, Position), Time),
      holds_at(neg(abnormalEncroachment(Human)), Time),
      b(Time, Time14)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:359
% [animal1,animal2,position,time]
% HoldsAt(Pos(animal1,position),time) &
% !HoldsAt(Pos(animal1,position),time+1) &
% !HoldsAt(Pos(animal2,position),time) &
% HoldsAt(Pos(animal2,position),time+1) ->
% (!Large(animal1) |
%  !Large(animal2) |
%  ({human} human=animal2 & HoldsAt(AbnormalEncroachment(human),time))).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:366
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',361).

 /*  holds_at(pos(Animal1, Position), Time), holds_at(neg(pos(Animal1, Position)), Time+1), holds_at(neg(pos(Animal2, Position)), Time), holds_at(pos(Animal2, Position), Time+1) ->
       (   not(large(Animal1))
       ;   not(large(Animal2))
       ;   exists([Human],
                   (equals(Human, Animal2), holds_at(abnormalEncroachment(Human), Time)))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',361).

 /*  not(holds_at(pos(Animal1, Position), Time)) :-
       ( holds_at(neg(pos(Animal1, Position)), Time+1),
         holds_at(neg(pos(Animal2, Position)), Time),
         holds_at(pos(Animal2, Position), Time+1)
       ),
       large(Animal1),
       large(Animal2),
       (   not(equals(Human, Animal2))
       ;   not(holds_at(abnormalEncroachment(Human), Time))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',361).

 /*  [holds_at(neg(pos(Animal1, Position)), Time5), holds_at(neg(pos(Animal2, Position)), Time), holds_at(pos(Animal2, Position), Time5), large(Animal1), large(Animal2),  (not(equals(Human, Animal2));holds_at(neg(abnormalEncroachment(Human)), Time)), b(Time, Time5), ignore(Time+1==Time5)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time5],
          holds_at(neg(pos(Animal1, Position)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',361).
axiom(holds_at(neg(pos(Animal1, Position)), Time),
   
    [ holds_at(neg(pos(Animal1, Position)), Time5),
      holds_at(neg(pos(Animal2, Position)), Time),
      holds_at(pos(Animal2, Position), Time5),
      large(Animal1),
      large(Animal2),
       (not(equals(Human, Animal2));holds_at(neg(abnormalEncroachment(Human)), Time)),
      b(Time, Time5)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',361).

 /*  not(holds_at(neg(pos(Animal1, Position)), Time+1)) :-
       ( holds_at(neg(pos(Animal2, Position)), Time),
         holds_at(pos(Animal2, Position), Time+1)
       ),
       holds_at(pos(Animal1, Position), Time),
       large(Animal1),
       large(Animal2),
       (   not(equals(Human, Animal2))
       ;   not(holds_at(abnormalEncroachment(Human), Time))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',361).

 /*  [holds_at(neg(pos(Animal2, Position)), Time), holds_at(pos(Animal2, Position), Time6), holds_at(pos(Animal1, Position), Time), large(Animal1), large(Animal2),  (not(equals(Human, Animal2));holds_at(neg(abnormalEncroachment(Human)), Time)), b(Time, Time6), ignore(Time+1==Time6)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time6],
          holds_at(pos(Animal1, Position), Time6)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',361).
axiom(holds_at(pos(Animal1, Position), Time6),
   
    [ holds_at(neg(pos(Animal2, Position)), Time),
      holds_at(pos(Animal2, Position), Time6),
      holds_at(pos(Animal1, Position), Time),
      large(Animal1),
      large(Animal2),
       (not(equals(Human, Animal2));holds_at(neg(abnormalEncroachment(Human)), Time)),
      b(Time, Time6)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',361).

 /*  not(holds_at(neg(pos(Animal2, Position)), Time)) :-
       holds_at(pos(Animal2, Position), Time+1),
       holds_at(neg(pos(Animal1, Position)), Time+1),
       holds_at(pos(Animal1, Position), Time),
       large(Animal1),
       large(Animal2),
       (   not(equals(Human, Animal2))
       ;   not(holds_at(abnormalEncroachment(Human), Time))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',361).

 /*  [holds_at(pos(Animal2, Position), Time7), holds_at(neg(pos(Animal1, Position)), Time7), holds_at(pos(Animal1, Position), Time), large(Animal1), large(Animal2),  (not(equals(Human, Animal2));holds_at(neg(abnormalEncroachment(Human)), Time)), b(Time, Time7), ignore(Time+1==Time7)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time7],
          holds_at(pos(Animal2, Position), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',361).
axiom(holds_at(pos(Animal2, Position), Time),
   
    [ holds_at(pos(Animal2, Position), Time7),
      holds_at(neg(pos(Animal1, Position)), Time7),
      holds_at(pos(Animal1, Position), Time),
      large(Animal1),
      large(Animal2),
       (not(equals(Animal2, Human));holds_at(neg(abnormalEncroachment(Human)), Time)),
      b(Time, Time7)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',361).

 /*  not(holds_at(pos(Animal2, Position), Time+1)) :-
       holds_at(neg(pos(Animal2, Position)), Time),
       holds_at(neg(pos(Animal1, Position)), Time+1),
       holds_at(pos(Animal1, Position), Time),
       large(Animal1),
       large(Animal2),
       (   not(equals(Human, Animal2))
       ;   not(holds_at(abnormalEncroachment(Human), Time))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',361).

 /*  [holds_at(neg(pos(Animal2, Position)), Time), holds_at(neg(pos(Animal1, Position)), Time8), holds_at(pos(Animal1, Position), Time), large(Animal1), large(Animal2),  (not(equals(Human, Animal2));holds_at(neg(abnormalEncroachment(Human)), Time)), b(Time, Time8), ignore(Time+1==Time8)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time8],
          holds_at(neg(pos(Animal2, Position)), Time8)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',361).
axiom(holds_at(neg(pos(Animal2, Position)), Time8),
   
    [ holds_at(neg(pos(Animal2, Position)), Time),
      holds_at(neg(pos(Animal1, Position)), Time8),
      holds_at(pos(Animal1, Position), Time),
      large(Animal1),
      large(Animal2),
       (not(equals(Animal2, Human));holds_at(neg(abnormalEncroachment(Human)), Time)),
      b(Time, Time8)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',361).

 /*  not(large(Animal1)) :-
       ( large(Animal2),
         (   not(equals(Human, Animal2))
         ;   not(holds_at(abnormalEncroachment(Human), Time))
         )
       ),
       holds_at(pos(Animal1, Position), Time),
       holds_at(neg(pos(Animal1, Position)), Time+1),
       holds_at(neg(pos(Animal2, Position)), Time),
       holds_at(pos(Animal2, Position), Time+1).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',361).

 /*  fix_axiom_head(Time) ->
       
       [  (not(equals(Human, Animal2));not(holds_at(abnormalEncroachment(Human), Time))),
          (->),
          (not(equals(Human, Animal2));holds_at(neg(abnormalEncroachment(Human)), Time))
       ].
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',361).

 /*  [large(Animal2),  (not(equals(Human, Animal2));holds_at(neg(abnormalEncroachment(Human)), Time)), holds_at(pos(Animal1, Position), Time), holds_at(neg(pos(Animal1, Position)), Time9), holds_at(neg(pos(Animal2, Position)), Time), holds_at(pos(Animal2, Position), Time9), b(Time, Time9), ignore(Time+1==Time9)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time9],
          not(large(Animal1))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',361).
axiom(not(large(Animal1)),
   
    [ large(Animal2),
       (not(equals(Human, Animal2));holds_at(neg(abnormalEncroachment(Human)), Time)),
      holds_at(pos(Animal1, Position), Time),
      holds_at(neg(pos(Animal1, Position)), Time9),
      holds_at(neg(pos(Animal2, Position)), Time),
      holds_at(pos(Animal2, Position), Time9),
      b(Time, Time9)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',361).

 /*  not(large(Animal2)) :-
       (   not(equals(Human, Animal2))
       ;   not(holds_at(abnormalEncroachment(Human), Time))
       ),
       large(Animal1),
       holds_at(pos(Animal1, Position), Time),
       holds_at(neg(pos(Animal1, Position)), Time+1),
       holds_at(neg(pos(Animal2, Position)), Time),
       holds_at(pos(Animal2, Position), Time+1).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',361).

 /*  fix_axiom_head(Time) ->
       
       [  (not(equals(Human, Animal2));not(holds_at(abnormalEncroachment(Human), Time))),
          (->),
          (not(equals(Human, Animal2));holds_at(neg(abnormalEncroachment(Human)), Time))
       ].
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',361).

 /*  [(not(equals(Human, Animal2));holds_at(neg(abnormalEncroachment(Human)), Time)), large(Animal1), holds_at(pos(Animal1, Position), Time), holds_at(neg(pos(Animal1, Position)), Time10), holds_at(neg(pos(Animal2, Position)), Time), holds_at(pos(Animal2, Position), Time10), b(Time, Time10), ignore(Time+1==Time10)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time10],
          not(large(Animal2))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',361).
axiom(not(large(Animal2)),
   
    [  (not(equals(Animal2, Human));holds_at(neg(abnormalEncroachment(Human)), Time)),
      large(Animal1),
      holds_at(pos(Animal1, Position), Time),
      holds_at(neg(pos(Animal1, Position)), Time10),
      holds_at(neg(pos(Animal2, Position)), Time),
      holds_at(pos(Animal2, Position), Time10),
      b(Time, Time10)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',361).

 /*  holds_at(abnormalEncroachment(Human), Time) :-
       large(Animal2),
       large(Animal1),
       holds_at(pos(Animal1, Position), Time),
       holds_at(neg(pos(Animal1, Position)), Time+1),
       holds_at(neg(pos(Animal2, Position)), Time),
       holds_at(pos(Animal2, Position), Time+1).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',361).

 /*  [large(Animal2), large(Animal1), holds_at(pos(Animal1, Position), Time), holds_at(neg(pos(Animal1, Position)), Time11), holds_at(neg(pos(Animal2, Position)), Time), holds_at(pos(Animal2, Position), Time11), b(Time, Time11), ignore(Time+1==Time11)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time11],
          holds_at(abnormalEncroachment(Human), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',361).
axiom(holds_at(abnormalEncroachment(Human), Time),
   
    [ large(Animal2),
      large(Animal1),
      holds_at(pos(Animal1, Position), Time),
      holds_at(neg(pos(Animal1, Position)), Time11),
      holds_at(neg(pos(Animal2, Position)), Time),
      holds_at(pos(Animal2, Position), Time11),
      b(Time, Time11)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:368
% [animal1,animal2,position1,position2,time]
% animal1!=% animal2 &
% Large(animal1) & Large(animal2) &
% HoldsAt(Pos(animal1,position1),time) &
% HoldsAt(Pos(animal1,position2),time+1) &
% HoldsAt(Pos(animal2,position1),time) &
% HoldsAt(Pos(animal2,position2),time+1) ->
% !{gate} Sides(position1,position2,gate).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:375
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',370).

 /*  diff(Animal1, Animal2), large(Animal1), large(Animal2), holds_at(pos(Animal1, Position1), Time), holds_at(pos(Animal1, Position2), Time+1), holds_at(pos(Animal2, Position1), Time), holds_at(pos(Animal2, Position2), Time+1) ->
       not(exists([Gate], sides(Position1, Position2, Gate))).
 */

 /*  not(sides(Position1, Position2, Gate)) :-
       diff(Animal1, Animal2),
       large(Animal1),
       large(Animal2),
       holds_at(pos(Animal1, Position1), Time),
       holds_at(pos(Animal1, Position2), Time+1),
       holds_at(pos(Animal2, Position1), Time),
       holds_at(pos(Animal2, Position2), Time+1).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',370).

 /*  [diff(Animal1, Animal2), large(Animal1), large(Animal2), holds_at(pos(Animal1, Position1), Time), holds_at(pos(Animal1, Position2), Time6), holds_at(pos(Animal2, Position1), Time), holds_at(pos(Animal2, Position2), Time6), b(Time, Time6), ignore(Time+1==Time6)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time6],
          not(sides(Position1, Position2, Gate))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',370).
axiom(not(sides(Position1, Position2, Gate)),
   
    [ diff(Animal1, Animal2),
      large(Animal1),
      large(Animal2),
      holds_at(pos(Animal1, Position1), Time),
      holds_at(pos(Animal1, Position2), Time6),
      holds_at(pos(Animal2, Position1), Time),
      holds_at(pos(Animal2, Position2), Time6),
      b(Time, Time6)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',370).

 /*  not(large(Animal1)) :-
       ( large(Animal2),
         holds_at(pos(Animal1, Position1), Time),
         holds_at(pos(Animal1, Position2), Time+1),
         holds_at(pos(Animal2, Position1), Time),
         holds_at(pos(Animal2, Position2), Time+1)
       ),
       diff(Animal1, Animal2),
       sides(Position1, Position2, Gate).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',370).

 /*  [large(Animal2), holds_at(pos(Animal1, Position1), Time), holds_at(pos(Animal1, Position2), Time7), holds_at(pos(Animal2, Position1), Time), holds_at(pos(Animal2, Position2), Time7), diff(Animal1, Animal2), sides(Position1, Position2, Gate), b(Time, Time7), ignore(Time+1==Time7)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time7],
          not(large(Animal1))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',370).
axiom(not(large(Animal1)),
   
    [ large(Animal2),
      holds_at(pos(Animal1, Position1), Time),
      holds_at(pos(Animal1, Position2), Time7),
      holds_at(pos(Animal2, Position1), Time),
      holds_at(pos(Animal2, Position2), Time7),
      diff(Animal1, Animal2),
      sides(Position1, Position2, Gate),
      b(Time, Time7)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',370).

 /*  not(large(Animal2)) :-
       ( holds_at(pos(Animal1, Position1), Time),
         holds_at(pos(Animal1, Position2), Time+1),
         holds_at(pos(Animal2, Position1), Time),
         holds_at(pos(Animal2, Position2), Time+1)
       ),
       large(Animal1),
       diff(Animal1, Animal2),
       sides(Position1, Position2, Gate).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',370).

 /*  [holds_at(pos(Animal1, Position1), Time), holds_at(pos(Animal1, Position2), Time8), holds_at(pos(Animal2, Position1), Time), holds_at(pos(Animal2, Position2), Time8), large(Animal1), diff(Animal1, Animal2), sides(Position1, Position2, Gate), b(Time, Time8), ignore(Time+1==Time8)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time8],
          not(large(Animal2))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',370).
axiom(not(large(Animal2)),
   
    [ holds_at(pos(Animal1, Position1), Time),
      holds_at(pos(Animal1, Position2), Time8),
      holds_at(pos(Animal2, Position1), Time),
      holds_at(pos(Animal2, Position2), Time8),
      large(Animal1),
      diff(Animal2, Animal1),
      sides(Position1, Position2, Gate),
      b(Time, Time8)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',370).

 /*  not(holds_at(pos(Animal1, Position1), Time)) :-
       ( holds_at(pos(Animal1, Position2), Time+1),
         holds_at(pos(Animal2, Position1), Time),
         holds_at(pos(Animal2, Position2), Time+1)
       ),
       large(Animal2),
       large(Animal1),
       diff(Animal1, Animal2),
       sides(Position1, Position2, Gate).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',370).

 /*  [holds_at(pos(Animal1, Position2), Time9), holds_at(pos(Animal2, Position1), Time), holds_at(pos(Animal2, Position2), Time9), large(Animal2), large(Animal1), diff(Animal1, Animal2), sides(Position1, Position2, Gate), b(Time, Time9), ignore(Time+1==Time9)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time9],
          holds_at(neg(pos(Animal1, Position1)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',370).
axiom(holds_at(neg(pos(Animal1, Position1)), Time),
   
    [ holds_at(pos(Animal1, Position2), Time9),
      holds_at(pos(Animal2, Position1), Time),
      holds_at(pos(Animal2, Position2), Time9),
      large(Animal2),
      large(Animal1),
      diff(Animal1, Animal2),
      sides(Position1, Position2, Gate),
      b(Time, Time9)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',370).

 /*  not(holds_at(pos(Animal1, Position2), Time+1)) :-
       ( holds_at(pos(Animal2, Position1), Time),
         holds_at(pos(Animal2, Position2), Time+1)
       ),
       holds_at(pos(Animal1, Position1), Time),
       large(Animal2),
       large(Animal1),
       diff(Animal1, Animal2),
       sides(Position1, Position2, Gate).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',370).

 /*  [holds_at(pos(Animal2, Position1), Time), holds_at(pos(Animal2, Position2), Time10), holds_at(pos(Animal1, Position1), Time), large(Animal2), large(Animal1), diff(Animal1, Animal2), sides(Position1, Position2, Gate), b(Time, Time10), ignore(Time+1==Time10)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time10],
          holds_at(neg(pos(Animal1, Position2)), Time10)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',370).
axiom(holds_at(neg(pos(Animal1, Position2)), Time10),
   
    [ holds_at(pos(Animal2, Position1), Time),
      holds_at(pos(Animal2, Position2), Time10),
      holds_at(pos(Animal1, Position1), Time),
      large(Animal2),
      large(Animal1),
      diff(Animal1, Animal2),
      sides(Position1, Position2, Gate),
      b(Time, Time10)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',370).

 /*  not(holds_at(pos(Animal2, Position1), Time)) :-
       holds_at(pos(Animal2, Position2), Time+1),
       holds_at(pos(Animal1, Position2), Time+1),
       holds_at(pos(Animal1, Position1), Time),
       large(Animal2),
       large(Animal1),
       diff(Animal1, Animal2),
       sides(Position1, Position2, Gate).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',370).

 /*  [holds_at(pos(Animal2, Position2), Time11), holds_at(pos(Animal1, Position2), Time11), holds_at(pos(Animal1, Position1), Time), large(Animal2), large(Animal1), diff(Animal1, Animal2), sides(Position1, Position2, Gate), b(Time, Time11), ignore(Time+1==Time11)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time11],
          holds_at(neg(pos(Animal2, Position1)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',370).
axiom(holds_at(neg(pos(Animal2, Position1)), Time),
   
    [ holds_at(pos(Animal2, Position2), Time11),
      holds_at(pos(Animal1, Position2), Time11),
      holds_at(pos(Animal1, Position1), Time),
      large(Animal2),
      large(Animal1),
      diff(Animal2, Animal1),
      sides(Position1, Position2, Gate),
      b(Time, Time11)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',370).

 /*  not(holds_at(pos(Animal2, Position2), Time+1)) :-
       holds_at(pos(Animal2, Position1), Time),
       holds_at(pos(Animal1, Position2), Time+1),
       holds_at(pos(Animal1, Position1), Time),
       large(Animal2),
       large(Animal1),
       diff(Animal1, Animal2),
       sides(Position1, Position2, Gate).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',370).

 /*  [holds_at(pos(Animal2, Position1), Time), holds_at(pos(Animal1, Position2), Time12), holds_at(pos(Animal1, Position1), Time), large(Animal2), large(Animal1), diff(Animal1, Animal2), sides(Position1, Position2, Gate), b(Time, Time12), ignore(Time+1==Time12)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time12],
          holds_at(neg(pos(Animal2, Position2)), Time12)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',370).
axiom(holds_at(neg(pos(Animal2, Position2)), Time12),
   
    [ holds_at(pos(Animal2, Position1), Time),
      holds_at(pos(Animal1, Position2), Time12),
      holds_at(pos(Animal1, Position1), Time),
      large(Animal2),
      large(Animal1),
      diff(Animal2, Animal1),
      sides(Position1, Position2, Gate),
      b(Time, Time12)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:377
% [animal1,animal2,position1,position2,time]
% animal1!=% animal2 &
% Large(animal1) & Large(animal2) &
% HoldsAt(Pos(animal1,position1),time) &
% HoldsAt(Pos(animal1,position2),time+1) &
% HoldsAt(Pos(animal2,position2),time) &
% HoldsAt(Pos(animal2,position1),time+1) ->
% !{gate} Sides(position1,position2,gate).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:384
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',379).

 /*  diff(Animal1, Animal2), large(Animal1), large(Animal2), holds_at(pos(Animal1, Position1), Time), holds_at(pos(Animal1, Position2), Time+1), holds_at(pos(Animal2, Position2), Time), holds_at(pos(Animal2, Position1), Time+1) ->
       not(exists([Gate], sides(Position1, Position2, Gate))).
 */

 /*  not(sides(Position1, Position2, Gate)) :-
       diff(Animal1, Animal2),
       large(Animal1),
       large(Animal2),
       holds_at(pos(Animal1, Position1), Time),
       holds_at(pos(Animal1, Position2), Time+1),
       holds_at(pos(Animal2, Position2), Time),
       holds_at(pos(Animal2, Position1), Time+1).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',379).

 /*  [diff(Animal1, Animal2), large(Animal1), large(Animal2), holds_at(pos(Animal1, Position1), Time), holds_at(pos(Animal1, Position2), Time6), holds_at(pos(Animal2, Position2), Time), holds_at(pos(Animal2, Position1), Time6), b(Time, Time6), ignore(Time+1==Time6)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time6],
          not(sides(Position1, Position2, Gate))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',379).
axiom(not(sides(Position1, Position2, Gate)),
   
    [ diff(Animal1, Animal2),
      large(Animal1),
      large(Animal2),
      holds_at(pos(Animal1, Position1), Time),
      holds_at(pos(Animal1, Position2), Time6),
      holds_at(pos(Animal2, Position2), Time),
      holds_at(pos(Animal2, Position1), Time6),
      b(Time, Time6)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',379).

 /*  not(large(Animal1)) :-
       ( large(Animal2),
         holds_at(pos(Animal1, Position1), Time),
         holds_at(pos(Animal1, Position2), Time+1),
         holds_at(pos(Animal2, Position2), Time),
         holds_at(pos(Animal2, Position1), Time+1)
       ),
       diff(Animal1, Animal2),
       sides(Position1, Position2, Gate).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',379).

 /*  [large(Animal2), holds_at(pos(Animal1, Position1), Time), holds_at(pos(Animal1, Position2), Time7), holds_at(pos(Animal2, Position2), Time), holds_at(pos(Animal2, Position1), Time7), diff(Animal1, Animal2), sides(Position1, Position2, Gate), b(Time, Time7), ignore(Time+1==Time7)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time7],
          not(large(Animal1))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',379).
axiom(not(large(Animal1)),
   
    [ large(Animal2),
      holds_at(pos(Animal1, Position1), Time),
      holds_at(pos(Animal1, Position2), Time7),
      holds_at(pos(Animal2, Position2), Time),
      holds_at(pos(Animal2, Position1), Time7),
      diff(Animal1, Animal2),
      sides(Position1, Position2, Gate),
      b(Time, Time7)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',379).

 /*  not(large(Animal2)) :-
       ( holds_at(pos(Animal1, Position1), Time),
         holds_at(pos(Animal1, Position2), Time+1),
         holds_at(pos(Animal2, Position2), Time),
         holds_at(pos(Animal2, Position1), Time+1)
       ),
       large(Animal1),
       diff(Animal1, Animal2),
       sides(Position1, Position2, Gate).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',379).

 /*  [holds_at(pos(Animal1, Position1), Time), holds_at(pos(Animal1, Position2), Time8), holds_at(pos(Animal2, Position2), Time), holds_at(pos(Animal2, Position1), Time8), large(Animal1), diff(Animal1, Animal2), sides(Position1, Position2, Gate), b(Time, Time8), ignore(Time+1==Time8)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time8],
          not(large(Animal2))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',379).
axiom(not(large(Animal2)),
   
    [ holds_at(pos(Animal1, Position1), Time),
      holds_at(pos(Animal1, Position2), Time8),
      holds_at(pos(Animal2, Position2), Time),
      holds_at(pos(Animal2, Position1), Time8),
      large(Animal1),
      diff(Animal2, Animal1),
      sides(Position1, Position2, Gate),
      b(Time, Time8)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',379).

 /*  not(holds_at(pos(Animal1, Position1), Time)) :-
       ( holds_at(pos(Animal1, Position2), Time+1),
         holds_at(pos(Animal2, Position2), Time),
         holds_at(pos(Animal2, Position1), Time+1)
       ),
       large(Animal2),
       large(Animal1),
       diff(Animal1, Animal2),
       sides(Position1, Position2, Gate).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',379).

 /*  [holds_at(pos(Animal1, Position2), Time9), holds_at(pos(Animal2, Position2), Time), holds_at(pos(Animal2, Position1), Time9), large(Animal2), large(Animal1), diff(Animal1, Animal2), sides(Position1, Position2, Gate), b(Time, Time9), ignore(Time+1==Time9)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time9],
          holds_at(neg(pos(Animal1, Position1)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',379).
axiom(holds_at(neg(pos(Animal1, Position1)), Time),
   
    [ holds_at(pos(Animal1, Position2), Time9),
      holds_at(pos(Animal2, Position2), Time),
      holds_at(pos(Animal2, Position1), Time9),
      large(Animal2),
      large(Animal1),
      diff(Animal1, Animal2),
      sides(Position1, Position2, Gate),
      b(Time, Time9)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',379).

 /*  not(holds_at(pos(Animal1, Position2), Time+1)) :-
       ( holds_at(pos(Animal2, Position2), Time),
         holds_at(pos(Animal2, Position1), Time+1)
       ),
       holds_at(pos(Animal1, Position1), Time),
       large(Animal2),
       large(Animal1),
       diff(Animal1, Animal2),
       sides(Position1, Position2, Gate).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',379).

 /*  [holds_at(pos(Animal2, Position2), Time), holds_at(pos(Animal2, Position1), Time10), holds_at(pos(Animal1, Position1), Time), large(Animal2), large(Animal1), diff(Animal1, Animal2), sides(Position1, Position2, Gate), b(Time, Time10), ignore(Time+1==Time10)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time10],
          holds_at(neg(pos(Animal1, Position2)), Time10)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',379).
axiom(holds_at(neg(pos(Animal1, Position2)), Time10),
   
    [ holds_at(pos(Animal2, Position2), Time),
      holds_at(pos(Animal2, Position1), Time10),
      holds_at(pos(Animal1, Position1), Time),
      large(Animal2),
      large(Animal1),
      diff(Animal1, Animal2),
      sides(Position1, Position2, Gate),
      b(Time, Time10)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',379).

 /*  not(holds_at(pos(Animal2, Position2), Time)) :-
       holds_at(pos(Animal2, Position1), Time+1),
       holds_at(pos(Animal1, Position2), Time+1),
       holds_at(pos(Animal1, Position1), Time),
       large(Animal2),
       large(Animal1),
       diff(Animal1, Animal2),
       sides(Position1, Position2, Gate).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',379).

 /*  [holds_at(pos(Animal2, Position1), Time11), holds_at(pos(Animal1, Position2), Time11), holds_at(pos(Animal1, Position1), Time), large(Animal2), large(Animal1), diff(Animal1, Animal2), sides(Position1, Position2, Gate), b(Time, Time11), ignore(Time+1==Time11)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time11],
          holds_at(neg(pos(Animal2, Position2)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',379).
axiom(holds_at(neg(pos(Animal2, Position2)), Time),
   
    [ holds_at(pos(Animal2, Position1), Time11),
      holds_at(pos(Animal1, Position2), Time11),
      holds_at(pos(Animal1, Position1), Time),
      large(Animal2),
      large(Animal1),
      diff(Animal2, Animal1),
      sides(Position1, Position2, Gate),
      b(Time, Time11)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',379).

 /*  not(holds_at(pos(Animal2, Position1), Time+1)) :-
       holds_at(pos(Animal2, Position2), Time),
       holds_at(pos(Animal1, Position2), Time+1),
       holds_at(pos(Animal1, Position1), Time),
       large(Animal2),
       large(Animal1),
       diff(Animal1, Animal2),
       sides(Position1, Position2, Gate).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',379).

 /*  [holds_at(pos(Animal2, Position2), Time), holds_at(pos(Animal1, Position2), Time12), holds_at(pos(Animal1, Position1), Time), large(Animal2), large(Animal1), diff(Animal1, Animal2), sides(Position1, Position2, Gate), b(Time, Time12), ignore(Time+1==Time12)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time12],
          holds_at(neg(pos(Animal2, Position1)), Time12)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',379).
axiom(holds_at(neg(pos(Animal2, Position1)), Time12),
   
    [ holds_at(pos(Animal2, Position2), Time),
      holds_at(pos(Animal1, Position2), Time12),
      holds_at(pos(Animal1, Position1), Time),
      large(Animal2),
      large(Animal1),
      diff(Animal2, Animal1),
      sides(Position1, Position2, Gate),
      b(Time, Time12)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:386
% [gate,position1,position2,time]
% HoldsAt(Opened(gate),time) &
% !HoldsAt(Opened(gate),time+1) &
% Sides(position1,position2,gate) ->
% !{animal}
% HoldsAt(Pos(animal,position1),time) &
% HoldsAt(Pos(animal,position2),time+1).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:392
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',388).

 /*  holds_at(opened(Gate), Time), holds_at(neg(opened(Gate)), Time+1), sides(Position1, Position2, Gate) ->
       not(exists([Animal],
                   (holds_at(pos(Animal, Position1), Time), holds_at(pos(Animal, Position2), Time+1)))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',388).

 /*  not(holds_at(pos(Animal, Position1), Time)) :-
       holds_at(pos(Animal, Position2), Time+1),
       holds_at(opened(Gate), Time),
       holds_at(neg(opened(Gate)), Time+1),
       sides(Position1, Position2, Gate).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',388).

 /*  [holds_at(pos(Animal, Position2), Time5), holds_at(opened(Gate), Time), holds_at(neg(opened(Gate)), Time5), sides(Position1, Position2, Gate), b(Time, Time5), ignore(Time+1==Time5)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time5],
          holds_at(neg(pos(Animal, Position1)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',388).
axiom(holds_at(neg(pos(Animal, Position1)), Time),
   
    [ holds_at(pos(Animal, Position2), Time5),
      holds_at(opened(Gate), Time),
      holds_at(neg(opened(Gate)), Time5),
      sides(Position1, Position2, Gate),
      b(Time, Time5)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',388).

 /*  not(holds_at(pos(Animal, Position2), Time+1)) :-
       holds_at(pos(Animal, Position1), Time),
       holds_at(opened(Gate), Time),
       holds_at(neg(opened(Gate)), Time+1),
       sides(Position1, Position2, Gate).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',388).

 /*  [holds_at(pos(Animal, Position1), Time), holds_at(opened(Gate), Time), holds_at(neg(opened(Gate)), Time6), sides(Position1, Position2, Gate), b(Time, Time6), ignore(Time+1==Time6)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time6],
          holds_at(neg(pos(Animal, Position2)), Time6)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',388).
axiom(holds_at(neg(pos(Animal, Position2)), Time6),
   
    [ holds_at(pos(Animal, Position1), Time),
      holds_at(opened(Gate), Time),
      holds_at(neg(opened(Gate)), Time6),
      sides(Position1, Position2, Gate),
      b(Time, Time6)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',388).

 /*  not(holds_at(opened(Gate), Time)) :-
       ( holds_at(neg(opened(Gate)), Time+1),
         sides(Position1, Position2, Gate)
       ),
       holds_at(pos(Animal, Position1), Time),
       holds_at(pos(Animal, Position2), Time+1).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',388).

 /*  [holds_at(neg(opened(Gate)), Time7), sides(Position1, Position2, Gate), holds_at(pos(Animal, Position1), Time), holds_at(pos(Animal, Position2), Time7), b(Time, Time7), ignore(Time+1==Time7)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time7],
          holds_at(neg(opened(Gate)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',388).
axiom(holds_at(neg(opened(Gate)), Time),
   
    [ holds_at(neg(opened(Gate)), Time7),
      sides(Position1, Position2, Gate),
      holds_at(pos(Animal, Position1), Time),
      holds_at(pos(Animal, Position2), Time7),
      b(Time, Time7)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',388).

 /*  not(holds_at(neg(opened(Gate)), Time+1)) :-
       sides(Position1, Position2, Gate),
       holds_at(opened(Gate), Time),
       holds_at(pos(Animal, Position1), Time),
       holds_at(pos(Animal, Position2), Time+1).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',388).

 /*  [sides(Position1, Position2, Gate), holds_at(opened(Gate), Time), holds_at(pos(Animal, Position1), Time), holds_at(pos(Animal, Position2), Time8), b(Time, Time8), ignore(Time+1==Time8)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time8],
          holds_at(opened(Gate), Time8)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',388).
axiom(holds_at(opened(Gate), Time8),
   
    [ sides(Position1, Position2, Gate),
      holds_at(opened(Gate), Time),
      holds_at(pos(Animal, Position1), Time),
      holds_at(pos(Animal, Position2), Time8),
      b(Time, Time8)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',388).

 /*  not(sides(Position1, Position2, Gate)) :-
       holds_at(neg(opened(Gate)), Time+1),
       holds_at(opened(Gate), Time),
       holds_at(pos(Animal, Position1), Time),
       holds_at(pos(Animal, Position2), Time+1).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',388).

 /*  [holds_at(neg(opened(Gate)), Time9), holds_at(opened(Gate), Time), holds_at(pos(Animal, Position1), Time), holds_at(pos(Animal, Position2), Time9), b(Time, Time9), ignore(Time+1==Time9)] ->
       ta(Time,
          tvs1=[Time, Time+1],
          tvs2=[Time, Time9],
          not(sides(Position1, Position2, Gate))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',388).
axiom(not(sides(Position1, Position2, Gate)),
   
    [ holds_at(neg(opened(Gate)), Time9),
      holds_at(opened(Gate), Time),
      holds_at(pos(Animal, Position1), Time),
      holds_at(pos(Animal, Position2), Time9),
      b(Time, Time9)
    ]).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:394
% gate GateAO
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',394).
==> t(gate,gateAO).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:395
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',396).
% cage CageA
==> t(cage,cageA).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:397
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',398).
% Loc(1)=CageA.

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], equals(loc(1), cageA)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',398).
axiom(equals(loc(1), cageA),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:398
% Loc(2)=CageA.
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',398).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], equals(loc(2), cageA)).
 */
axiom(equals(loc(2), cageA),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:399
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',400).
% Loc(3)=CageA.

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], equals(loc(3), cageA)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',400).
axiom(equals(loc(3), cageA),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:400
% Loc(4)=CageA.
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',400).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], equals(loc(4), cageA)).
 */
axiom(equals(loc(4), cageA),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:401
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',402).
% Loc(5)=Outside.

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], equals(loc(5), outside)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',402).
axiom(equals(loc(5), outside),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:402
% Loc(6)=Outside.
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',402).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], equals(loc(6), outside)).
 */
axiom(equals(loc(6), outside),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:403
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',404).
% Loc(7)=Outside.

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], equals(loc(7), outside)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',404).
axiom(equals(loc(7), outside),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:404
% Loc(8)=Outside.
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',404).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], equals(loc(8), outside)).
 */
axiom(equals(loc(8), outside),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:406
% [position1,position2]
% Neighbor(position1,position2) <->
% ((position1=1 & position2=2) |
%  (position1=1 & position2=3) |
%  (position1=1 & position2=4) |
%  (position1=2 & position2=3) |
%  (position1=2 & position2=4) |
%  (position1=3 & position2=4) |
%  (position1=5 & position2=6) |
%  (position1=5 & position2=7) |
%  (position1=5 & position2=8) |
%  (position1=6 & position2=7) |
%  (position1=6 & position2=8) |
%  (position1=7 & position2=8) |
%  (position2=1 & position1=2) |
%  (position2=1 & position1=3) |
%  (position2=1 & position1=4) |
%  (position2=2 & position1=3) |
%  (position2=2 & position1=4) |
%  (position2=3 & position1=4) |
%  (position2=5 & position1=6) |
%  (position2=5 & position1=7) |
%  (position2=5 & position1=8) |
%  (position2=6 & position1=7) |
%  (position2=6 & position1=8) |
%  (position2=7 & position1=8) |
%  (position1=4 & position2=7) |
%  (position2=4 & position1=7)).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:433
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',408).

 /*  neighbor(Position1, Position2) <->
       (   equals(Position1, 1),
           equals(Position2, 2)
       ;   equals(Position1, 1),
           equals(Position2, 3)
       ;   equals(Position1, 1),
           equals(Position2, 4)
       ;   equals(Position1, 2),
           equals(Position2, 3)
       ;   equals(Position1, 2),
           equals(Position2, 4)
       ;   equals(Position1, 3),
           equals(Position2, 4)
       ;   equals(Position1, 5),
           equals(Position2, 6)
       ;   equals(Position1, 5),
           equals(Position2, 7)
       ;   equals(Position1, 5),
           equals(Position2, 8)
       ;   equals(Position1, 6),
           equals(Position2, 7)
       ;   equals(Position1, 6),
           equals(Position2, 8)
       ;   equals(Position1, 7),
           equals(Position2, 8)
       ;   equals(Position2, 1),
           equals(Position1, 2)
       ;   equals(Position2, 1),
           equals(Position1, 3)
       ;   equals(Position2, 1),
           equals(Position1, 4)
       ;   equals(Position2, 2),
           equals(Position1, 3)
       ;   equals(Position2, 2),
           equals(Position1, 4)
       ;   equals(Position2, 3),
           equals(Position1, 4)
       ;   equals(Position2, 5),
           equals(Position1, 6)
       ;   equals(Position2, 5),
           equals(Position1, 7)
       ;   equals(Position2, 5),
           equals(Position1, 8)
       ;   equals(Position2, 6),
           equals(Position1, 7)
       ;   equals(Position2, 6),
           equals(Position1, 8)
       ;   equals(Position2, 7),
           equals(Position1, 8)
       ;   equals(Position1, 4),
           equals(Position2, 7)
       ;   equals(Position2, 4),
           equals(Position1, 7)
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',408).

 /*  [neighbor] <->
       
       [  (;),
         equals,
         equals,
          (;),
         equals,
         equals,
          (;),
         equals,
         equals,
          (;),
         equals,
         equals,
          (;),
         equals,
         equals,
          (;),
         equals,
         equals,
          (;),
         equals,
         equals,
          (;),
         equals,
         equals,
          (;),
         equals,
         equals,
          (;),
         equals,
         equals,
          (;),
         equals,
         equals,
          (;),
         equals,
         equals,
          (;),
         equals,
         equals,
          (;),
         equals,
         equals,
          (;),
         equals,
         equals,
          (;),
         equals,
         equals,
          (;),
         equals,
         equals,
          (;),
         equals,
         equals,
          (;),
         equals,
         equals,
          (;),
         equals,
         equals,
          (;),
         equals,
         equals,
          (;),
         equals,
         equals,
          (;),
         equals,
         equals,
          (;),
         equals,
         equals,
          (;),
         equals,
         equals,
         equals,
         equals
       ].
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',408).

 /*  neighbor(Position1, Position2) ->
       (   equals(Position1, 1),
           equals(Position2, 2)
       ;   equals(Position1, 1),
           equals(Position2, 3)
       ;   equals(Position1, 1),
           equals(Position2, 4)
       ;   equals(Position1, 2),
           equals(Position2, 3)
       ;   equals(Position1, 2),
           equals(Position2, 4)
       ;   equals(Position1, 3),
           equals(Position2, 4)
       ;   equals(Position1, 5),
           equals(Position2, 6)
       ;   equals(Position1, 5),
           equals(Position2, 7)
       ;   equals(Position1, 5),
           equals(Position2, 8)
       ;   equals(Position1, 6),
           equals(Position2, 7)
       ;   equals(Position1, 6),
           equals(Position2, 8)
       ;   equals(Position1, 7),
           equals(Position2, 8)
       ;   equals(Position2, 1),
           equals(Position1, 2)
       ;   equals(Position2, 1),
           equals(Position1, 3)
       ;   equals(Position2, 1),
           equals(Position1, 4)
       ;   equals(Position2, 2),
           equals(Position1, 3)
       ;   equals(Position2, 2),
           equals(Position1, 4)
       ;   equals(Position2, 3),
           equals(Position1, 4)
       ;   equals(Position2, 5),
           equals(Position1, 6)
       ;   equals(Position2, 5),
           equals(Position1, 7)
       ;   equals(Position2, 5),
           equals(Position1, 8)
       ;   equals(Position2, 6),
           equals(Position1, 7)
       ;   equals(Position2, 6),
           equals(Position1, 8)
       ;   equals(Position2, 7),
           equals(Position1, 8)
       ;   equals(Position1, 4),
           equals(Position2, 7)
       ;   equals(Position2, 4),
           equals(Position1, 7)
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',408).

 /*  not(neighbor(Position1, Position2)) :-
       (   not(equals(Position1, 1))
       ;   not(equals(Position2, 2))
       ),
       (   not(equals(Position1, 1))
       ;   not(equals(Position2, 3))
       ),
       (   not(equals(Position1, 1))
       ;   not(equals(Position2, 4))
       ),
       (   not(equals(Position1, 2))
       ;   not(equals(Position2, 3))
       ),
       (   not(equals(Position1, 2))
       ;   not(equals(Position2, 4))
       ),
       (   not(equals(Position1, 3))
       ;   not(equals(Position2, 4))
       ),
       (   not(equals(Position1, 5))
       ;   not(equals(Position2, 6))
       ),
       (   not(equals(Position1, 5))
       ;   not(equals(Position2, 7))
       ),
       (   not(equals(Position1, 5))
       ;   not(equals(Position2, 8))
       ),
       (   not(equals(Position1, 6))
       ;   not(equals(Position2, 7))
       ),
       (   not(equals(Position1, 6))
       ;   not(equals(Position2, 8))
       ),
       (   not(equals(Position1, 7))
       ;   not(equals(Position2, 8))
       ),
       (   not(equals(Position2, 1))
       ;   not(equals(Position1, 2))
       ),
       (   not(equals(Position2, 1))
       ;   not(equals(Position1, 3))
       ),
       (   not(equals(Position2, 1))
       ;   not(equals(Position1, 4))
       ),
       (   not(equals(Position2, 2))
       ;   not(equals(Position1, 3))
       ),
       (   not(equals(Position2, 2))
       ;   not(equals(Position1, 4))
       ),
       (   not(equals(Position2, 3))
       ;   not(equals(Position1, 4))
       ),
       (   not(equals(Position2, 5))
       ;   not(equals(Position1, 6))
       ),
       (   not(equals(Position2, 5))
       ;   not(equals(Position1, 7))
       ),
       (   not(equals(Position2, 5))
       ;   not(equals(Position1, 8))
       ),
       (   not(equals(Position2, 6))
       ;   not(equals(Position1, 7))
       ),
       (   not(equals(Position2, 6))
       ;   not(equals(Position1, 8))
       ),
       (   not(equals(Position2, 7))
       ;   not(equals(Position1, 8))
       ),
       (   not(equals(Position1, 4))
       ;   not(equals(Position2, 7))
       ),
       (   not(equals(Position2, 4))
       ;   not(equals(Position1, 7))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',408).

 /*  [(not(equals(Position1, 1));not(equals(Position2, 2))),  (not(equals(Position1, 1));not(equals(Position2, 3))),  (not(equals(Position1, 1));not(equals(Position2, 4))),  (not(equals(Position1, 2));not(equals(Position2, 3))),  (not(equals(Position1, 2));not(equals(Position2, 4))),  (not(equals(Position1, 3));not(equals(Position2, 4))),  (not(equals(Position1, 5));not(equals(Position2, 6))),  (not(equals(Position1, 5));not(equals(Position2, 7))),  (not(equals(Position1, 5));not(equals(Position2, 8))),  (not(equals(Position1, 6));not(equals(Position2, 7))),  (not(equals(Position1, 6));not(equals(Position2, 8))),  (not(equals(Position1, 7));not(equals(Position2, 8))),  (not(equals(Position2, 1));not(equals(Position1, 2))),  (not(equals(Position2, 1));not(equals(Position1, 3))),  (not(equals(Position2, 1));not(equals(Position1, 4))),  (not(equals(Position2, 2));not(equals(Position1, 3))),  (not(equals(Position2, 2));not(equals(Position1, 4))),  (not(equals(Position2, 3));not(equals(Position1, 4))),  (not(equals(Position2, 5));not(equals(Position1, 6))),  (not(equals(Position2, 5));not(equals(Position1, 7))),  (not(equals(Position2, 5));not(equals(Position1, 8))),  (not(equals(Position2, 6));not(equals(Position1, 7))),  (not(equals(Position2, 6));not(equals(Position1, 8))),  (not(equals(Position2, 7));not(equals(Position1, 8))),  (not(equals(Position1, 4));not(equals(Position2, 7))),  (not(equals(Position2, 4));not(equals(Position1, 7)))] ->
       ta(Ta_Param,
          tvs1=[],
          tvs2=[],
          not(neighbor(Position1, Position2))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',408).
axiom(not(neighbor(Position1, Position2)),
   
    [  (not(equals(Position1, 1));not(equals(Position2, 2))),
       (not(equals(Position1, 1));not(equals(Position2, 3))),
       (not(equals(Position1, 1));not(equals(Position2, 4))),
       (not(equals(Position1, 2));not(equals(Position2, 3))),
       (not(equals(Position1, 2));not(equals(Position2, 4))),
       (not(equals(Position1, 3));not(equals(Position2, 4))),
       (not(equals(Position1, 5));not(equals(Position2, 6))),
       (not(equals(Position1, 5));not(equals(Position2, 7))),
       (not(equals(Position1, 5));not(equals(Position2, 8))),
       (not(equals(Position1, 6));not(equals(Position2, 7))),
       (not(equals(Position1, 6));not(equals(Position2, 8))),
       (not(equals(Position1, 7));not(equals(Position2, 8))),
       (not(equals(Position2, 1));not(equals(Position1, 2))),
       (not(equals(Position2, 1));not(equals(Position1, 3))),
       (not(equals(Position2, 1));not(equals(Position1, 4))),
       (not(equals(Position2, 2));not(equals(Position1, 3))),
       (not(equals(Position2, 2));not(equals(Position1, 4))),
       (not(equals(Position2, 3));not(equals(Position1, 4))),
       (not(equals(Position2, 5));not(equals(Position1, 6))),
       (not(equals(Position2, 5));not(equals(Position1, 7))),
       (not(equals(Position2, 5));not(equals(Position1, 8))),
       (not(equals(Position2, 6));not(equals(Position1, 7))),
       (not(equals(Position2, 6));not(equals(Position1, 8))),
       (not(equals(Position2, 7));not(equals(Position1, 8))),
       (not(equals(Position1, 4));not(equals(Position2, 7))),
       (not(equals(Position2, 4));not(equals(Position1, 7)))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',408).

 /*  equals(Position1, 1), equals(Position2, 2);equals(Position1, 1), equals(Position2, 3);equals(Position1, 1), equals(Position2, 4);equals(Position1, 2), equals(Position2, 3);equals(Position1, 2), equals(Position2, 4);equals(Position1, 3), equals(Position2, 4);equals(Position1, 5), equals(Position2, 6);equals(Position1, 5), equals(Position2, 7);equals(Position1, 5), equals(Position2, 8);equals(Position1, 6), equals(Position2, 7);equals(Position1, 6), equals(Position2, 8);equals(Position1, 7), equals(Position2, 8);equals(Position2, 1), equals(Position1, 2);equals(Position2, 1), equals(Position1, 3);equals(Position2, 1), equals(Position1, 4);equals(Position2, 2), equals(Position1, 3);equals(Position2, 2), equals(Position1, 4);equals(Position2, 3), equals(Position1, 4);equals(Position2, 5), equals(Position1, 6);equals(Position2, 5), equals(Position1, 7);equals(Position2, 5), equals(Position1, 8);equals(Position2, 6), equals(Position1, 7);equals(Position2, 6), equals(Position1, 8);equals(Position2, 7), equals(Position1, 8);equals(Position1, 4), equals(Position2, 7);equals(Position2, 4), equals(Position1, 7) ->
       neighbor(Position1, Position2).
 */

 /*  neighbor(Position1, Position2) :-
       (   equals(Position1, 1),
           equals(Position2, 2)
       ;   equals(Position1, 1),
           equals(Position2, 3)
       ;   equals(Position1, 1),
           equals(Position2, 4)
       ;   equals(Position1, 2),
           equals(Position2, 3)
       ;   equals(Position1, 2),
           equals(Position2, 4)
       ;   equals(Position1, 3),
           equals(Position2, 4)
       ;   equals(Position1, 5),
           equals(Position2, 6)
       ;   equals(Position1, 5),
           equals(Position2, 7)
       ;   equals(Position1, 5),
           equals(Position2, 8)
       ;   equals(Position1, 6),
           equals(Position2, 7)
       ;   equals(Position1, 6),
           equals(Position2, 8)
       ;   equals(Position1, 7),
           equals(Position2, 8)
       ;   equals(Position2, 1),
           equals(Position1, 2)
       ;   equals(Position2, 1),
           equals(Position1, 3)
       ;   equals(Position2, 1),
           equals(Position1, 4)
       ;   equals(Position2, 2),
           equals(Position1, 3)
       ;   equals(Position2, 2),
           equals(Position1, 4)
       ;   equals(Position2, 3),
           equals(Position1, 4)
       ;   equals(Position2, 5),
           equals(Position1, 6)
       ;   equals(Position2, 5),
           equals(Position1, 7)
       ;   equals(Position2, 5),
           equals(Position1, 8)
       ;   equals(Position2, 6),
           equals(Position1, 7)
       ;   equals(Position2, 6),
           equals(Position1, 8)
       ;   equals(Position2, 7),
           equals(Position1, 8)
       ;   equals(Position1, 4),
           equals(Position2, 7)
       ;   equals(Position2, 4),
           equals(Position1, 7)
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',408).

 /*  [(equals(Position1, 1), equals(Position2, 2);equals(Position1, 1), equals(Position2, 3);equals(Position1, 1), equals(Position2, 4);equals(Position1, 2), equals(Position2, 3);equals(Position1, 2), equals(Position2, 4);equals(Position1, 3), equals(Position2, 4);equals(Position1, 5), equals(Position2, 6);equals(Position1, 5), equals(Position2, 7);equals(Position1, 5), equals(Position2, 8);equals(Position1, 6), equals(Position2, 7);equals(Position1, 6), equals(Position2, 8);equals(Position1, 7), equals(Position2, 8);equals(Position2, 1), equals(Position1, 2);equals(Position2, 1), equals(Position1, 3);equals(Position2, 1), equals(Position1, 4);equals(Position2, 2), equals(Position1, 3);equals(Position2, 2), equals(Position1, 4);equals(Position2, 3), equals(Position1, 4);equals(Position2, 5), equals(Position1, 6);equals(Position2, 5), equals(Position1, 7);equals(Position2, 5), equals(Position1, 8);equals(Position2, 6), equals(Position1, 7);equals(Position2, 6), equals(Position1, 8);equals(Position2, 7), equals(Position1, 8);equals(Position1, 4), equals(Position2, 7);equals(Position2, 4), equals(Position1, 7))] ->
       ta(Ta_Param3,
          tvs1=[],
          tvs2=[],
          neighbor(Position1, Position2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',408).
axiom(neighbor(Position1, Position2),
   
    [  (equals(Position1, 1), equals(Position2, 2);equals(Position1, 1), equals(Position2, 3);equals(Position1, 1), equals(Position2, 4);equals(Position1, 2), equals(Position2, 3);equals(Position1, 2), equals(Position2, 4);equals(Position1, 3), equals(Position2, 4);equals(Position1, 5), equals(Position2, 6);equals(Position1, 5), equals(Position2, 7);equals(Position1, 5), equals(Position2, 8);equals(Position1, 6), equals(Position2, 7);equals(Position1, 6), equals(Position2, 8);equals(Position1, 7), equals(Position2, 8);equals(Position2, 1), equals(Position1, 2);equals(Position2, 1), equals(Position1, 3);equals(Position2, 1), equals(Position1, 4);equals(Position2, 2), equals(Position1, 3);equals(Position2, 2), equals(Position1, 4);equals(Position2, 3), equals(Position1, 4);equals(Position2, 5), equals(Position1, 6);equals(Position2, 5), equals(Position1, 7);equals(Position2, 5), equals(Position1, 8);equals(Position2, 6), equals(Position1, 7);equals(Position2, 6), equals(Position1, 8);equals(Position2, 7), equals(Position1, 8);equals(Position1, 4), equals(Position2, 7);equals(Position2, 4), equals(Position1, 7))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:435
% Side1(GateAO)=4.
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',435).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], equals(side1(gateAO), 4)).
 */
axiom(equals(side1(gateAO), 4),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:436
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',437).
% Side2(GateAO)=7.

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], equals(side2(gateAO), 7)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',437).
axiom(equals(side2(gateAO), 7),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e:438
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/AkmanEtAl2004/ZooWorld.e',439).
%; End of file.
