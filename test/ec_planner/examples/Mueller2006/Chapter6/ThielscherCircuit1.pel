:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(pfc).
% Wed, 01 Apr 2020 19:59:54 GMT
% From ../examples/Mueller2006/Chapter6/ThielscherCircuit1.pel:4
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ShanahanCircuit.e',102).

 /*  loading(load_e_pl,
   	'/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e').
 */
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Thielscher:1997,
%;   author = "Michael Thielscher",
%;   year = "1997",
%;   title = "Ramification and causality",
%;   journal = "Artificial Intelligence",
%;   volume = "89",
%;   pages = "317--364",
%; }
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:28
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',29).
% load foundations/Root.e
:- load_e('foundations/Root.e', changed).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:29
% load foundations/EC.e
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',29).
:- load_e('foundations/EC.e', changed).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:30
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',31).
% load foundations/ECCausal.e
:- load_e('foundations/ECCausal.e', changed).
:- if(is_e_toplevel).

 /*  loading(changed,
   	'/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e').
 */
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; Causal Constraints
%;
%; @inproceedings{Shanahan:1999a,
%;   author = "Murray Shanahan",
%;   year = "1999",
%;   title = "The ramification problem in the event calculus",
%;   booktitle = "\uppercase{P}roceedings of the \uppercase{S}ixteenth \uppercase{I}nternational \uppercase{J}oint \uppercase{C}onference on \uppercase{A}rtificial \uppercase{I}ntelligence",
%;   pages = "140--146",
%;   address = "San Mateo, CA",
%;   publisher = "Morgan Kaufmann",
%; }
%;

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e:23
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',24).
% predicate Started(fluent,time)
predicate(started(fluent,time)).
==> mpred_prop(started(fluent,time),predicate).
==> meta_argtypes(started(fluent,time)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e:24
% predicate Stopped(fluent,time)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',24).
predicate(stopped(fluent,time)).
==> mpred_prop(stopped(fluent,time),predicate).
==> meta_argtypes(stopped(fluent,time)).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e:26
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',27).
% [fluent,time]
% Started(fluent,time) <->
% (HoldsAt(fluent,time) |
%  ({event} Happens(event,time) & Initiates(event,fluent,time))).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e:29
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',27).

 /*  started(Fluent, Time) <->
       (   holds_at(Fluent, Time)
       ;   exists([Event],
                   (happens(Event, Time), initiates(Event, Fluent, Time)))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',27).

 /*  [started] <->
       [;, holds_at, exists, happens, initiates].
 */

 /*  started(Fluent, Time) ->
       (   holds_at(Fluent, Time)
       ;   exists([Event],
                   (happens(Event, Time), initiates(Event, Fluent, Time)))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',27).

 /*  not(started(Fluent, Time)) :-
       not(holds_at(Fluent, Time)),
       (   not(happens(Event, Time))
       ;   not(initiates(Event, Fluent, Time))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',27).

 /*  [holds_at(neg(Fluent), Time),  (not(happens(Event, Time));not(initiates(Event, Fluent, Time)))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(started(Fluent, Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',27).
axiom(not(started(Fluent, Time)),
   
    [ holds_at(neg(Fluent), Time),
       (not(happens(Event, Time));not(initiates(Event, Fluent, Time)))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',27).

 /*  holds_at(Fluent, Time) :-
       (   not(happens(Event, Time))
       ;   not(initiates(Event, Fluent, Time))
       ),
       started(Fluent, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',27).

 /*  [(not(happens(Event, Time));not(initiates(Event, Fluent, Time))), started(Fluent, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(Fluent, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',27).
axiom(holds_at(Fluent, Time),
   
    [  (not(happens(Event, Time));not(initiates(Event, Fluent, Time))),
      started(Fluent, Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',27).

 /*  happens(Event, Time) :-
       not(holds_at(Fluent, Time)),
       started(Fluent, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',27).

 /*  [holds_at(neg(Fluent), Time), started(Fluent, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          happens(Event, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',27).
axiom(happens(Event, Time),
    [holds_at(neg(Fluent), Time), started(Fluent, Time)]).

 /*  initiates(Event, Fluent, Time) :-
       not(holds_at(Fluent, Time)),
       started(Fluent, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',27).

 /*  [holds_at(neg(Fluent), Time), started(Fluent, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(Event, Fluent, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',27).
axiom(initiates(Event, Fluent, Time),
    [holds_at(neg(Fluent), Time), started(Fluent, Time)]).

 /*  holds_at(Fluent, Time);exists([Event],  (happens(Event, Time), initiates(Event, Fluent, Time))) ->
       started(Fluent, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',27).

 /*  started(Fluent, Time) :-
       (   holds_at(Fluent, Time)
       ;   happens(Event, Time),
           initiates(Event, Fluent, Time)
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',27).

 /*  [(holds_at(Fluent, Time);happens(Event, Time), initiates(Event, Fluent, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          started(Fluent, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',27).
axiom(started(Fluent, Time),
   
    [  (holds_at(Fluent, Time);happens(Event, Time), initiates(Event, Fluent, Time))
    ]).

 /*  not(holds_at(Fluent, Time)) :-
       not(started(Fluent, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',27).

 /*  [not(started(Fluent, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(Fluent), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',27).
axiom(holds_at(neg(Fluent), Time),
    [not(started(Fluent, Time))]).

 /*  not(happens(Event, Time)) :-
       initiates(Event, Fluent, Time),
       not(started(Fluent, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',27).

 /*  [initiates(Event, Fluent, Time), not(started(Fluent, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(Event, Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',27).
axiom(not(happens(Event, Time)),
   
    [ initiates(Event, Fluent, Time),
      not(started(Fluent, Time))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',27).

 /*  not(initiates(Event, Fluent, Time)) :-
       happens(Event, Time),
       not(started(Fluent, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',27).

 /*  [happens(Event, Time), not(started(Fluent, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(initiates(Event, Fluent, Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',27).
axiom(not(initiates(Event, Fluent, Time)),
    [happens(Event, Time), not(started(Fluent, Time))]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e:31
% [fluent,time]
% Stopped(fluent,time) <->
% (!HoldsAt(fluent,time) |
%  ({event} Happens(event,time) & Terminates(event,fluent,time))).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e:34
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',33).

 /*  stopped(Fluent, Time) <->
       (   holds_at(neg(Fluent), Time)
       ;   exists([Event],
                   (happens(Event, Time), terminates(Event, Fluent, Time)))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',33).

 /*  [stopped] <->
       [;, holds_at, neg, exists, happens, terminates].
 */

 /*  stopped(Fluent, Time) ->
       (   holds_at(neg(Fluent), Time)
       ;   exists([Event],
                   (happens(Event, Time), terminates(Event, Fluent, Time)))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',33).

 /*  not(stopped(Fluent, Time)) :-
       not(holds_at(neg(Fluent), Time)),
       (   not(happens(Event, Time))
       ;   not(terminates(Event, Fluent, Time))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',33).

 /*  [holds_at(Fluent, Time),  (not(happens(Event, Time));not(terminates(Event, Fluent, Time)))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(stopped(Fluent, Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',33).
axiom(not(stopped(Fluent, Time)),
   
    [ holds_at(Fluent, Time),
       (not(happens(Event, Time));not(terminates(Event, Fluent, Time)))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',33).

 /*  holds_at(neg(Fluent), Time) :-
       (   not(happens(Event, Time))
       ;   not(terminates(Event, Fluent, Time))
       ),
       stopped(Fluent, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',33).

 /*  [(not(happens(Event, Time));not(terminates(Event, Fluent, Time))), stopped(Fluent, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(Fluent), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',33).
axiom(holds_at(neg(Fluent), Time),
   
    [  (not(happens(Event, Time));not(terminates(Event, Fluent, Time))),
      stopped(Fluent, Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',33).

 /*  happens(Event, Time) :-
       not(holds_at(neg(Fluent), Time)),
       stopped(Fluent, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',33).

 /*  [holds_at(Fluent, Time), stopped(Fluent, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          happens(Event, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',33).
axiom(happens(Event, Time),
    [holds_at(Fluent, Time), stopped(Fluent, Time)]).

 /*  terminates(Event, Fluent, Time) :-
       not(holds_at(neg(Fluent), Time)),
       stopped(Fluent, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',33).

 /*  [holds_at(Fluent, Time), stopped(Fluent, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(Event, Fluent, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',33).
axiom(terminates(Event, Fluent, Time),
    [holds_at(Fluent, Time), stopped(Fluent, Time)]).

 /*  holds_at(neg(Fluent), Time);exists([Event],  (happens(Event, Time), terminates(Event, Fluent, Time))) ->
       stopped(Fluent, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',33).

 /*  stopped(Fluent, Time) :-
       (   holds_at(neg(Fluent), Time)
       ;   happens(Event, Time),
           terminates(Event, Fluent, Time)
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',33).

 /*  [(holds_at(neg(Fluent), Time);happens(Event, Time), terminates(Event, Fluent, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          stopped(Fluent, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',33).
axiom(stopped(Fluent, Time),
   
    [  (holds_at(neg(Fluent), Time);happens(Event, Time), terminates(Event, Fluent, Time))
    ]).

 /*  not(holds_at(neg(Fluent), Time)) :-
       not(stopped(Fluent, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',33).

 /*  [not(stopped(Fluent, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(Fluent, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',33).
axiom(holds_at(Fluent, Time),
    [not(stopped(Fluent, Time))]).

 /*  not(happens(Event, Time)) :-
       terminates(Event, Fluent, Time),
       not(stopped(Fluent, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',33).

 /*  [terminates(Event, Fluent, Time), not(stopped(Fluent, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(Event, Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',33).
axiom(not(happens(Event, Time)),
   
    [ terminates(Event, Fluent, Time),
      not(stopped(Fluent, Time))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',33).

 /*  not(terminates(Event, Fluent, Time)) :-
       happens(Event, Time),
       not(stopped(Fluent, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',33).

 /*  [happens(Event, Time), not(stopped(Fluent, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(terminates(Event, Fluent, Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',33).
axiom(not(terminates(Event, Fluent, Time)),
    [happens(Event, Time), not(stopped(Fluent, Time))]).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e:36
% predicate Initiated(fluent,time)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',36).
predicate(initiated(fluent,time)).
==> mpred_prop(initiated(fluent,time),predicate).
==> meta_argtypes(initiated(fluent,time)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e:37
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',38).
% predicate Terminated(fluent,time)
predicate(terminated(fluent,time)).
==> mpred_prop(terminated(fluent,time),predicate).
==> meta_argtypes(terminated(fluent,time)).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e:39
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',40).
% [fluent,time]
% Initiated(fluent,time) <->
% (Started(fluent,time) &
%  !({event} Happens(event,time) & Terminates(event,fluent,time))).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e:42
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',40).

 /*  initiated(Fluent, Time) <->
       started(Fluent, Time),
       not(exists([Event],
                   (happens(Event, Time), terminates(Event, Fluent, Time)))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',40).

 /*  [initiated] <->
       [started, not, exists, happens, terminates].
 */

 /*  initiated(Fluent, Time) ->
       started(Fluent, Time),
       not(exists([Event],
                   (happens(Event, Time), terminates(Event, Fluent, Time)))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',40).

 /*  not(initiated(Fluent, Time)) :-
       (   not(started(Fluent, Time))
       ;   happens(Event, Time),
           terminates(Event, Fluent, Time)
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',40).

 /*  [(not(started(Fluent, Time));happens(Event, Time), terminates(Event, Fluent, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(initiated(Fluent, Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',40).
axiom(not(initiated(Fluent, Time)),
   
    [  (not(started(Fluent, Time));happens(Event, Time), terminates(Event, Fluent, Time))
    ]).

 /*  started(Fluent, Time) :-
       initiated(Fluent, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',40).

 /*  [initiated(Fluent, Time)] ->
       ta(Ta_Param, tvs1=[], tvs2=[], started(Fluent, Time)).
 */
axiom(started(Fluent, Time),
    [initiated(Fluent, Time)]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',40).

 /*  not(happens(Event, Time)) :-
       terminates(Event, Fluent, Time),
       initiated(Fluent, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',40).

 /*  [terminates(Event, Fluent, Time), initiated(Fluent, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(Event, Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',40).
axiom(not(happens(Event, Time)),
   
    [ terminates(Event, Fluent, Time),
      initiated(Fluent, Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',40).

 /*  not(terminates(Event, Fluent, Time)) :-
       happens(Event, Time),
       initiated(Fluent, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',40).

 /*  [happens(Event, Time), initiated(Fluent, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(terminates(Event, Fluent, Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',40).
axiom(not(terminates(Event, Fluent, Time)),
    [happens(Event, Time), initiated(Fluent, Time)]).

 /*  started(Fluent, Time), not(exists([Event],  (happens(Event, Time), terminates(Event, Fluent, Time)))) ->
       initiated(Fluent, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',40).

 /*  initiated(Fluent, Time) :-
       started(Fluent, Time),
       (   not(happens(Event, Time))
       ;   not(terminates(Event, Fluent, Time))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',40).

 /*  [started(Fluent, Time),  (not(happens(Event, Time));not(terminates(Event, Fluent, Time)))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiated(Fluent, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',40).
axiom(initiated(Fluent, Time),
   
    [ started(Fluent, Time),
       (not(happens(Event, Time));not(terminates(Event, Fluent, Time)))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',40).

 /*  not(started(Fluent, Time)) :-
       (   not(happens(Event, Time))
       ;   not(terminates(Event, Fluent, Time))
       ),
       not(initiated(Fluent, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',40).

 /*  [(not(happens(Event, Time));not(terminates(Event, Fluent, Time))), not(initiated(Fluent, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(started(Fluent, Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',40).
axiom(not(started(Fluent, Time)),
   
    [  (not(happens(Event, Time));not(terminates(Event, Fluent, Time))),
      not(initiated(Fluent, Time))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',40).

 /*  happens(Event, Time) :-
       started(Fluent, Time),
       not(initiated(Fluent, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',40).

 /*  [started(Fluent, Time), not(initiated(Fluent, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          happens(Event, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',40).
axiom(happens(Event, Time),
    [started(Fluent, Time), not(initiated(Fluent, Time))]).

 /*  terminates(Event, Fluent, Time) :-
       started(Fluent, Time),
       not(initiated(Fluent, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',40).

 /*  [started(Fluent, Time), not(initiated(Fluent, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(Event, Fluent, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',40).
axiom(terminates(Event, Fluent, Time),
    [started(Fluent, Time), not(initiated(Fluent, Time))]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e:44
% [fluent,time]
% Terminated(fluent,time) <->
% (Stopped(fluent,time) &
%  !({event} Happens(event,time) & Initiates(event,fluent,time))).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e:47
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',46).

 /*  terminated(Fluent, Time) <->
       stopped(Fluent, Time),
       not(exists([Event],
                   (happens(Event, Time), initiates(Event, Fluent, Time)))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',46).

 /*  [terminated] <->
       [stopped, not, exists, happens, initiates].
 */

 /*  terminated(Fluent, Time) ->
       stopped(Fluent, Time),
       not(exists([Event],
                   (happens(Event, Time), initiates(Event, Fluent, Time)))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',46).

 /*  not(terminated(Fluent, Time)) :-
       (   not(stopped(Fluent, Time))
       ;   happens(Event, Time),
           initiates(Event, Fluent, Time)
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',46).

 /*  [(not(stopped(Fluent, Time));happens(Event, Time), initiates(Event, Fluent, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(terminated(Fluent, Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',46).
axiom(not(terminated(Fluent, Time)),
   
    [  (not(stopped(Fluent, Time));happens(Event, Time), initiates(Event, Fluent, Time))
    ]).

 /*  stopped(Fluent, Time) :-
       terminated(Fluent, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',46).

 /*  [terminated(Fluent, Time)] ->
       ta(Ta_Param, tvs1=[], tvs2=[], stopped(Fluent, Time)).
 */
axiom(stopped(Fluent, Time),
    [terminated(Fluent, Time)]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',46).

 /*  not(happens(Event, Time)) :-
       initiates(Event, Fluent, Time),
       terminated(Fluent, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',46).

 /*  [initiates(Event, Fluent, Time), terminated(Fluent, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(Event, Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',46).
axiom(not(happens(Event, Time)),
   
    [ initiates(Event, Fluent, Time),
      terminated(Fluent, Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',46).

 /*  not(initiates(Event, Fluent, Time)) :-
       happens(Event, Time),
       terminated(Fluent, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',46).

 /*  [happens(Event, Time), terminated(Fluent, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(initiates(Event, Fluent, Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',46).
axiom(not(initiates(Event, Fluent, Time)),
    [happens(Event, Time), terminated(Fluent, Time)]).

 /*  stopped(Fluent, Time), not(exists([Event],  (happens(Event, Time), initiates(Event, Fluent, Time)))) ->
       terminated(Fluent, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',46).

 /*  terminated(Fluent, Time) :-
       stopped(Fluent, Time),
       (   not(happens(Event, Time))
       ;   not(initiates(Event, Fluent, Time))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',46).

 /*  [stopped(Fluent, Time),  (not(happens(Event, Time));not(initiates(Event, Fluent, Time)))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminated(Fluent, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',46).
axiom(terminated(Fluent, Time),
   
    [ stopped(Fluent, Time),
       (not(happens(Event, Time));not(initiates(Event, Fluent, Time)))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',46).

 /*  not(stopped(Fluent, Time)) :-
       (   not(happens(Event, Time))
       ;   not(initiates(Event, Fluent, Time))
       ),
       not(terminated(Fluent, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',46).

 /*  [(not(happens(Event, Time));not(initiates(Event, Fluent, Time))), not(terminated(Fluent, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(stopped(Fluent, Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',46).
axiom(not(stopped(Fluent, Time)),
   
    [  (not(happens(Event, Time));not(initiates(Event, Fluent, Time))),
      not(terminated(Fluent, Time))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',46).

 /*  happens(Event, Time) :-
       stopped(Fluent, Time),
       not(terminated(Fluent, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',46).

 /*  [stopped(Fluent, Time), not(terminated(Fluent, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          happens(Event, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',46).
axiom(happens(Event, Time),
   
    [ stopped(Fluent, Time),
      not(terminated(Fluent, Time))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',46).

 /*  initiates(Event, Fluent, Time) :-
       stopped(Fluent, Time),
       not(terminated(Fluent, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',46).

 /*  [stopped(Fluent, Time), not(terminated(Fluent, Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(Event, Fluent, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',46).
axiom(initiates(Event, Fluent, Time),
   
    [ stopped(Fluent, Time),
      not(terminated(Fluent, Time))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e:49
%; End of file.
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/foundations/ECCausal.e',49).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:32
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',33).
% sort switch
==> sort(switch).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:33
% sort relay
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',33).
==> sort(relay).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:34
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',35).
% sort light
==> sort(light).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:36
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',37).
% switch S1, S2, S3
==> t(switch,s1).
==> t(switch,s2).
==> t(switch,s3).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:37
% relay R
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',37).
==> t(relay,r).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:38
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',39).
% light L
==> t(light,l).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:40
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',41).
% event Light(light)
event(light(light)).
==> mpred_prop(light(light),event).
==> meta_argtypes(light(light)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:41
% event Close(switch)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',41).
event(close(switch)).
==> mpred_prop(close(switch),event).
==> meta_argtypes(close(switch)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:42
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',43).
% event Open(switch)
event(open(switch)).
==> mpred_prop(open(switch),event).
==> meta_argtypes(open(switch)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:43
% event Activate(relay)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',43).
event(activate(relay)).
==> mpred_prop(activate(relay),event).
==> meta_argtypes(activate(relay)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:45
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',46).
% fluent Lit(light)
fluent(lit(light)).
==> mpred_prop(lit(light),fluent).
==> meta_argtypes(lit(light)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:46
% fluent Closed(switch)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',46).
fluent(closed(switch)).
==> mpred_prop(closed(switch),fluent).
==> meta_argtypes(closed(switch)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:47
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',48).
% fluent Activated(relay)
fluent(activated(relay)).
==> mpred_prop(activated(relay),fluent).
==> meta_argtypes(activated(relay)).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:49
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',50).
% [time]
% Stopped(Lit(L),time) &
% Initiated(Closed(S1),time) &
% Initiated(Closed(S2),time) ->
% Happens(Light(L),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:53
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',50).

 /*  stopped(lit(l), Time), initiated(closed(s1), Time), initiated(closed(s2), Time) ->
       happens(light(l), Time).
 */

 /*  happens(light(l), Time) :-
       stopped(lit(l), Time),
       initiated(closed(s1), Time),
       initiated(closed(s2), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',50).

 /*  [stopped(lit(l), Time), initiated(closed(s1), Time), initiated(closed(s2), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          happens(light(l), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',50).
axiom(happens(light(l), Time),
   
    [ stopped(lit(l), Time),
      initiated(closed(s1), Time),
      initiated(closed(s2), Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',50).

 /*  not(stopped(lit(l), Time)) :-
       ( initiated(closed(s1), Time),
         initiated(closed(s2), Time)
       ),
       not(happens(light(l), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',50).

 /*  [initiated(closed(s1), Time), initiated(closed(s2), Time), not(happens(light(l), Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(stopped(lit(l), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',50).
axiom(not(stopped(lit(l), Time)),
   
    [ initiated(closed(s1), Time),
      initiated(closed(s2), Time),
      not(happens(light(l), Time))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',50).

 /*  not(initiated(closed(s1), Time)) :-
       initiated(closed(s2), Time),
       stopped(lit(l), Time),
       not(happens(light(l), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',50).

 /*  [initiated(closed(s2), Time), stopped(lit(l), Time), not(happens(light(l), Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(initiated(closed(s1), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',50).
axiom(not(initiated(closed(s1), Time)),
   
    [ initiated(closed(s2), Time),
      stopped(lit(l), Time),
      not(happens(light(l), Time))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',50).

 /*  not(initiated(closed(s2), Time)) :-
       initiated(closed(s1), Time),
       stopped(lit(l), Time),
       not(happens(light(l), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',50).

 /*  [initiated(closed(s1), Time), stopped(lit(l), Time), not(happens(light(l), Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(initiated(closed(s2), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',50).
axiom(not(initiated(closed(s2), Time)),
   
    [ initiated(closed(s1), Time),
      stopped(lit(l), Time),
      not(happens(light(l), Time))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:55
% [time]
% Started(Closed(S2),time) &
% Initiated(Activated(R),time) ->
% Happens(Open(S2),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:58
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',57).

 /*  started(closed(s2), Time), initiated(activated(r), Time) ->
       happens(open(s2), Time).
 */

 /*  happens(open(s2), Time) :-
       started(closed(s2), Time),
       initiated(activated(r), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',57).

 /*  [started(closed(s2), Time), initiated(activated(r), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          happens(open(s2), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',57).
axiom(happens(open(s2), Time),
    [started(closed(s2), Time), initiated(activated(r), Time)]).

 /*  not(started(closed(s2), Time)) :-
       initiated(activated(r), Time),
       not(happens(open(s2), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',57).

 /*  [initiated(activated(r), Time), not(happens(open(s2), Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(started(closed(s2), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',57).
axiom(not(started(closed(s2), Time)),
    [initiated(activated(r), Time), not(happens(open(s2), Time))]).

 /*  not(initiated(activated(r), Time)) :-
       started(closed(s2), Time),
       not(happens(open(s2), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',57).

 /*  [started(closed(s2), Time), not(happens(open(s2), Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(initiated(activated(r), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',57).
axiom(not(initiated(activated(r), Time)),
    [started(closed(s2), Time), not(happens(open(s2), Time))]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:60
% [time]
% Stopped(Activated(R),time) &
% Initiated(Closed(S1),time) &
% Initiated(Closed(S3),time) ->
% Happens(Activate(R),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:64
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',62).

 /*  stopped(activated(r), Time), initiated(closed(s1), Time), initiated(closed(s3), Time) ->
       happens(activate(r), Time).
 */

 /*  happens(activate(r), Time) :-
       stopped(activated(r), Time),
       initiated(closed(s1), Time),
       initiated(closed(s3), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',62).

 /*  [stopped(activated(r), Time), initiated(closed(s1), Time), initiated(closed(s3), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          happens(activate(r), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',62).
axiom(happens(activate(r), Time),
   
    [ stopped(activated(r), Time),
      initiated(closed(s1), Time),
      initiated(closed(s3), Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',62).

 /*  not(stopped(activated(r), Time)) :-
       ( initiated(closed(s1), Time),
         initiated(closed(s3), Time)
       ),
       not(happens(activate(r), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',62).

 /*  [initiated(closed(s1), Time), initiated(closed(s3), Time), not(happens(activate(r), Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(stopped(activated(r), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',62).
axiom(not(stopped(activated(r), Time)),
   
    [ initiated(closed(s1), Time),
      initiated(closed(s3), Time),
      not(happens(activate(r), Time))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',62).

 /*  not(initiated(closed(s1), Time)) :-
       initiated(closed(s3), Time),
       stopped(activated(r), Time),
       not(happens(activate(r), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',62).

 /*  [initiated(closed(s3), Time), stopped(activated(r), Time), not(happens(activate(r), Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(initiated(closed(s1), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',62).
axiom(not(initiated(closed(s1), Time)),
   
    [ initiated(closed(s3), Time),
      stopped(activated(r), Time),
      not(happens(activate(r), Time))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',62).

 /*  not(initiated(closed(s3), Time)) :-
       initiated(closed(s1), Time),
       stopped(activated(r), Time),
       not(happens(activate(r), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',62).

 /*  [initiated(closed(s1), Time), stopped(activated(r), Time), not(happens(activate(r), Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(initiated(closed(s3), Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',62).
axiom(not(initiated(closed(s3), Time)),
   
    [ initiated(closed(s1), Time),
      stopped(activated(r), Time),
      not(happens(activate(r), Time))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:66
% [switch,time]
 % Initiates(Close(switch),Closed(switch),time).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',66).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(close(Switch), closed(Switch), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',66).
axiom(initiates(close(Switch), closed(Switch), Time),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:67
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',68).
% [switch,time]
 % Terminates(Open(switch),Closed(switch),time).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(open(Switch), closed(Switch), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',68).
axiom(terminates(open(Switch), closed(Switch), Time),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:68
% [relay,time]
 % Initiates(Activate(relay),Activated(relay),time).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',68).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(activate(Relay), activated(Relay), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',68).
axiom(initiates(activate(Relay), activated(Relay), Time),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:69
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',70).
% [light,time]
 % Initiates(Light(light),Lit(light),time).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(light(Light), lit(Light), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',70).
axiom(initiates(light(Light), lit(Light), Time),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:71
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',72).
% !HoldsAt(Closed(S1),0).

 /*  [] ->
       ta(Ta_Param,
          tvs1=[start],
          tvs2=[start],
          holds_at(neg(closed(s1)), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',72).
axiom(holds_at(neg(closed(s1)), start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:72
% HoldsAt(Closed(S2),0).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',72).

 /*  [] ->
       ta(Ta_Param, tvs1=[start], tvs2=[start], holds_at(closed(s2), start)).
 */
axiom(holds_at(closed(s2), start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:73
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',74).
% HoldsAt(Closed(S3),0).

 /*  [] ->
       ta(Ta_Param, tvs1=[start], tvs2=[start], holds_at(closed(s3), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',74).
axiom(holds_at(closed(s3), start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:74
% !HoldsAt(Activated(R),0).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',74).

 /*  [] ->
       ta(Ta_Param,
          tvs1=[start],
          tvs2=[start],
          holds_at(neg(activated(r)), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',74).
axiom(holds_at(neg(activated(r)), start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:75
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',76).
% !HoldsAt(Lit(L),0).

 /*  [] ->
       ta(Ta_Param, tvs1=[start], tvs2=[start], holds_at(neg(lit(l)), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',76).
axiom(holds_at(neg(lit(l)), start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:77
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',78).
% Happens(Close(S1),0).

 /*  [] ->
       ta(Ta_Param, tvs1=[start], tvs2=[start], happens(close(s1), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',78).
axiom(happens(close(s1), start),
    []).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:79
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',80).
% completion Happens
==> completion(happens).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:81
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',82).
% range time 0 1
==> range(time,0,1).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e:82
% range offset 1 1
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter6/ThielscherCircuit1.e',82).
==> range(offset,1,1).
%; End of file.
