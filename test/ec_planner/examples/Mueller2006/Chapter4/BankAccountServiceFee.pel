:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(pfc).
% Wed, 01 Apr 2020 19:59:51 GMT
% From ../examples/Mueller2006/Chapter4/BankAccountServiceFee.pel:4
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/AlarmClock.e',90).

 /*  loading(load_e_pl,
   	'/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e').
 */
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:19
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',20).
% option modeldiff on
:- set_ec_option(modeldiff, on).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:21
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',22).
% load foundations/Root.e
:- load_e('foundations/Root.e', changed).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:22
% load foundations/EC.e
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',22).
:- load_e('foundations/EC.e', changed).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:24
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',25).
% sort account
==> sort(account).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:25
% sort value: integer
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',25).
==> subsort(value,integer).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:27
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',28).
% account Account1, Account2
==> t(account,account1).
==> t(account,account2).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:29
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',30).
% predicate EndOfMonth(time)
predicate(endOfMonth(time)).
==> mpred_prop(endOfMonth(time),predicate).
==> meta_argtypes(endOfMonth(time)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:30
% function ServiceFee(account): value
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',30).
function(serviceFee(account)).
==> mpred_prop(serviceFee(account),function).
==> meta_argtypes(serviceFee(account)).
predicate(serviceFeePred(account,value)).
==> mpred_prop(serviceFeePred(account,value),predicate).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',30).
==> meta_argtypes(serviceFeePred(account,value)).

 /*  fix_axiom_head(Time) ->
       
       [ functional_predicate(serviceFee, serviceFeePred),
          (->),
         holds_at(functional_predicate(serviceFee, serviceFeePred), Time)
       ].
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',30).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(functional_predicate(serviceFee, serviceFeePred), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',30).
axiom(holds_at(functional_predicate(serviceFee, serviceFeePred), Time),
    []).
==> resultIsa(serviceFee,value).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:31
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',32).
% function MinimumBalance(account): value
function(minimumBalance(account)).
==> mpred_prop(minimumBalance(account),function).
==> meta_argtypes(minimumBalance(account)).
predicate(minimumBalancePred(account,value)).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',32).
==> mpred_prop(minimumBalancePred(account,value),predicate).
==> meta_argtypes(minimumBalancePred(account,value)).

 /*  fix_axiom_head(Time) ->
       
       [ functional_predicate(minimumBalance, minimumBalancePred),
          (->),
         holds_at(functional_predicate(minimumBalance, minimumBalancePred),
                  Time)
       ].
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',32).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(functional_predicate(minimumBalance, minimumBalancePred),
                   Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',32).
axiom(holds_at(functional_predicate(minimumBalance, minimumBalancePred), Time),
    []).
==> resultIsa(minimumBalance,value).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:33
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',34).
% fluent ServiceFeeCharged(account)
fluent(serviceFeeCharged(account)).
==> mpred_prop(serviceFeeCharged(account),fluent).
==> meta_argtypes(serviceFeeCharged(account)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:34
% fluent Balance(account,value)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',34).
fluent(balance(account,value)).
==> mpred_prop(balance(account,value),fluent).
==> meta_argtypes(balance(account,value)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:36
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',37).
% event Transfer(account,account,value)
event(transfer(account,account,value)).
==> mpred_prop(transfer(account,account,value),event).
==> meta_argtypes(transfer(account,account,value)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:37
% event MonthlyReset(account)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',37).
event(monthlyReset(account)).
==> mpred_prop(monthlyReset(account),event).
==> meta_argtypes(monthlyReset(account)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:38
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',39).
% event ChargeServiceFee(account)
event(chargeServiceFee(account)).
==> mpred_prop(chargeServiceFee(account),event).
==> meta_argtypes(chargeServiceFee(account)).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:40
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',41).
%; Sigma
% [account1,account2,value1,value2,value3,value4,time]
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:43
% HoldsAt(Balance(account1,value1),time) &
% HoldsAt(Balance(account2,value2),time) &
% value3>0 &
% value1>=value3 &
% value4=(value2+value3) ->
% Initiates(Transfer(account1,account2,value3),Balance(account2,value4),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:48
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',43).

 /*  [holds_at(balance(Account1, Value1), Time), holds_at(balance(Account2, Value2), Time), comparison(Value3, 0, >), comparison(Value1, Value3, >=), equals(Value4, Value2+Value3)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(transfer(Account1, Account2, Value3),
                    balance(Account2, Value4),
                    Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',43).
axiom(initiates(transfer(Account1, Account2, Value3), balance(Account2, Value4), Time),
   
    [ holds_at(balance(Account1, Value1), Time),
      holds_at(balance(Account2, Value2), Time),
      comparison(Value3, 0, >),
      comparison(Value1, Value3, >=),
      equals(Value4, Value2+Value3)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:50
% [account1,account2,value1,value2,value3,time]
% HoldsAt(Balance(account1,value1),time) &
% HoldsAt(Balance(account2,value2),time) &
% value3>0 &
% value1>=value3 ->
% Terminates(Transfer(account1,account2,value3),Balance(account2,value2),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:55
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',52).

 /*  [holds_at(balance(Account1, Value1), Time), holds_at(balance(Account2, Value2), Time), comparison(Value3, 0, >), comparison(Value1, Value3, >=)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(transfer(Account1, Account2, Value3),
                     balance(Account2, Value2),
                     Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',52).
axiom(terminates(transfer(Account1, Account2, Value3), balance(Account2, Value2), Time),
   
    [ holds_at(balance(Account1, Value1), Time),
      holds_at(balance(Account2, Value2), Time),
      comparison(Value3, 0, >),
      comparison(Value1, Value3, >=)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:57
% [account1,account2,value1,value2,value3,value4,time]
% HoldsAt(Balance(account1,value1),time) &
% HoldsAt(Balance(account2,value2),time) &
% value3>0 &
% value1>=value3 &
% value4=(value1-value3) ->
% Initiates(Transfer(account1,account2,value3),Balance(account1,value4),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:63
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',59).

 /*  [holds_at(balance(Account1, Value1), Time), holds_at(balance(Account2, Value2), Time), comparison(Value3, 0, >), comparison(Value1, Value3, >=), equals(Value4, Value1-Value3)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(transfer(Account1, Account2, Value3),
                    balance(Account1, Value4),
                    Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',59).
axiom(initiates(transfer(Account1, Account2, Value3), balance(Account1, Value4), Time),
   
    [ holds_at(balance(Account1, Value1), Time),
      holds_at(balance(Account2, Value2), Time),
      comparison(Value3, 0, >),
      comparison(Value1, Value3, >=),
      equals(Value4, Value1-Value3)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:65
% [account1,account2,value1,value2,value3,time]
% HoldsAt(Balance(account1,value1),time) &
% HoldsAt(Balance(account2,value2),time) &
% value3>0 &
% value1>=value3 ->
% Terminates(Transfer(account1,account2,value3),Balance(account1,value1),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:70
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',67).

 /*  [holds_at(balance(Account1, Value1), Time), holds_at(balance(Account2, Value2), Time), comparison(Value3, 0, >), comparison(Value1, Value3, >=)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(transfer(Account1, Account2, Value3),
                     balance(Account1, Value1),
                     Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',67).
axiom(terminates(transfer(Account1, Account2, Value3), balance(Account1, Value1), Time),
   
    [ holds_at(balance(Account1, Value1), Time),
      holds_at(balance(Account2, Value2), Time),
      comparison(Value3, 0, >),
      comparison(Value1, Value3, >=)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:72
% [account,time]
% Initiates(ChargeServiceFee(account),ServiceFeeCharged(account),time).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',74).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(chargeServiceFee(Account),
                    serviceFeeCharged(Account),
                    Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',74).
axiom(initiates(chargeServiceFee(Account), serviceFeeCharged(Account), Time),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:75
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',76).
% [account,time]
% Terminates(MonthlyReset(account),ServiceFeeCharged(account),time).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(monthlyReset(Account),
                     serviceFeeCharged(Account),
                     Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',76).
axiom(terminates(monthlyReset(Account), serviceFeeCharged(Account), Time),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:78
% [account,value1,value2,time]
% HoldsAt(Balance(account,value1),time) &
% value2 = (value1-ServiceFee(account)) ->
% Initiates(ChargeServiceFee(account),
%           Balance(account,value2),
%           time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:83
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',80).

 /*  [holds_at(balance(Account, Value1), Time), equals(Value2, Value1-serviceFee(Account))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(chargeServiceFee(Account),
                    balance(Account, Value2),
                    Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',80).
axiom(initiates(chargeServiceFee(Account), balance(Account, Value2), Time),
   
    [ holds_at(balance(Account, Value1), Time),
      equals(Value2, Value1-serviceFee(Account))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:85
% [account,value,time]
% HoldsAt(Balance(account,value),time) ->
% Terminates(ChargeServiceFee(account),Balance(account,value),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:87

 /*  [holds_at(balance(Account, Value), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(chargeServiceFee(Account),
                     balance(Account, Value),
                     Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',87).
axiom(terminates(chargeServiceFee(Account), balance(Account, Value), Time),
    [holds_at(balance(Account, Value), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:89
%; Delta
% [account,value,time]
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:92
% HoldsAt(Balance(account,value),time) &
% value<MinimumBalance(account) &
% !HoldsAt(ServiceFeeCharged(account),time) ->
% Happens(ChargeServiceFee(account),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:95
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',92).

 /*  holds_at(balance(Account, Value), Time), Value<minimumBalance(Account), holds_at(neg(serviceFeeCharged(Account)), Time) ->
       happens(chargeServiceFee(Account), Time).
 */

 /*  happens(chargeServiceFee(Account), Time) :-
       holds_at(balance(Account, Value), Time),
       comparison(Value, minimumBalance(Account), <),
       holds_at(neg(serviceFeeCharged(Account)), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',92).

 /*  [holds_at(balance(Account, Value), Time), comparison(Value, minimumBalance(Account), <), holds_at(neg(serviceFeeCharged(Account)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          happens(chargeServiceFee(Account), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',92).
axiom(happens(chargeServiceFee(Account), Time),
   
    [ holds_at(balance(Account, Value), Time),
      comparison(Value, minimumBalance(Account), <),
      holds_at(neg(serviceFeeCharged(Account)), Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',92).

 /*  not(holds_at(balance(Account, Value), Time)) :-
       ( comparison(Value, minimumBalance(Account), <),
         holds_at(neg(serviceFeeCharged(Account)), Time)
       ),
       not(happens(chargeServiceFee(Account), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',92).

 /*  [comparison(Value, minimumBalance(Account), <), holds_at(neg(serviceFeeCharged(Account)), Time), not(happens(chargeServiceFee(Account), Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(balance(Account, Value)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',92).
axiom(holds_at(neg(balance(Account, Value)), Time),
   
    [ comparison(Value, minimumBalance(Account), <),
      holds_at(neg(serviceFeeCharged(Account)), Time),
      not(happens(chargeServiceFee(Account), Time))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',92).

 /*  not(holds_at(neg(serviceFeeCharged(Account)), Time)) :-
       comparison(Value, minimumBalance(Account), <),
       holds_at(balance(Account, Value), Time),
       not(happens(chargeServiceFee(Account), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',92).

 /*  [comparison(Value, minimumBalance(Account), <), holds_at(balance(Account, Value), Time), not(happens(chargeServiceFee(Account), Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(serviceFeeCharged(Account), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',92).
axiom(holds_at(serviceFeeCharged(Account), Time),
   
    [ comparison(Value, minimumBalance(Account), <),
      holds_at(balance(Account, Value), Time),
      not(happens(chargeServiceFee(Account), Time))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:97
% [account,time]
% EndOfMonth(time) ->
% Happens(MonthlyReset(account),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:99

 /*  endOfMonth(Time) ->
       happens(monthlyReset(Account), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',99).

 /*  happens(monthlyReset(Account), Time) :-
       endOfMonth(Time).
 */

 /*  [endOfMonth(Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          happens(monthlyReset(Account), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',99).
axiom(happens(monthlyReset(Account), Time),
    [endOfMonth(Time)]).

 /*  not(endOfMonth(Time)) :-
       not(happens(monthlyReset(Account), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',99).

 /*  [not(happens(monthlyReset(Account), Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(endOfMonth(Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',99).
axiom(not(endOfMonth(Time)),
    [not(happens(monthlyReset(Account), Time))]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:101
% Happens(Transfer(Account1,Account2,1),0).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',101).

 /*  [] ->
       ta(Ta_Param,
          tvs1=[start],
          tvs2=[start],
          happens(transfer(account1, account2, 1), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',101).
axiom(happens(transfer(account1, account2, 1), start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:102
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',103).
% Happens(Transfer(Account1,Account2,1),0).

 /*  [] ->
       ta(Ta_Param,
          tvs1=[start],
          tvs2=[start],
          happens(transfer(account1, account2, 1), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',103).
axiom(happens(transfer(account1, account2, 1), start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:104
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',105).
%; Psi
% [account,value1,value2,time]
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:107
% HoldsAt(Balance(account,value1),time) &
% HoldsAt(Balance(account,value2),time) ->
% value1=value2.
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:109
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',107).

 /*  holds_at(balance(Account, Value1), Time), holds_at(balance(Account, Value2), Time) ->
       equals(Value1, Value2).
 */

 /*  not(holds_at(balance(Account, Value1), Time)) :-
       holds_at(balance(Account, Value2), Time),
       not(equals(Value1, Value2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',107).

 /*  [holds_at(balance(Account, Value2), Time), not(equals(Value1, Value2))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(balance(Account, Value1)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',107).
axiom(holds_at(neg(balance(Account, Value1)), Time),
   
    [ holds_at(balance(Account, Value2), Time),
      not(equals(Value1, Value2))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',107).

 /*  not(holds_at(balance(Account, Value2), Time)) :-
       holds_at(balance(Account, Value1), Time),
       not(equals(Value1, Value2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',107).

 /*  [holds_at(balance(Account, Value1), Time), not(equals(Value1, Value2))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(balance(Account, Value2)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',107).
axiom(holds_at(neg(balance(Account, Value2)), Time),
   
    [ holds_at(balance(Account, Value1), Time),
      not(equals(Value2, Value1))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:111
%; Gamma


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:113
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',114).
% !HoldsAt(ServiceFeeCharged(Account1),0).

 /*  [] ->
       ta(Ta_Param,
          tvs1=[start],
          tvs2=[start],
          holds_at(neg(serviceFeeCharged(account1)), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',114).
axiom(holds_at(neg(serviceFeeCharged(account1)), start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:114
% !HoldsAt(ServiceFeeCharged(Account2),0).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',114).

 /*  [] ->
       ta(Ta_Param,
          tvs1=[start],
          tvs2=[start],
          holds_at(neg(serviceFeeCharged(account2)), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',114).
axiom(holds_at(neg(serviceFeeCharged(account2)), start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:115
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',116).
% HoldsAt(Balance(Account1,3),0).

 /*  [] ->
       ta(Ta_Param,
          tvs1=[start],
          tvs2=[start],
          holds_at(balance(account1, 3), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',116).
axiom(holds_at(balance(account1, 3), start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:116
% HoldsAt(Balance(Account2,1),0).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',116).

 /*  [] ->
       ta(Ta_Param,
          tvs1=[start],
          tvs2=[start],
          holds_at(balance(account2, 1), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',116).
axiom(holds_at(balance(account2, 1), start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:117
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',118).
% MinimumBalance(Account1)=3.

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], equals(minimumBalance(account1), 3)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',118).
axiom(equals(minimumBalance(account1), 3),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:118
% MinimumBalance(Account2)=1.
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',118).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], equals(minimumBalance(account2), 1)).
 */
axiom(equals(minimumBalance(account2), 1),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:119
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',120).
% ServiceFee(Account1)=1.

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], equals(serviceFee(account1), 1)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',120).
axiom(equals(serviceFee(account1), 1),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:120
% ServiceFee(Account2)=1.
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',120).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], equals(serviceFee(account2), 1)).
 */
axiom(equals(serviceFee(account2), 1),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:121
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',122).
% [time]
 % !EndOfMonth(time).
 %  not(endOfMonth(Time)).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], not(endOfMonth(Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',122).
axiom(not(endOfMonth(Time)),
    []).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:123
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',124).
% completion Happens
==> completion(happens).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:125
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',126).
% range time 0 3
==> range(time,0,3).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:126
% range value 1 3
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',126).
==> range(value,1,3).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e:127
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter4/BankAccountServiceFee.e',128).
% range offset 1 1
==> range(offset,1,1).
%; End of file.
