:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(pfc).
% Wed, 01 Apr 2020 19:59:44 GMT
% From ../examples/Mueller2006/Chapter14/Vision.pel:4
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/NetBill3.e',185).

 /*  loading(load_e_pl,
   	'/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e').
 */
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @inproceedings{ShanahanRandell:2004,
%;   author = "Murray Shanahan and David A. Randell",
%;   year = "2004",
%;   title = "A logic-based formulation of active visual perception",
%;   editor = "Didier Dubois and Christopher A. Welty and Mary-Anne Williams",
%;   booktitle = "\uppercase{P}roceedings of the \uppercase{N}inth \uppercase{I}nternational \uppercase{C}onference on \uppercase{P}rinciples of \uppercase{K}nowledge \uppercase{R}epresentation and \uppercase{R}easoning",
%;   pages = "64--72",
%;   address = "Menlo Park, CA",
%;   publisher = "AAAI Press",
%; }
%;
%; @book{Mueller:2006,
%;   author = "Erik T. Mueller",
%;   year = "2006",
%;   title = "Commonsense Reasoning",
%;   address = "San Francisco",
%;   publisher = "Morgan Kaufmann/Elsevier",
%; }
%;

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:30
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',31).
% option modeldiff on
:- set_ec_option(modeldiff, on).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:32
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',33).
% load foundations/Root.e
:- load_e('foundations/Root.e', changed).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:33
% load foundations/EC.e
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',33).
:- load_e('foundations/EC.e', changed).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:35
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',36).
% sort object
==> sort(object).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:36
% sort shape
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',36).
==> sort(shape).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:37
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',38).
% sort aspect
==> sort(aspect).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:39
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',40).
% object Object1
==> t(object,object1).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:40
% aspect Aspect1, Aspect2, Aspect3
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',40).
==> t(aspect,aspect1).
==> t(aspect,aspect2).
==> t(aspect,aspect3).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:41
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',42).
% shape Shape1, Shape2
==> t(shape,shape1).
==> t(shape,shape2).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:43
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',44).
% predicate Shape(object,shape)
predicate(shape(object,shape)).
==> mpred_prop(shape(object,shape),predicate).
==> meta_argtypes(shape(object,shape)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:44
% predicate Arc(shape,aspect,aspect)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',44).
predicate(arc(shape,aspect,aspect)).
==> mpred_prop(arc(shape,aspect,aspect),predicate).
==> meta_argtypes(arc(shape,aspect,aspect)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:45
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',46).
% fluent Aspect(object,aspect)
fluent(aspect(object,aspect)).
==> mpred_prop(aspect(object,aspect),fluent).
==> meta_argtypes(aspect(object,aspect)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:46
% event Change(object,aspect,aspect)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',46).
event(change(object,aspect,aspect)).
==> mpred_prop(change(object,aspect,aspect),event).
==> meta_argtypes(change(object,aspect,aspect)).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:48
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',49).
%; Sigma
% [object,aspect1,aspect2,shape,time]
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:51
% HoldsAt(Aspect(object,aspect1),time) &
% Shape(object,shape) &
% (Arc(shape,aspect1,aspect2) |
%  Arc(shape,aspect2,aspect1)) ->
% Initiates(Change(object,aspect1,aspect2),Aspect(object,aspect2),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:55
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',51).

 /*  [holds_at(aspect(Object, Aspect1), Time), shape(Object, Shape),  (arc(Shape, Aspect1, Aspect2);arc(Shape, Aspect2, Aspect1))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(change(Object, Aspect1, Aspect2),
                    aspect(Object, Aspect2),
                    Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',51).
axiom(initiates(change(Object, Aspect1, Aspect2), aspect(Object, Aspect2), Time),
   
    [ holds_at(aspect(Object, Aspect1), Time),
      shape(Object, Shape),
       (arc(Shape, Aspect1, Aspect2);arc(Shape, Aspect2, Aspect1))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:57
% [object,aspect1,aspect2,shape,time]
% HoldsAt(Aspect(object,aspect1),time) &
% Shape(object,shape) &
% (Arc(shape,aspect1,aspect2) |
%  Arc(shape,aspect2,aspect1)) ->
% Terminates(Change(object,aspect1,aspect2),Aspect(object,aspect1),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:62
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',59).

 /*  [holds_at(aspect(Object, Aspect1), Time), shape(Object, Shape),  (arc(Shape, Aspect1, Aspect2);arc(Shape, Aspect2, Aspect1))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(change(Object, Aspect1, Aspect2),
                     aspect(Object, Aspect1),
                     Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',59).
axiom(terminates(change(Object, Aspect1, Aspect2), aspect(Object, Aspect1), Time),
   
    [ holds_at(aspect(Object, Aspect1), Time),
      shape(Object, Shape),
       (arc(Shape, Aspect1, Aspect2);arc(Shape, Aspect2, Aspect1))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:64
%; preconditions (added)
% [object,aspect1,aspect2,time]
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:67
% Happens(Change(object,aspect1,aspect2),time) ->
% HoldsAt(Aspect(object,aspect1),time).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',67).

 /*  happens(change(Object, Aspect1, Aspect2), Time) ->
       holds_at(aspect(Object, Aspect1), Time).
 */

 /*  holds_at(aspect(Object, Aspect1), Time) :-
       happens(change(Object, Aspect1, Aspect2), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',67).

 /*  [holds_at(metreqs(change(Object, Aspect1, Aspect2)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          requires(change(Object, Aspect1, Aspect2), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',67).
axiom(requires(change(Object, Aspect1, Aspect2), Time),
   
    [ holds_at(metreqs(change(Object, Aspect1, Aspect2)),
               Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',67).

 /*  [holds_at(aspect(Object, Aspect1), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(metreqs(change(Object, Aspect1, Aspect2)),
                   Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',67).
axiom(holds_at(metreqs(change(Object, Aspect1, Aspect2)), Time),
    [holds_at(aspect(Object, Aspect1), Time)]).

 /*  not(happens(change(Object, Aspect1, Aspect2), Time)) :-
       not(holds_at(aspect(Object, Aspect1), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',67).

 /*  [holds_at(neg(aspect(Object, Aspect1)), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(change(Object, Aspect1, Aspect2),
                      Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',67).
axiom(not(happens(change(Object, Aspect1, Aspect2), Time)),
    [holds_at(neg(aspect(Object, Aspect1)), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:70
% [object,aspect1,aspect2,aspect3,time]
% Happens(Change(object,aspect1,aspect2),time) &
% Happens(Change(object,aspect1,aspect3),time) ->
% aspect2=aspect3.
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:73
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',72).

 /*  happens(change(Object, Aspect1, Aspect2), Time), happens(change(Object, Aspect1, Aspect3), Time) ->
       equals(Aspect2, Aspect3).
 */

 /*  not(happens(change(Object, Aspect1, Aspect2), Time)) :-
       happens(change(Object, Aspect1, Aspect3), Time),
       not(equals(Aspect2, Aspect3)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',72).

 /*  [happens(change(Object, Aspect1, Aspect3), Time), not(equals(Aspect2, Aspect3))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(change(Object, Aspect1, Aspect2),
                      Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',72).
axiom(not(happens(change(Object, Aspect1, Aspect2), Time)),
   
    [ happens(change(Object, Aspect1, Aspect3), Time),
      not(equals(Aspect2, Aspect3))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',72).

 /*  not(happens(change(Object, Aspect1, Aspect3), Time)) :-
       happens(change(Object, Aspect1, Aspect2), Time),
       not(equals(Aspect2, Aspect3)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',72).

 /*  [happens(change(Object, Aspect1, Aspect2), Time), not(equals(Aspect2, Aspect3))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          not(happens(change(Object, Aspect1, Aspect3),
                      Time))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',72).
axiom(not(happens(change(Object, Aspect1, Aspect3), Time)),
   
    [ happens(change(Object, Aspect1, Aspect2), Time),
      not(equals(Aspect3, Aspect2))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:75
%; Psi
% [object,shape1,shape2]
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:78
% Shape(object,shape1) &
% Shape(object,shape2) ->
% shape1=shape2.
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:80
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',78).

 /*  shape(Object, Shape1), shape(Object, Shape2) ->
       equals(Shape1, Shape2).
 */

 /*  not(shape(Object, Shape1)) :-
       shape(Object, Shape2),
       not(equals(Shape1, Shape2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',78).

 /*  [shape(Object, Shape2), not(equals(Shape1, Shape2))] ->
       ta(Ta_Param, tvs1=[], tvs2=[], not(shape(Object, Shape1))).
 */
axiom(not(shape(Object, Shape1)),
    [shape(Object, Shape2), not(equals(Shape1, Shape2))]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',78).

 /*  not(shape(Object, Shape2)) :-
       shape(Object, Shape1),
       not(equals(Shape1, Shape2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',78).

 /*  [shape(Object, Shape1), not(equals(Shape1, Shape2))] ->
       ta(Ta_Param4, tvs1=[], tvs2=[], not(shape(Object, Shape2))).
 */
axiom(not(shape(Object, Shape2)),
    [shape(Object, Shape1), not(equals(Shape2, Shape1))]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:82
% [object,aspect1,aspect2,time]
% HoldsAt(Aspect(object,aspect1),time) &
% HoldsAt(Aspect(object,aspect2),time) ->
% aspect1=aspect2.
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:85
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',84).

 /*  holds_at(aspect(Object, Aspect1), Time), holds_at(aspect(Object, Aspect2), Time) ->
       equals(Aspect1, Aspect2).
 */

 /*  not(holds_at(aspect(Object, Aspect1), Time)) :-
       holds_at(aspect(Object, Aspect2), Time),
       not(equals(Aspect1, Aspect2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',84).

 /*  [holds_at(aspect(Object, Aspect2), Time), not(equals(Aspect1, Aspect2))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(aspect(Object, Aspect1)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',84).
axiom(holds_at(neg(aspect(Object, Aspect1)), Time),
   
    [ holds_at(aspect(Object, Aspect2), Time),
      not(equals(Aspect1, Aspect2))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',84).

 /*  not(holds_at(aspect(Object, Aspect2), Time)) :-
       holds_at(aspect(Object, Aspect1), Time),
       not(equals(Aspect1, Aspect2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',84).

 /*  [holds_at(aspect(Object, Aspect1), Time), not(equals(Aspect1, Aspect2))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(aspect(Object, Aspect2)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',84).
axiom(holds_at(neg(aspect(Object, Aspect2)), Time),
   
    [ holds_at(aspect(Object, Aspect1), Time),
      not(equals(Aspect2, Aspect1))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:87
% [aspect1,aspect2]
% Arc(Shape1,aspect1,aspect2) <->
% (aspect1=Aspect1 & aspect2=Aspect2).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:89

 /*  arc(shape1, Aspect1, Aspect2) <->
       equals(Aspect1, aspect1),
       equals(Aspect2, aspect2).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',89).

 /*  [arc, shape1] <->
       [equals, aspect1, equals, aspect2].
 */

 /*  arc(shape1, Aspect1, Aspect2) ->
       equals(Aspect1, aspect1),
       equals(Aspect2, aspect2).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',89).

 /*  not(arc(shape1, Aspect1, Aspect2)) :-
       (   not(equals(Aspect1, aspect1))
       ;   not(equals(Aspect2, aspect2))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',89).

 /*  [(not(equals(Aspect1, aspect1));not(equals(Aspect2, aspect2)))] ->
       ta(Ta_Param,
          tvs1=[],
          tvs2=[],
          not(arc(shape1, Aspect1, Aspect2))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',89).
axiom(not(arc(shape1, Aspect1, Aspect2)),
    [(not(equals(Aspect1, aspect1));not(equals(Aspect2, aspect2)))]).

 /*  equals(Aspect1, aspect1), equals(Aspect2, aspect2) ->
       arc(shape1, Aspect1, Aspect2).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',89).

 /*  arc(shape1, Aspect1, Aspect2) :-
       equals(Aspect1, aspect1),
       equals(Aspect2, aspect2).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',89).

 /*  [equals(Aspect1, aspect1), equals(Aspect2, aspect2)] ->
       ta(Ta_Param3,
          tvs1=[],
          tvs2=[],
          arc(shape1, Aspect1, Aspect2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',89).
axiom(arc(shape1, Aspect1, Aspect2),
    [equals(Aspect1, aspect1), equals(Aspect2, aspect2)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:91
% [aspect1,aspect2]
% Arc(Shape2,aspect1,aspect2) <->
% ((aspect1=Aspect1 & aspect2=Aspect3) |
%  (aspect1=Aspect3 & aspect2=Aspect2)).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:94
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',93).

 /*  arc(shape2, Aspect1, Aspect2) <->
       (   equals(Aspect1, aspect1),
           equals(Aspect2, aspect3)
       ;   equals(Aspect1, aspect3),
           equals(Aspect2, aspect2)
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',93).

 /*  [arc, shape2] <->
       [;, equals, aspect1, equals, aspect3, equals, aspect3, equals, aspect2].
 */

 /*  arc(shape2, Aspect1, Aspect2) ->
       (   equals(Aspect1, aspect1),
           equals(Aspect2, aspect3)
       ;   equals(Aspect1, aspect3),
           equals(Aspect2, aspect2)
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',93).

 /*  not(arc(shape2, Aspect1, Aspect2)) :-
       (   not(equals(Aspect1, aspect1))
       ;   not(equals(Aspect2, aspect3))
       ),
       (   not(equals(Aspect1, aspect3))
       ;   not(equals(Aspect2, aspect2))
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',93).

 /*  [(not(equals(Aspect1, aspect1));not(equals(Aspect2, aspect3))),  (not(equals(Aspect1, aspect3));not(equals(Aspect2, aspect2)))] ->
       ta(Ta_Param,
          tvs1=[],
          tvs2=[],
          not(arc(shape2, Aspect1, Aspect2))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',93).
axiom(not(arc(shape2, Aspect1, Aspect2)),
   
    [  (not(equals(Aspect1, aspect1));not(equals(Aspect2, aspect3))),
       (not(equals(Aspect1, aspect3));not(equals(Aspect2, aspect2)))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',93).

 /*  equals(Aspect1, aspect1), equals(Aspect2, aspect3);equals(Aspect1, aspect3), equals(Aspect2, aspect2) ->
       arc(shape2, Aspect1, Aspect2).
 */

 /*  arc(shape2, Aspect1, Aspect2) :-
       (   equals(Aspect1, aspect1),
           equals(Aspect2, aspect3)
       ;   equals(Aspect1, aspect3),
           equals(Aspect2, aspect2)
       ).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',93).

 /*  [(equals(Aspect1, aspect1), equals(Aspect2, aspect3);equals(Aspect1, aspect3), equals(Aspect2, aspect2))] ->
       ta(Ta_Param3,
          tvs1=[],
          tvs2=[],
          arc(shape2, Aspect1, Aspect2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',93).
axiom(arc(shape2, Aspect1, Aspect2),
   
    [  (equals(Aspect1, aspect1), equals(Aspect2, aspect3);equals(Aspect1, aspect3), equals(Aspect2, aspect2))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:96
%; Gamma


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:98
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',99).
% HoldsAt(Aspect(Object1,Aspect1),0).

 /*  [] ->
       ta(Ta_Param,
          tvs1=[start],
          tvs2=[start],
          holds_at(aspect(object1, aspect1), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',99).
axiom(holds_at(aspect(object1, aspect1), start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:99
% HoldsAt(Aspect(Object1,Aspect2),1).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',99).

 /*  [b(start, Time), ignore(start+1==Time)] ->
       ta(Ta_Param,
          tvs1=[start+1],
          tvs2=[Time, start],
          holds_at(aspect(object1, aspect2), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',99).
axiom(holds_at(aspect(object1, aspect2), Time),
    [b(start, Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:101
%;completion Delta Happens

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:103
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',104).
% range time 0 1
==> range(time,0,1).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e:104
% range offset 1 1
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2006/Chapter14/Vision.e',104).
==> range(offset,1,1).
%; End of file.
