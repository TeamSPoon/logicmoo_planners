:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(pfc).
% Wed, 01 Apr 2020 20:00:33 GMT
% From ../examples/Mueller2004a/Leaf.pel:4
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Holding.e',49).

 /*  loading(load_e_pl,
   	'/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e').
 */
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{Mueller:2004a,
%;   author = "Erik T. Mueller",
%;   year = "2004",
%;   title = "Event calculus reasoning through satisfiability",
%;   journal = "Journal of Logic and Computation",
%;   volume = "14",
%;   number = "5",
%;   pages = "703--730",
%; }
%;

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:21
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',22).
% option trajectory on
:- set_ec_option(trajectory, on).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:23
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',24).
% load foundations/Root.e
:- load_e('foundations/Root.e', changed).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:24
% load foundations/EC.e
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',24).
:- load_e('foundations/EC.e', changed).
:- if(is_e_toplevel).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:26
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',27).
% sort object
==> sort(object).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:27
% sort height: integer
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',27).
==> subsort(height,integer).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:29
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',30).
% fluent Height(object,height)
fluent(height(object,height)).
==> mpred_prop(height(object,height),fluent).
==> meta_argtypes(height(object,height)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:30
% fluent Falling(object)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',30).
fluent(falling(object)).
==> mpred_prop(falling(object),fluent).
==> meta_argtypes(falling(object)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:31
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',32).
% event StartFalling(object)
event(startFalling(object)).
==> mpred_prop(startFalling(object),event).
==> meta_argtypes(startFalling(object)).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:32
% event HitsGround(object)
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',32).
event(hitsGround(object)).
==> mpred_prop(hitsGround(object),event).
==> meta_argtypes(hitsGround(object)).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:34
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',35).
% [object,height1,height2,time]
% HoldsAt(Height(object,height1),time) &
% HoldsAt(Height(object,height2),time) ->
% height1=height2.
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:37
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',35).

 /*  holds_at(height(Object, Height1), Time), holds_at(height(Object, Height2), Time) ->
       equals(Height1, Height2).
 */

 /*  not(holds_at(height(Object, Height1), Time)) :-
       holds_at(height(Object, Height2), Time),
       not(equals(Height1, Height2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',35).

 /*  [holds_at(height(Object, Height2), Time), not(equals(Height1, Height2))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(height(Object, Height1)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',35).
axiom(holds_at(neg(height(Object, Height1)), Time),
   
    [ holds_at(height(Object, Height2), Time),
      not(equals(Height1, Height2))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',35).

 /*  not(holds_at(height(Object, Height2), Time)) :-
       holds_at(height(Object, Height1), Time),
       not(equals(Height1, Height2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',35).

 /*  [holds_at(height(Object, Height1), Time), not(equals(Height1, Height2))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(height(Object, Height2)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',35).
axiom(holds_at(neg(height(Object, Height2)), Time),
   
    [ holds_at(height(Object, Height1), Time),
      not(equals(Height2, Height1))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:39
% [object,time]
% Initiates(StartFalling(object),Falling(object),time).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',41).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(startFalling(Object), falling(Object), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',41).
axiom(initiates(startFalling(Object), falling(Object), Time),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:42
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',43).
% [object,height,time]
% Releases(StartFalling(object),Height(object,height),time).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          releases(startFalling(Object),
                   height(Object, Height),
                   Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',43).
axiom(releases(startFalling(Object), height(Object, Height), Time),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:45
% [object,height1,height2,offset,time]
% HoldsAt(Height(object,height1),time) &
% height2=height1-offset*offset ->
% Trajectory(Falling(object),time,Height(object,height2),offset).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:48
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',47).

 /*  holds_at(height(Object, Height1), Time), equals(Height2, Height1-Offset*Offset) ->
       trajectory(falling(Object),
                  Time,
                  height(Object, Height2),
                  Offset).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',47).

 /*  trajectory(falling(Object), Time, height(Object, Height2), Offset) :-
       holds_at(height(Object, Height1), Time),
       equals(Height2, Height1-Offset*Offset).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',47).

 /*  [holds_at(height(Object, Height1), Time), equals(Height2, Height1-Offset*Offset)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          trajectory(falling(Object),
                     Time,
                     height(Object, Height2),
                     Offset)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',47).
axiom(trajectory(falling(Object), Time, height(Object, Height2), Offset),
   
    [ holds_at(height(Object, Height1), Time),
      equals(Height2, Height1-Offset*Offset)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',47).

 /*  not(holds_at(height(Object, Height1), Time)) :-
       equals(Height2, Height1-Offset*Offset),
       not(trajectory(falling(Object),
                      Time,
                      height(Object, Height2),
                      Offset)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',47).

 /*  [equals(Height2, Height1-Offset*Offset), not(trajectory(falling(Object), Time, height(Object, Height2), Offset))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(height(Object, Height1)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',47).
axiom(holds_at(neg(height(Object, Height1)), Time),
   
    [ equals(Height2, Height1-Offset*Offset),
      not(trajectory(falling(Object),
                     Time,
                     height(Object, Height2),
                     Offset))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:50
% [object,time]
% HoldsAt(Falling(object),time) &
% HoldsAt(Height(object,0),time) ->
% Happens(HitsGround(object),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:53
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',52).

 /*  holds_at(falling(Object), Time), holds_at(height(Object, 0), Time) ->
       happens(hitsGround(Object), Time).
 */

 /*  happens(hitsGround(Object), Time) :-
       holds_at(falling(Object), Time),
       holds_at(height(Object, 0), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',52).

 /*  [holds_at(falling(Object), Time), holds_at(height(Object, 0), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          happens(hitsGround(Object), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',52).
axiom(happens(hitsGround(Object), Time),
   
    [ holds_at(falling(Object), Time),
      holds_at(height(Object, 0), Time)
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',52).

 /*  not(holds_at(falling(Object), Time)) :-
       holds_at(height(Object, 0), Time),
       not(happens(hitsGround(Object), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',52).

 /*  [holds_at(height(Object, 0), Time), not(happens(hitsGround(Object), Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(falling(Object)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',52).
axiom(holds_at(neg(falling(Object)), Time),
   
    [ holds_at(height(Object, 0), Time),
      not(happens(hitsGround(Object), Time))
    ]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',52).

 /*  not(holds_at(height(Object, 0), Time)) :-
       holds_at(falling(Object), Time),
       not(happens(hitsGround(Object), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',52).

 /*  [holds_at(falling(Object), Time), not(happens(hitsGround(Object), Time))] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(height(Object, 0)), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',52).
axiom(holds_at(neg(height(Object, 0)), Time),
   
    [ holds_at(falling(Object), Time),
      not(happens(hitsGround(Object), Time))
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:55
%;[object,height1,height2,time]
%;HoldsAt(Height(object,height1),time) &
%;height1 != height2 ->
%;Terminates(HitsGround(object),Height(object,height2),time).
% [object,height,time]
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:61
% HoldsAt(Height(object,height),time) ->
% Initiates(HitsGround(object),Height(object,height),time).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',61).

 /*  [holds_at(height(Object, Height), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(hitsGround(Object),
                    height(Object, Height),
                    Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',61).
axiom(initiates(hitsGround(Object), height(Object, Height), Time),
    [holds_at(height(Object, Height), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:64
% [object,time]
% Terminates(HitsGround(object),Falling(object),time).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',66).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(hitsGround(Object), falling(Object), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',66).
axiom(terminates(hitsGround(Object), falling(Object), Time),
    []).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:67
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',68).
% object Leaf
==> t(object,leaf).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:69
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',70).
% !HoldsAt(Falling(Leaf),0).

 /*  [] ->
       ta(Ta_Param,
          tvs1=[start],
          tvs2=[start],
          holds_at(neg(falling(leaf)), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',70).
axiom(holds_at(neg(falling(leaf)), start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:70
% HoldsAt(Height(Leaf,9),0).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',70).

 /*  [] ->
       ta(Ta_Param,
          tvs1=[start],
          tvs2=[start],
          holds_at(height(leaf, 9), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',70).
axiom(holds_at(height(leaf, 9), start),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:71
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',72).
% Happens(StartFalling(Leaf),0).

 /*  [] ->
       ta(Ta_Param,
          tvs1=[start],
          tvs2=[start],
          happens(startFalling(leaf), start)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',72).
axiom(happens(startFalling(leaf), start),
    []).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:73
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',74).
% completion Happens
==> completion(happens).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:75
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',76).
% range time 0 4
==> range(time,0,4).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:76
% range offset 1 9
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',76).
==> range(offset,1,9).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e:77
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Mueller2004a/Leaf.e',78).
% range height 0 9
==> range(height,0,9).
%; End of file.
